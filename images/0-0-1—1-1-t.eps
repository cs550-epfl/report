%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: (0,0,1)-(1,1,t).pdf
%%Creator: Adobe Acrobat 24.1.0
%%For: yy010
%%CreationDate: 2024/12/26, 17:42:34
%%BoundingBox: -1 0 553 276
%%HiResBoundingBox: 0 0 552.7198 275.8799
%%CropBox: 0 0 552.7198 275.8799
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1037 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.675d0f7, 2023/06/11-19:21:16        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2024-12-26T17:42:24+01:00"
   xmp:CreateDate="2024-12-26T17:24:21+01:00"
   xmp:MetadataDate="2024-12-26T17:42:24+01:00"
   xmp:CreatorTool="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:abca8a37-cb4e-46d8-a189-251fefccfd7f"
   xmpMM:InstanceID="uuid:efe07f0b-369f-4e6e-a5c3-c946986ac620"
   pdf:Producer="Skia/PDF m131">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">pix</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -275.88 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-3.05176e-05 0 mo
-3.05176e-05 275.88 li
552.72 275.88 li
552.72 0 li
cp
clp
-252 -532.44 mo
1549.5 -532.44 li
1549.5 1269.06 li
-252 1269.06 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
-252 -532.44 mo
1549.5 -532.44 li
1549.5 1269.06 li
-252 1269.06 li
cp
f
-252 -532.44 mo
1549.5 -532.44 li
1549.5 1269.06 li
-252 1269.06 li
cp
f
-252 -532.44 mo
1546.5 -532.44 li
1546.5 1266.06 li
-252 1266.06 li
cp
f
.749844 .679255 .654902 .901945 cmyk
%ADOBeginSubsetFont: JHAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /JHAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f326ce7be28000000cc000000606376
7420adbfdf8e0000012c0000066e6670676d38a5162b0000079c00000bb0
676c7966a9995d6300002508000024f268656164f27962f50000134c0000
003668686561123309210000138400000024686d7478584309ba000013a8
000001606c6f63610ffb07bd00001508000000b26d617870064e0ff20000
15bc000000206e616d653bfa5ac1000015dc000002fa70726570a1b2e8ea
000018d800000c2f67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
02020202020400000003000000000000000000000000544d432000400020
00a005d3fe510133073e01b2400001ffffff0000042605bb000000200015
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
0471048304f9008c00910096009b00a000a500aa00af00b400b90000405b
8574737271706f6e6d6c6b6a6968676665625d58575655544f4e41403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8022323701020b802234520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c4b5258b00425b0042549b00425b00425496120b0005458212043b00055
58b00325b00325b8ffc038b8ffc038591bb04054582043b0005458b00225
b8ffc038591b2043b0005458b00325b00325b8ffc038b8ffc0381bb00325
b8ffc03859595959212121212d2c462346608a8a462320468a608a61b8ff
8062232010238ab902c202c28a70456020b0005058b00161b8ffba8b1bb0
468c59b0106068013a2d2c2320b000508a8a64b10003255458b0401bb101
03255458b037438b59b04f2b5923b0622b2321235865592d2cb13a000c21
5460432d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b202800243604259b12801885158b94000080063b81000885458ba000201
00000243604259595959595959b10002435458400a37403a403b403e023f
021bb10102435458b237403aba0100003b0100b33e013f011bb180024352
58b237403ab80180b13b401bb901000002435258b237403aba0180003b01
401bb901800002435258b237403ab80200b13b401bb237403aba0100003b
0100595959b9400000808855b94000020063b8040088555a58b33e003f01
1bb33e003f0159595942424242422d2cb0024354584b53234b515a58381b
2121591b21212121592d2cb0572b580c028a4b53b004264b515a580a381b
0a2121591b21212121592d2c20b0024354b00123b05f237821b1000243b0
56237921b0024323b020205c58212121b100471c598a8a208a208a23b810
00635658b81000635658212121b1012c1c591b2159b08062205c58212121
b1001b1c5923b08062205c58212121b1000c1c598ab00161b8ffb31c2321
2d2c20b0024354b00123b07b237821b1000243b072237921b10002438ab0
20205c58212121b0631c598a8a208a208a23b81000635658b81000635658
b00426b0015bb00426b00426b004261b21212121b13600231c591b2159b0
042623b08062205c588a5c8a5a23212321b01d1c598ab08062205c582121
2321b00e1c59b00426b00161b8ff981c23212d2c012d2cb0022563b02060
66b00225b82000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b03543525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b03543525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12501885058b940
00020063b8040088545cb0124b525b1bb001592d000100000007028f78e0
84695f0f3cf5081b080000000000a2e3272a00000000ddb2ee86faaffd67
1000085100000009000100000000000000010000073efe4e00431000faaf
fa7a10000001000000000000000000000000000000580600010000000000
000000000239000000000000000000000000000000000000000000000000
00000000000002aa007c02aa007c0000000000000000023900aa00000000
000000000000000004730055047300df0473003c00000000000000000000
000000000000000000000000000000000000000000000000000004ac0070
0000000004ac007000000000000000000000000000000000000000000000
000000000000000000000639006d00000000000000000000000000000000
000000000000000000000000000000000556009e00000000000000000000
00000000000005c700a10000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004000050047300460473004b00000000000000000000000001c70088
000000000000000000000000000000000473008704730044000000000000
000002aa00850400003f0239002400000036003600360036003600360036
0036003600360036007f00db00db00db0122012201220122025402f10436
0436043604360436043604360436043604360488048804dc04dc04dc04dc
04dc04dc04dc04dc04dc05ee05ee05ee05ee05ee05ee05ee05ee05ee06af
06af06af06af06af07720772077207720772077207720772077207720772
07720772077208cf0a080b490b490b490b490c610c610c610c610c610d78
0ea30ea30ea30f45119c1279000000010000005802b5003c00ca00070002
001000400086000005170c2f0005000200000007005a0003000104090000
021e00820003000104090001000a00780003000104090002000e006a0003
000104090003004400260003000104090004000a00780003000104090005
0018000e0003000104090006000e00000041007200690061006c004d0054
00560065007200730069006f006e00200037002e00300031004d006f006e
006f0074007900700065003a0041007200690061006c0020005200650067
0075006c0061007200200028004d006900630072006f0073006f00660074
00290052006500670075006c006100720041007200690061006c00a90020
003200300031003700200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e0020000d000a000d000a0048006500620072
006500770020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200063006f007000790072
0069006700680074002000a9002000320030003000330020002600200032
003000300037002c002000520061006c00700068002000480061006e0063
006f0063006b002000260020004a006f0068006e00200048007500640073
006f006e002e002000540068006900730020006c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020006900730020
006f00700065006e00200073006f007500720063006500200073006f0066
0074007700610072006500200075006e0064006500720020007400680065
0020004d004900540020004c006900630065006e00730065003b00200073
0065006500200065006d0062006500640064006500640020006c00690063
0065006e007300650020006400650073006300720069007000740069006f
006e00200066006f0072002000640065007400610069006c0073002e0000
b15485410b032c032c032c0222001d001f032b032a003c001f032ab2061d
1fb80328b326181fd0bc032900e0032900020329b22b1d1fb90327031db2
3b1f40b80323b31215320f412d03200001002f0320000100200320006f03
2000af032000bf03200004005f031e00010010031e007f031e0080031e00
af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e00
9f031e00e0031e0006031d031cb2201f1041270319007f03190002000f03
1700ef031700ff03170003001f0317002f0317004f0317005f0317008f03
17009f03170006000f0317005f0317006f0317007f031700bf031700f003
17000600400317b2923340b80317b28b3340b80317b36a6c3240b80317b2
613340b80317b35c5d3240b80317b357593240b80317b34d513240b80317
b344493240b80317b23a3340b80317b331343240b80317b32e423240b803
17b3272c3240b80317b312253280b80317b30a0d32c04116031600d00316
000200700316000102c4000f0101001f00a0031500b0031500020306000f
0101001f00400312b32426329fbf03040001030203010064001fffc00301
b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e1132
9f414a02e200af02e200bf02e2000302e202e202e102e1007f02e0000100
1002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002
df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02
dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02
dc000202dc02dc001002db000102db02db000f02da000102da02daffc002
d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b217
1b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb0322
003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400
b002d40002000002d4001002d4002002d4005002d4006002d4007002d400
06006002d6007002d6008002d6009002d600a002d600b002d60006000002
d6001002d6002002ca002002cc002002d6003002d6004002d6005002d600
0802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c80017
001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6
b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b324
121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf00
8f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e9080000
1f02a600a20800406a1f4026434932402043493240263a3d3240203a3d32
9f209f26024026969932402096993240268e923240208e92324026848c32
4020848c3240267a813240207a813240266c763240206c76324026646a32
4020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb724
271f374f6b0120410f027700300277004002770050027700040277027702
7700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc01805201
80a201806501807e01808101803c01805e01802b01801c01801e01804001
80bb0138000100800140b40180400180bb013800010080013940180180ca
0180ad018073018026018025018024018020013740b80221b2493340b802
21b2453340b80221b341423240b80221b33d3e320f410f0221003f022100
7f0221000300bf022100cf022100ff0221000300400221b320223240b802
21b3191e3240b80222b32a3f3240b80221b32e3a326f414a02c3007f02c3
008f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f
02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f0222
0001000f0222002f0222003f0222005f0222007f022200ef0222000600bf
022100ef02210002006f0221007f022100af02210003000f0221002f0221
003f0221004f0221000402c302c30222022202210221401d101c102b1048
038f1c010f1e014f1eff1e023700161600000012110811b8010db6f70df8
f70d00094109028e028f001d001f0290028f001d001f028fb2f91d1fb801
98b226bb1f41150197001e0401001f013900260125001f01380073040100
1f0135001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1f
ba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b2
1fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b802
01b61fb91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c
471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c
891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b6
1f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b41f
35555537b80168402c07960758074f07360732072c0721071f071d071b07
1408120810080e080c080a080808060804080208000814b8ffe0402b0000
010014061000000100060400000100041000000100100200000100020000
0001000002010802004a00b013034b024b5342014bb0c063004b6220b0f6
5323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b
4bb007505b58b101018e59b0382bb00288b801005458b801ffb101018e85
1bb0124358b900010111858d1bb900010128858d5959001816763f183f12
3e113946443e113946443e113946443e113946443e11394660443e113946
60442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1d42b0
964b5358b235aaaa1d4259b0324b5358b235ffff1d42594bb09353205c58
b901f201f04544b901f101f045445958b9033e01f2455258b901f2033e44
59594bb8015653205c58b9002001f14544b9002601f145445958b9081e00
20455258b90020081e4459594bb8019a53205c58b9002501f24544b90024
01f245445958b909090025455258b9002509094459594bb8040153205c58
b173244544b1242445445958b917200073455258b9007317204459594bb8
040153205c58b1ca254544b1252545445958b9168000ca455258b900ca16
804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c4552
58b9001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b901
89001c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c
45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b65422b2b01b33b59635c456523456023456560234560b08b766818b080
622020b163594565234520b003266062636820b003266165b059236544b0
63234420b13b5c4565234520b003266062636820b003266165b05c236544
b03b2344b1005c455458b15c406544b23b403b4523614459b34750343745
6523456023456560234560b089766818b080622020b134504565234520b0
03266062636820b003266165b050236544b034234420b147374565234520
b003266062636820b003266165b037236544b0472344b10037455458b137
406544b24740474523614459004b5342014b5058b108004259435c58b108
004259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba
040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba040004
00000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b
2b59b0102342b0112342002b747573750018456944456944456944737373
7374757374752b2b2b2b74752b2b2b2b2b73737373737373737373737373
7373737373737373737373732b2b2b45b0406144737400004bb02a534bb0
3f515a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ff
c0604459004bb02e534bb03a515a58b1030345b040604459004bb02e534b
b03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b0
1e4b5402b0124b545ab012435c5a58ba009f02220001007359002b747301
2b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b2b004569
447345694473456944737475456944734569444569444569447374456944
456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b
2b737475732b7374757374752b2b2b742b002b2b2b00184569442b5c5841
0e0336032f0041001f0330032f002d001f032d032f0032001f0332032f40
12261f0302371f0908371f0b0a441f0706441f2b2b2b2b2b2b2b2b592b00
00>
[9459 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> JHAAAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>JHAAAA+ArialMT AddT42Char 
JHAAAA+ArialMT /CharStrings get begin
/space 3 def
end
JHAAAA+ArialMT /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/UUNUIF+ArialMT /JHAAAA+ArialMT findfont ct_VMDictPut
/UUNUIF+ArialMT*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
UUNUIF+ArialMT nf
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-180.75 -448.44 mo
( )sh
-180.75 1109.31 mo
( )sh
-180.75 1125.06 mo
( )sh
gsave
-180.75 -524.94 mo
1475.25 -524.94 li
1475.25 -460.44 li
-180.75 -460.44 li
cp
eclp
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-180.75 -512.94 mo
( )sh
grestore
gsave
-180.75 1203.81 mo
1475.25 1203.81 li
1475.25 1266.06 li
-180.75 1266.06 li
cp
eclp
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-180.75 1215.81 mo
( )sh
grestore
gsave
-252 -532.44 mo
1549.5 -532.44 li
1549.5 1269.06 li
-252 1269.06 li
cp
eclp
-252 1269.06 mo
1546.5 1269.06 li
1546.5 3067.56 li
-252 3067.56 li
cp
0 0 0 0 cmyk
f
grestore
-180.75 -444.69 mo
1475.25 -444.69 li
1475.25 -59.19 li
-180.75 -59.19 li
cp
0 0 0 0 cmyk
f
gsave
-180.75 -444.69 mo
1475.25 -444.69 li
1475.25 -59.1899 li
-180.75 -59.1899 li
cp
eclp
.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
254.025 -385.44 mo
254.085 -122.565 li
.428534 .348058 .352331 .0131533 cmyk
@
78.7792 -242.805 mo
83.2792 -242.805 li
83.2792 -242.055 li
78.7792 -242.055 li
78.7792 -242.805 li
cp
87.7792 -242.805 mo
92.2792 -242.805 li
92.2792 -242.055 li
87.7792 -242.055 li
87.7792 -242.805 li
cp
96.7792 -242.805 mo
101.279 -242.805 li
101.279 -242.055 li
96.7792 -242.055 li
96.7792 -242.805 li
cp
105.779 -242.805 mo
110.279 -242.805 li
110.279 -242.055 li
105.779 -242.055 li
105.779 -242.805 li
cp
114.779 -242.805 mo
114.96 -242.805 li
116.7 -242.805 118.005 -242.052 118.877 -240.545 cv
118.228 -240.169 li
117.501 -241.426 116.411 -242.055 114.96 -242.055 cv
114.779 -242.055 li
114.779 -242.805 li
cp
119.482 -235.937 mo
119.482 -231.437 li
118.732 -231.437 li
118.732 -235.937 li
119.482 -235.937 li
cp
119.482 -226.937 mo
119.482 -222.437 li
118.732 -222.437 li
118.732 -226.937 li
119.482 -226.937 li
cp
119.482 -217.937 mo
119.482 -213.437 li
118.732 -213.437 li
118.732 -217.937 li
119.482 -217.937 li
cp
119.482 -208.937 mo
119.482 -207.577 li
119.482 -206.371 119.065 -205.33 118.23 -204.456 cv
117.688 -204.974 li
118.384 -205.703 118.732 -206.571 118.732 -207.577 cv
118.732 -208.937 li
119.482 -208.937 li
cp
113.792 -203.055 mo
109.292 -203.055 li
109.292 -203.805 li
113.792 -203.805 li
113.792 -203.055 li
cp
104.792 -203.055 mo
100.292 -203.055 li
100.292 -203.805 li
104.792 -203.805 li
104.792 -203.055 li
cp
95.7924 -203.055 mo
91.2924 -203.055 li
91.2924 -203.805 li
95.7924 -203.805 li
95.7924 -203.055 li
cp
86.7924 -203.055 mo
82.2924 -203.055 li
82.2924 -203.805 li
86.7924 -203.805 li
86.7924 -203.055 li
cp
77.7924 -203.055 mo
76.2599 -203.055 li
75.1242 -203.055 74.1295 -203.429 73.2758 -204.176 cv
73.7698 -204.74 li
74.4821 -204.117 75.3122 -203.805 76.2599 -203.805 cv
77.7924 -203.805 li
77.7924 -203.055 li
cp
71.7299 -208.566 mo
71.7299 -213.066 li
72.4799 -213.066 li
72.4799 -208.566 li
71.7299 -208.566 li
cp
71.7299 -217.566 mo
71.7299 -222.066 li
72.4799 -222.066 li
72.4799 -217.566 li
71.7299 -217.566 li
cp
71.7299 -226.566 mo
71.7299 -231.066 li
72.4799 -231.066 li
72.4799 -226.566 li
71.7299 -226.566 li
cp
71.7299 -235.566 mo
71.7299 -238.283 li
71.7299 -240.112 72.5419 -241.449 74.1658 -242.295 cv
74.5121 -241.629 li
73.1573 -240.924 72.4799 -239.808 72.4799 -238.283 cv
72.4799 -235.566 li
71.7299 -235.566 li
cp
.749844 .679255 .654902 .901945 cmyk
f
81.6749 -263.767 mo
81.6749 -223.267 li
.428534 .348058 .352331 .0131533 cmyk
@
79.2075 -229.962 mo
80.6275 -226.977 81.45 -224.245 81.675 -221.765 cv
81.9 -224.245 82.7225 -226.977 84.1425 -229.962 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 81.675 -221.765 ]ct
@
grestore newpath
.75 lw
81.6524 -206.017 mo
81.5774 -178.365 li
@
79.1289 -185.069 mo
80.5411 -182.08 81.3565 -179.346 81.575 -176.865 cv
81.8065 -179.344 82.6361 -182.075 84.0639 -185.056 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 81.575 -176.865 ]ct
@
grestore newpath
184.679 -242.88 mo
189.179 -242.88 li
189.179 -242.13 li
184.679 -242.13 li
184.679 -242.88 li
cp
193.679 -242.88 mo
198.179 -242.88 li
198.179 -242.13 li
193.679 -242.13 li
193.679 -242.88 li
cp
202.679 -242.88 mo
207.179 -242.88 li
207.179 -242.13 li
202.679 -242.13 li
202.679 -242.88 li
cp
211.679 -242.88 mo
216.179 -242.88 li
216.179 -242.13 li
211.679 -242.13 li
211.679 -242.88 li
cp
220.679 -242.88 mo
220.86 -242.88 li
222.6 -242.88 223.905 -242.127 224.777 -240.62 cv
224.128 -240.244 li
223.401 -241.501 222.311 -242.13 220.86 -242.13 cv
220.679 -242.13 li
220.679 -242.88 li
cp
225.382 -236.012 mo
225.382 -231.512 li
224.632 -231.512 li
224.632 -236.012 li
225.382 -236.012 li
cp
225.382 -227.012 mo
225.382 -222.512 li
224.632 -222.512 li
224.632 -227.012 li
225.382 -227.012 li
cp
225.382 -218.012 mo
225.382 -213.512 li
224.632 -213.512 li
224.632 -218.012 li
225.382 -218.012 li
cp
225.382 -209.012 mo
225.382 -207.652 li
225.382 -206.446 224.965 -205.405 224.13 -204.531 cv
223.588 -205.049 li
224.284 -205.778 224.632 -206.646 224.632 -207.652 cv
224.632 -209.012 li
225.382 -209.012 li
cp
219.692 -203.13 mo
215.192 -203.13 li
215.192 -203.88 li
219.692 -203.88 li
219.692 -203.13 li
cp
210.692 -203.13 mo
206.192 -203.13 li
206.192 -203.88 li
210.692 -203.88 li
210.692 -203.13 li
cp
201.692 -203.13 mo
197.192 -203.13 li
197.192 -203.88 li
201.692 -203.88 li
201.692 -203.13 li
cp
192.692 -203.13 mo
188.192 -203.13 li
188.192 -203.88 li
192.692 -203.88 li
192.692 -203.13 li
cp
183.692 -203.13 mo
182.16 -203.13 li
181.024 -203.13 180.03 -203.504 179.176 -204.251 cv
179.67 -204.815 li
180.382 -204.192 181.212 -203.88 182.16 -203.88 cv
183.692 -203.88 li
183.692 -203.13 li
cp
177.63 -208.641 mo
177.63 -213.141 li
178.38 -213.141 li
178.38 -208.641 li
177.63 -208.641 li
cp
177.63 -217.641 mo
177.63 -222.141 li
178.38 -222.141 li
178.38 -217.641 li
177.63 -217.641 li
cp
177.63 -226.641 mo
177.63 -231.141 li
178.38 -231.141 li
178.38 -226.641 li
177.63 -226.641 li
cp
177.63 -235.641 mo
177.63 -238.357 li
177.63 -240.187 178.442 -241.524 180.066 -242.37 cv
180.412 -241.704 li
179.057 -240.999 178.38 -239.883 178.38 -238.357 cv
178.38 -235.641 li
177.63 -235.641 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
187.575 -263.842 mo
187.575 -223.342 li
.428534 .348058 .352331 .0131533 cmyk
@
185.107 -230.037 mo
186.527 -227.052 187.35 -224.32 187.575 -221.84 cv
187.8 -224.32 188.622 -227.052 190.042 -230.037 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 187.575 -221.84 ]ct
@
grestore newpath
.75 lw
187.552 -206.092 mo
187.477 -178.44 li
@
185.029 -185.144 mo
186.441 -182.155 187.256 -179.421 187.475 -176.94 cv
187.706 -179.419 188.536 -182.15 189.964 -185.131 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 187.475 -176.94 ]ct
@
grestore newpath
289.154 -242.58 mo
293.654 -242.58 li
293.654 -241.83 li
289.154 -241.83 li
289.154 -242.58 li
cp
298.154 -242.58 mo
302.654 -242.58 li
302.654 -241.83 li
298.154 -241.83 li
298.154 -242.58 li
cp
307.154 -242.58 mo
311.654 -242.58 li
311.654 -241.83 li
307.154 -241.83 li
307.154 -242.58 li
cp
316.154 -242.58 mo
320.654 -242.58 li
320.654 -241.83 li
316.154 -241.83 li
316.154 -242.58 li
cp
325.154 -242.58 mo
325.335 -242.58 li
327.075 -242.58 328.38 -241.827 329.252 -240.32 cv
328.603 -239.944 li
327.876 -241.201 326.786 -241.83 325.335 -241.83 cv
325.154 -241.83 li
325.154 -242.58 li
cp
329.857 -235.712 mo
329.857 -231.212 li
329.107 -231.212 li
329.107 -235.712 li
329.857 -235.712 li
cp
329.857 -226.712 mo
329.857 -222.212 li
329.107 -222.212 li
329.107 -226.712 li
329.857 -226.712 li
cp
329.857 -217.712 mo
329.857 -213.212 li
329.107 -213.212 li
329.107 -217.712 li
329.857 -217.712 li
cp
329.857 -208.712 mo
329.857 -207.352 li
329.857 -206.146 329.44 -205.105 328.605 -204.231 cv
328.063 -204.749 li
328.759 -205.478 329.107 -206.346 329.107 -207.352 cv
329.107 -208.712 li
329.857 -208.712 li
cp
324.167 -202.83 mo
319.667 -202.83 li
319.667 -203.58 li
324.167 -203.58 li
324.167 -202.83 li
cp
315.167 -202.83 mo
310.667 -202.83 li
310.667 -203.58 li
315.167 -203.58 li
315.167 -202.83 li
cp
306.167 -202.83 mo
301.667 -202.83 li
301.667 -203.58 li
306.167 -203.58 li
306.167 -202.83 li
cp
297.167 -202.83 mo
292.667 -202.83 li
292.667 -203.58 li
297.167 -203.58 li
297.167 -202.83 li
cp
288.167 -202.83 mo
286.635 -202.83 li
285.499 -202.83 284.505 -203.204 283.651 -203.951 cv
284.145 -204.515 li
284.857 -203.892 285.687 -203.58 286.635 -203.58 cv
288.167 -203.58 li
288.167 -202.83 li
cp
282.105 -208.341 mo
282.105 -212.841 li
282.855 -212.841 li
282.855 -208.341 li
282.105 -208.341 li
cp
282.105 -217.341 mo
282.105 -221.841 li
282.855 -221.841 li
282.855 -217.341 li
282.105 -217.341 li
cp
282.105 -226.341 mo
282.105 -230.841 li
282.855 -230.841 li
282.855 -226.341 li
282.105 -226.341 li
cp
282.105 -235.341 mo
282.105 -238.057 li
282.105 -239.887 282.917 -241.224 284.541 -242.07 cv
284.887 -241.404 li
283.532 -240.699 282.855 -239.583 282.855 -238.057 cv
282.855 -235.341 li
282.105 -235.341 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
292.05 -263.542 mo
292.05 -223.042 li
.428534 .348058 .352331 .0131533 cmyk
@
289.582 -229.737 mo
291.002 -226.752 291.825 -224.02 292.05 -221.54 cv
292.275 -224.02 293.097 -226.752 294.517 -229.737 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 292.05 -221.54 ]ct
@
grestore newpath
.75 lw
292.027 -205.792 mo
291.952 -178.14 li
@
289.504 -184.844 mo
290.916 -181.855 291.731 -179.121 291.95 -176.64 cv
292.181 -179.119 293.011 -181.85 294.439 -184.831 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 291.95 -176.64 ]ct
@
grestore newpath
393.779 -242.58 mo
398.279 -242.58 li
398.279 -241.83 li
393.779 -241.83 li
393.779 -242.58 li
cp
402.779 -242.58 mo
407.279 -242.58 li
407.279 -241.83 li
402.779 -241.83 li
402.779 -242.58 li
cp
411.779 -242.58 mo
416.279 -242.58 li
416.279 -241.83 li
411.779 -241.83 li
411.779 -242.58 li
cp
420.779 -242.58 mo
425.279 -242.58 li
425.279 -241.83 li
420.779 -241.83 li
420.779 -242.58 li
cp
429.779 -242.58 mo
429.96 -242.58 li
431.7 -242.58 433.005 -241.827 433.877 -240.32 cv
433.228 -239.944 li
432.501 -241.201 431.411 -241.83 429.96 -241.83 cv
429.779 -241.83 li
429.779 -242.58 li
cp
434.482 -235.712 mo
434.482 -231.212 li
433.732 -231.212 li
433.732 -235.712 li
434.482 -235.712 li
cp
434.482 -226.712 mo
434.482 -222.212 li
433.732 -222.212 li
433.732 -226.712 li
434.482 -226.712 li
cp
434.482 -217.712 mo
434.482 -213.212 li
433.732 -213.212 li
433.732 -217.712 li
434.482 -217.712 li
cp
434.482 -208.712 mo
434.482 -207.352 li
434.482 -206.146 434.065 -205.105 433.23 -204.231 cv
432.688 -204.749 li
433.384 -205.478 433.732 -206.346 433.732 -207.352 cv
433.732 -208.712 li
434.482 -208.712 li
cp
428.792 -202.83 mo
424.292 -202.83 li
424.292 -203.58 li
428.792 -203.58 li
428.792 -202.83 li
cp
419.792 -202.83 mo
415.292 -202.83 li
415.292 -203.58 li
419.792 -203.58 li
419.792 -202.83 li
cp
410.792 -202.83 mo
406.292 -202.83 li
406.292 -203.58 li
410.792 -203.58 li
410.792 -202.83 li
cp
401.792 -202.83 mo
397.292 -202.83 li
397.292 -203.58 li
401.792 -203.58 li
401.792 -202.83 li
cp
392.792 -202.83 mo
391.26 -202.83 li
390.124 -202.83 389.129 -203.204 388.276 -203.951 cv
388.77 -204.515 li
389.482 -203.892 390.312 -203.58 391.26 -203.58 cv
392.792 -203.58 li
392.792 -202.83 li
cp
386.73 -208.341 mo
386.73 -212.841 li
387.48 -212.841 li
387.48 -208.341 li
386.73 -208.341 li
cp
386.73 -217.341 mo
386.73 -221.841 li
387.48 -221.841 li
387.48 -217.341 li
386.73 -217.341 li
cp
386.73 -226.341 mo
386.73 -230.841 li
387.48 -230.841 li
387.48 -226.341 li
386.73 -226.341 li
cp
386.73 -235.341 mo
386.73 -238.057 li
386.73 -239.887 387.542 -241.224 389.166 -242.07 cv
389.512 -241.404 li
388.157 -240.699 387.48 -239.583 387.48 -238.057 cv
387.48 -235.341 li
386.73 -235.341 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
396.675 -263.542 mo
396.675 -223.042 li
.428534 .348058 .352331 .0131533 cmyk
@
394.207 -229.737 mo
395.627 -226.752 396.45 -224.02 396.675 -221.54 cv
396.9 -224.02 397.722 -226.752 399.142 -229.737 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 396.675 -221.54 ]ct
@
grestore newpath
.75 lw
396.652 -205.792 mo
396.577 -178.14 li
@
394.129 -184.844 mo
395.541 -181.855 396.356 -179.121 396.575 -176.64 cv
396.806 -179.119 397.636 -181.85 399.064 -184.831 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 396.575 -176.64 ]ct
@
grestore newpath
.75 lw
224.31 -271.192 mo
283.605 -214.23 li
.0299992 .399451 1 0 cmyk
@
277.066 -217.09 mo
280.203 -216.046 282.743 -214.746 284.687 -213.19 cv
283.055 -215.07 281.654 -217.556 280.485 -220.648 cv
1 lw
gsave
[-.540867 -.51958 .51958 -.540867 284.687 -213.19 ]ct
@
grestore newpath
.75 lw
292.05 -162.637 mo
292.095 -140.64 li
.428534 .348058 .352331 .0131533 cmyk
@
289.615 -147.332 mo
291.042 -144.35 291.87 -141.619 292.1 -139.14 cv
292.32 -141.62 293.137 -144.355 294.55 -147.343 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 292.1 -139.14 ]ct
@
grestore newpath
.75 lw
187.65 -307.237 mo
187.567 -280.567 li
@
185.121 -287.27 mo
186.531 -284.281 187.345 -281.546 187.562 -279.065 cv
187.795 -281.544 188.626 -284.274 190.056 -287.255 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 187.562 -279.065 ]ct
@
grestore newpath
73.7872 -281.183 mo
74.0784 -281.273 74.3777 -281.317 74.6849 -281.317 cv
74.7691 -281.317 li
74.7691 -280.567 li
74.6849 -280.567 li
74.4527 -280.567 74.2269 -280.534 74.0074 -280.466 cv
73.7872 -281.183 li
cp
77.2816 -281.317 mo
78.1254 -281.317 li
78.1254 -280.567 li
77.2816 -280.567 li
77.2816 -281.317 li
cp
80.6379 -281.317 mo
81.4817 -281.317 li
81.4817 -280.567 li
80.6379 -280.567 li
80.6379 -281.317 li
cp
83.9941 -281.317 mo
84.8379 -281.317 li
84.8379 -280.567 li
83.9941 -280.567 li
83.9941 -281.317 li
cp
87.3504 -281.317 mo
88.1942 -281.317 li
88.1942 -280.567 li
87.3504 -280.567 li
87.3504 -281.317 li
cp
90.7066 -281.317 mo
91.5504 -281.317 li
91.5504 -280.567 li
90.7066 -280.567 li
90.7066 -281.317 li
cp
94.0629 -281.317 mo
94.9066 -281.317 li
94.9066 -280.567 li
94.0629 -280.567 li
94.0629 -281.317 li
cp
97.4192 -281.317 mo
98.2629 -281.317 li
98.2629 -280.567 li
97.4192 -280.567 li
97.4192 -281.317 li
cp
100.775 -281.317 mo
101.619 -281.317 li
101.619 -280.567 li
100.775 -280.567 li
100.775 -281.317 li
cp
104.132 -281.317 mo
104.975 -281.317 li
104.975 -280.567 li
104.132 -280.567 li
104.132 -281.317 li
cp
107.488 -281.317 mo
108.332 -281.317 li
108.332 -280.567 li
107.488 -280.567 li
107.488 -281.317 li
cp
110.844 -281.317 mo
111.688 -281.317 li
111.688 -280.567 li
110.844 -280.567 li
110.844 -281.317 li
cp
114.2 -281.317 mo
115.044 -281.317 li
115.044 -280.567 li
114.2 -280.567 li
114.2 -281.317 li
cp
117.557 -281.317 mo
118.4 -281.317 li
118.4 -280.567 li
117.557 -280.567 li
117.557 -281.317 li
cp
120.913 -281.317 mo
121.757 -281.317 li
121.757 -280.567 li
120.913 -280.567 li
120.913 -281.317 li
cp
124.269 -281.317 mo
125.113 -281.317 li
125.113 -280.567 li
124.269 -280.567 li
124.269 -281.317 li
cp
127.625 -281.317 mo
128.469 -281.317 li
128.469 -280.567 li
127.625 -280.567 li
127.625 -281.317 li
cp
130.982 -281.317 mo
131.825 -281.317 li
131.825 -280.567 li
130.982 -280.567 li
130.982 -281.317 li
cp
134.338 -281.317 mo
135.182 -281.317 li
135.182 -280.567 li
134.338 -280.567 li
134.338 -281.317 li
cp
137.694 -281.317 mo
138.538 -281.317 li
138.538 -280.567 li
137.694 -280.567 li
137.694 -281.317 li
cp
141.05 -281.317 mo
141.894 -281.317 li
141.894 -280.567 li
141.05 -280.567 li
141.05 -281.317 li
cp
144.407 -281.317 mo
145.25 -281.317 li
145.25 -280.567 li
144.407 -280.567 li
144.407 -281.317 li
cp
147.763 -281.317 mo
148.607 -281.317 li
148.607 -280.567 li
147.763 -280.567 li
147.763 -281.317 li
cp
151.119 -281.317 mo
151.963 -281.317 li
151.963 -280.567 li
151.119 -280.567 li
151.119 -281.317 li
cp
154.475 -281.317 mo
155.319 -281.317 li
155.319 -280.567 li
154.475 -280.567 li
154.475 -281.317 li
cp
157.832 -281.317 mo
158.675 -281.317 li
158.675 -280.567 li
157.832 -280.567 li
157.832 -281.317 li
cp
161.188 -281.317 mo
162.032 -281.317 li
162.032 -280.567 li
161.188 -280.567 li
161.188 -281.317 li
cp
164.544 -281.317 mo
165.388 -281.317 li
165.388 -280.567 li
164.544 -280.567 li
164.544 -281.317 li
cp
167.9 -281.317 mo
168.744 -281.317 li
168.744 -280.567 li
167.9 -280.567 li
167.9 -281.317 li
cp
171.257 -281.317 mo
172.1 -281.317 li
172.1 -280.567 li
171.257 -280.567 li
171.257 -281.317 li
cp
174.613 -281.317 mo
175.457 -281.317 li
175.457 -280.567 li
174.613 -280.567 li
174.613 -281.317 li
cp
177.969 -281.317 mo
178.813 -281.317 li
178.813 -280.567 li
177.969 -280.567 li
177.969 -281.317 li
cp
181.325 -281.317 mo
182.169 -281.317 li
182.169 -280.567 li
181.325 -280.567 li
181.325 -281.317 li
cp
184.682 -281.317 mo
185.525 -281.317 li
185.525 -280.567 li
184.682 -280.567 li
184.682 -281.317 li
cp
188.038 -281.317 mo
188.882 -281.317 li
188.882 -280.567 li
188.038 -280.567 li
188.038 -281.317 li
cp
191.394 -281.317 mo
192.238 -281.317 li
192.238 -280.567 li
191.394 -280.567 li
191.394 -281.317 li
cp
194.75 -281.317 mo
195.594 -281.317 li
195.594 -280.567 li
194.75 -280.567 li
194.75 -281.317 li
cp
198.107 -281.317 mo
198.95 -281.317 li
198.95 -280.567 li
198.107 -280.567 li
198.107 -281.317 li
cp
201.463 -281.317 mo
202.307 -281.317 li
202.307 -280.567 li
201.463 -280.567 li
201.463 -281.317 li
cp
204.819 -281.317 mo
205.663 -281.317 li
205.663 -280.567 li
204.819 -280.567 li
204.819 -281.317 li
cp
208.175 -281.317 mo
209.019 -281.317 li
209.019 -280.567 li
208.175 -280.567 li
208.175 -281.317 li
cp
211.532 -281.317 mo
212.375 -281.317 li
212.375 -280.567 li
211.532 -280.567 li
211.532 -281.317 li
cp
214.888 -281.317 mo
215.732 -281.317 li
215.732 -280.567 li
214.888 -280.567 li
214.888 -281.317 li
cp
218.244 -281.317 mo
219.088 -281.317 li
219.088 -280.567 li
218.244 -280.567 li
218.244 -281.317 li
cp
221.6 -281.317 mo
222.444 -281.317 li
222.444 -280.567 li
221.6 -280.567 li
221.6 -281.317 li
cp
224.957 -281.317 mo
225.8 -281.317 li
225.8 -280.567 li
224.957 -280.567 li
224.957 -281.317 li
cp
228.313 -281.317 mo
229.157 -281.317 li
229.157 -280.567 li
228.313 -280.567 li
228.313 -281.317 li
cp
231.669 -281.317 mo
232.513 -281.317 li
232.513 -280.567 li
231.669 -280.567 li
231.669 -281.317 li
cp
235.025 -281.317 mo
235.869 -281.317 li
235.869 -280.567 li
235.025 -280.567 li
235.025 -281.317 li
cp
238.382 -281.317 mo
239.225 -281.317 li
239.225 -280.567 li
238.382 -280.567 li
238.382 -281.317 li
cp
241.738 -281.317 mo
242.582 -281.317 li
242.582 -280.567 li
241.738 -280.567 li
241.738 -281.317 li
cp
245.094 -281.317 mo
245.938 -281.317 li
245.938 -280.567 li
245.094 -280.567 li
245.094 -281.317 li
cp
248.45 -281.317 mo
249.294 -281.317 li
249.294 -280.567 li
248.45 -280.567 li
248.45 -281.317 li
cp
251.807 -281.317 mo
252.65 -281.317 li
252.65 -280.567 li
251.807 -280.567 li
251.807 -281.317 li
cp
255.163 -281.317 mo
256.007 -281.317 li
256.007 -280.567 li
255.163 -280.567 li
255.163 -281.317 li
cp
258.519 -281.317 mo
259.363 -281.317 li
259.363 -280.567 li
258.519 -280.567 li
258.519 -281.317 li
cp
261.875 -281.317 mo
262.719 -281.317 li
262.719 -280.567 li
261.875 -280.567 li
261.875 -281.317 li
cp
265.232 -281.317 mo
266.075 -281.317 li
266.075 -280.567 li
265.232 -280.567 li
265.232 -281.317 li
cp
268.588 -281.317 mo
269.432 -281.317 li
269.432 -280.567 li
268.588 -280.567 li
268.588 -281.317 li
cp
271.944 -281.317 mo
272.788 -281.317 li
272.788 -280.567 li
271.944 -280.567 li
271.944 -281.317 li
cp
275.3 -281.317 mo
276.144 -281.317 li
276.144 -280.567 li
275.3 -280.567 li
275.3 -281.317 li
cp
278.657 -281.317 mo
279.5 -281.317 li
279.5 -280.567 li
278.657 -280.567 li
278.657 -281.317 li
cp
282.013 -281.317 mo
282.857 -281.317 li
282.857 -280.567 li
282.013 -280.567 li
282.013 -281.317 li
cp
285.369 -281.317 mo
286.213 -281.317 li
286.213 -280.567 li
285.369 -280.567 li
285.369 -281.317 li
cp
288.725 -281.317 mo
289.569 -281.317 li
289.569 -280.567 li
288.725 -280.567 li
288.725 -281.317 li
cp
292.082 -281.317 mo
292.925 -281.317 li
292.925 -280.567 li
292.082 -280.567 li
292.082 -281.317 li
cp
295.438 -281.317 mo
296.282 -281.317 li
296.282 -280.567 li
295.438 -280.567 li
295.438 -281.317 li
cp
298.794 -281.317 mo
299.638 -281.317 li
299.638 -280.567 li
298.794 -280.567 li
298.794 -281.317 li
cp
302.15 -281.317 mo
302.994 -281.317 li
302.994 -280.567 li
302.15 -280.567 li
302.15 -281.317 li
cp
305.507 -281.317 mo
306.35 -281.317 li
306.35 -280.567 li
305.507 -280.567 li
305.507 -281.317 li
cp
308.863 -281.317 mo
309.707 -281.317 li
309.707 -280.567 li
308.863 -280.567 li
308.863 -281.317 li
cp
312.219 -281.317 mo
313.063 -281.317 li
313.063 -280.567 li
312.219 -280.567 li
312.219 -281.317 li
cp
315.575 -281.317 mo
316.419 -281.317 li
316.419 -280.567 li
315.575 -280.567 li
315.575 -281.317 li
cp
318.932 -281.317 mo
319.775 -281.317 li
319.775 -280.567 li
318.932 -280.567 li
318.932 -281.317 li
cp
322.288 -281.317 mo
323.132 -281.317 li
323.132 -280.567 li
322.288 -280.567 li
322.288 -281.317 li
cp
325.644 -281.317 mo
326.488 -281.317 li
326.488 -280.567 li
325.644 -280.567 li
325.644 -281.317 li
cp
329 -281.317 mo
329.844 -281.317 li
329.844 -280.567 li
329 -280.567 li
329 -281.317 li
cp
332.357 -281.317 mo
333.2 -281.317 li
333.2 -280.567 li
332.357 -280.567 li
332.357 -281.317 li
cp
335.713 -281.317 mo
336.557 -281.317 li
336.557 -280.567 li
335.713 -280.567 li
335.713 -281.317 li
cp
339.069 -281.317 mo
339.913 -281.317 li
339.913 -280.567 li
339.069 -280.567 li
339.069 -281.317 li
cp
342.425 -281.317 mo
343.269 -281.317 li
343.269 -280.567 li
342.425 -280.567 li
342.425 -281.317 li
cp
345.782 -281.317 mo
346.625 -281.317 li
346.625 -280.567 li
345.782 -280.567 li
345.782 -281.317 li
cp
349.138 -281.317 mo
349.982 -281.317 li
349.982 -280.567 li
349.138 -280.567 li
349.138 -281.317 li
cp
352.494 -281.317 mo
353.338 -281.317 li
353.338 -280.567 li
352.494 -280.567 li
352.494 -281.317 li
cp
355.85 -281.317 mo
356.694 -281.317 li
356.694 -280.567 li
355.85 -280.567 li
355.85 -281.317 li
cp
359.207 -281.317 mo
360.05 -281.317 li
360.05 -280.567 li
359.207 -280.567 li
359.207 -281.317 li
cp
362.563 -281.317 mo
363.407 -281.317 li
363.407 -280.567 li
362.563 -280.567 li
362.563 -281.317 li
cp
365.919 -281.317 mo
366.763 -281.317 li
366.763 -280.567 li
365.919 -280.567 li
365.919 -281.317 li
cp
369.275 -281.317 mo
370.119 -281.317 li
370.119 -280.567 li
369.275 -280.567 li
369.275 -281.317 li
cp
372.632 -281.317 mo
373.475 -281.317 li
373.475 -280.567 li
372.632 -280.567 li
372.632 -281.317 li
cp
375.988 -281.317 mo
376.832 -281.317 li
376.832 -280.567 li
375.988 -280.567 li
375.988 -281.317 li
cp
379.344 -281.317 mo
380.188 -281.317 li
380.188 -280.567 li
379.344 -280.567 li
379.344 -281.317 li
cp
382.7 -281.317 mo
383.544 -281.317 li
383.544 -280.567 li
382.7 -280.567 li
382.7 -281.317 li
cp
386.057 -281.317 mo
386.9 -281.317 li
386.9 -280.567 li
386.057 -280.567 li
386.057 -281.317 li
cp
389.413 -281.317 mo
390.257 -281.317 li
390.257 -280.567 li
389.413 -280.567 li
389.413 -281.317 li
cp
392.769 -281.317 mo
393.613 -281.317 li
393.613 -280.567 li
392.769 -280.567 li
392.769 -281.317 li
cp
396.125 -281.317 mo
396.969 -281.317 li
396.969 -280.567 li
396.125 -280.567 li
396.125 -281.317 li
cp
399.482 -281.317 mo
400.325 -281.317 li
400.325 -280.567 li
399.482 -280.567 li
399.482 -281.317 li
cp
402.838 -281.317 mo
403.682 -281.317 li
403.682 -280.567 li
402.838 -280.567 li
402.838 -281.317 li
cp
406.194 -281.317 mo
407.038 -281.317 li
407.038 -280.567 li
406.194 -280.567 li
406.194 -281.317 li
cp
409.55 -281.317 mo
410.394 -281.317 li
410.394 -280.567 li
409.55 -280.567 li
409.55 -281.317 li
cp
412.907 -281.317 mo
413.75 -281.317 li
413.75 -280.567 li
412.907 -280.567 li
412.907 -281.317 li
cp
416.263 -281.317 mo
417.107 -281.317 li
417.107 -280.567 li
416.263 -280.567 li
416.263 -281.317 li
cp
419.619 -281.317 mo
420.463 -281.317 li
420.463 -280.567 li
419.619 -280.567 li
419.619 -281.317 li
cp
422.975 -281.317 mo
423.819 -281.317 li
423.819 -280.567 li
422.975 -280.567 li
422.975 -281.317 li
cp
426.332 -281.317 mo
427.175 -281.317 li
427.175 -280.567 li
426.332 -280.567 li
426.332 -281.317 li
cp
429.688 -281.317 mo
430.532 -281.317 li
430.532 -280.567 li
429.688 -280.567 li
429.688 -281.317 li
cp
433.206 -280.71 mo
433.465 -280.516 433.689 -280.286 433.876 -280.022 cv
433.263 -279.589 li
433.122 -279.789 432.953 -279.963 432.757 -280.109 cv
433.206 -280.71 li
cp
434.437 -277.343 mo
434.437 -276.499 li
433.687 -276.499 li
433.687 -277.343 li
434.437 -277.343 li
cp
434.437 -273.987 mo
434.437 -273.143 li
433.687 -273.143 li
433.687 -273.987 li
434.437 -273.987 li
cp
434.437 -270.63 mo
434.437 -269.787 li
433.687 -269.787 li
433.687 -270.63 li
434.437 -270.63 li
cp
434.437 -267.274 mo
434.437 -266.43 li
433.687 -266.43 li
433.687 -267.274 li
434.437 -267.274 li
cp
434.171 -263.751 mo
434.038 -263.454 433.862 -263.185 433.643 -262.943 cv
433.087 -263.447 li
433.253 -263.629 433.386 -263.833 433.486 -264.057 cv
434.171 -263.751 li
cp
431.05 -261.938 mo
430.206 -261.938 li
430.206 -262.688 li
431.05 -262.688 li
431.05 -261.938 li
cp
427.693 -261.938 mo
426.85 -261.938 li
426.85 -262.688 li
427.693 -262.688 li
427.693 -261.938 li
cp
424.337 -261.938 mo
423.493 -261.938 li
423.493 -262.688 li
424.337 -262.688 li
424.337 -261.938 li
cp
420.981 -261.938 mo
420.137 -261.938 li
420.137 -262.688 li
420.981 -262.688 li
420.981 -261.938 li
cp
417.625 -261.938 mo
416.781 -261.938 li
416.781 -262.688 li
417.625 -262.688 li
417.625 -261.938 li
cp
414.269 -261.938 mo
413.425 -261.938 li
413.425 -262.688 li
414.269 -262.688 li
414.269 -261.938 li
cp
410.912 -261.938 mo
410.068 -261.938 li
410.068 -262.688 li
410.912 -262.688 li
410.912 -261.938 li
cp
407.556 -261.938 mo
406.712 -261.938 li
406.712 -262.688 li
407.556 -262.688 li
407.556 -261.938 li
cp
404.2 -261.938 mo
403.356 -261.938 li
403.356 -262.688 li
404.2 -262.688 li
404.2 -261.938 li
cp
400.844 -261.938 mo
400 -261.938 li
400 -262.688 li
400.844 -262.688 li
400.844 -261.938 li
cp
397.487 -261.938 mo
396.644 -261.938 li
396.644 -262.688 li
397.487 -262.688 li
397.487 -261.938 li
cp
394.131 -261.938 mo
393.287 -261.938 li
393.287 -262.688 li
394.131 -262.688 li
394.131 -261.938 li
cp
390.775 -261.938 mo
389.931 -261.938 li
389.931 -262.688 li
390.775 -262.688 li
390.775 -261.938 li
cp
387.418 -261.938 mo
386.575 -261.938 li
386.575 -262.688 li
387.418 -262.688 li
387.418 -261.938 li
cp
384.062 -261.938 mo
383.219 -261.938 li
383.219 -262.688 li
384.062 -262.688 li
384.062 -261.938 li
cp
380.706 -261.938 mo
379.862 -261.938 li
379.862 -262.688 li
380.706 -262.688 li
380.706 -261.938 li
cp
377.35 -261.938 mo
376.506 -261.938 li
376.506 -262.688 li
377.35 -262.688 li
377.35 -261.938 li
cp
373.993 -261.938 mo
373.15 -261.938 li
373.15 -262.688 li
373.993 -262.688 li
373.993 -261.938 li
cp
370.637 -261.938 mo
369.793 -261.938 li
369.793 -262.688 li
370.637 -262.688 li
370.637 -261.938 li
cp
367.281 -261.938 mo
366.437 -261.938 li
366.437 -262.688 li
367.281 -262.688 li
367.281 -261.938 li
cp
363.925 -261.938 mo
363.081 -261.938 li
363.081 -262.688 li
363.925 -262.688 li
363.925 -261.938 li
cp
360.568 -261.938 mo
359.725 -261.938 li
359.725 -262.688 li
360.568 -262.688 li
360.568 -261.938 li
cp
357.212 -261.938 mo
356.368 -261.938 li
356.368 -262.688 li
357.212 -262.688 li
357.212 -261.938 li
cp
353.856 -261.938 mo
353.012 -261.938 li
353.012 -262.688 li
353.856 -262.688 li
353.856 -261.938 li
cp
350.5 -261.938 mo
349.656 -261.938 li
349.656 -262.688 li
350.5 -262.688 li
350.5 -261.938 li
cp
347.144 -261.938 mo
346.3 -261.938 li
346.3 -262.688 li
347.144 -262.688 li
347.144 -261.938 li
cp
343.787 -261.938 mo
342.943 -261.938 li
342.943 -262.688 li
343.787 -262.688 li
343.787 -261.938 li
cp
340.431 -261.938 mo
339.587 -261.938 li
339.587 -262.688 li
340.431 -262.688 li
340.431 -261.938 li
cp
337.075 -261.938 mo
336.231 -261.938 li
336.231 -262.688 li
337.075 -262.688 li
337.075 -261.938 li
cp
333.719 -261.938 mo
332.875 -261.938 li
332.875 -262.688 li
333.719 -262.688 li
333.719 -261.938 li
cp
330.362 -261.938 mo
329.519 -261.938 li
329.519 -262.688 li
330.362 -262.688 li
330.362 -261.938 li
cp
327.006 -261.938 mo
326.162 -261.938 li
326.162 -262.688 li
327.006 -262.688 li
327.006 -261.938 li
cp
323.65 -261.938 mo
322.806 -261.938 li
322.806 -262.688 li
323.65 -262.688 li
323.65 -261.938 li
cp
320.293 -261.938 mo
319.45 -261.938 li
319.45 -262.688 li
320.293 -262.688 li
320.293 -261.938 li
cp
316.937 -261.938 mo
316.094 -261.938 li
316.094 -262.688 li
316.937 -262.688 li
316.937 -261.938 li
cp
313.581 -261.938 mo
312.737 -261.938 li
312.737 -262.688 li
313.581 -262.688 li
313.581 -261.938 li
cp
310.225 -261.938 mo
309.381 -261.938 li
309.381 -262.688 li
310.225 -262.688 li
310.225 -261.938 li
cp
306.868 -261.938 mo
306.025 -261.938 li
306.025 -262.688 li
306.868 -262.688 li
306.868 -261.938 li
cp
303.512 -261.938 mo
302.668 -261.938 li
302.668 -262.688 li
303.512 -262.688 li
303.512 -261.938 li
cp
300.156 -261.938 mo
299.312 -261.938 li
299.312 -262.688 li
300.156 -262.688 li
300.156 -261.938 li
cp
296.8 -261.938 mo
295.956 -261.938 li
295.956 -262.688 li
296.8 -262.688 li
296.8 -261.938 li
cp
293.443 -261.938 mo
292.6 -261.938 li
292.6 -262.688 li
293.443 -262.688 li
293.443 -261.938 li
cp
290.087 -261.938 mo
289.243 -261.938 li
289.243 -262.688 li
290.087 -262.688 li
290.087 -261.938 li
cp
286.731 -261.938 mo
285.887 -261.938 li
285.887 -262.688 li
286.731 -262.688 li
286.731 -261.938 li
cp
283.375 -261.938 mo
282.531 -261.938 li
282.531 -262.688 li
283.375 -262.688 li
283.375 -261.938 li
cp
280.019 -261.938 mo
279.175 -261.938 li
279.175 -262.688 li
280.019 -262.688 li
280.019 -261.938 li
cp
276.662 -261.938 mo
275.818 -261.938 li
275.818 -262.688 li
276.662 -262.688 li
276.662 -261.938 li
cp
273.306 -261.938 mo
272.462 -261.938 li
272.462 -262.688 li
273.306 -262.688 li
273.306 -261.938 li
cp
269.95 -261.938 mo
269.106 -261.938 li
269.106 -262.688 li
269.95 -262.688 li
269.95 -261.938 li
cp
266.594 -261.938 mo
265.75 -261.938 li
265.75 -262.688 li
266.594 -262.688 li
266.594 -261.938 li
cp
263.237 -261.938 mo
262.394 -261.938 li
262.394 -262.688 li
263.237 -262.688 li
263.237 -261.938 li
cp
259.881 -261.938 mo
259.037 -261.938 li
259.037 -262.688 li
259.881 -262.688 li
259.881 -261.938 li
cp
256.525 -261.938 mo
255.681 -261.938 li
255.681 -262.688 li
256.525 -262.688 li
256.525 -261.938 li
cp
253.168 -261.938 mo
252.325 -261.938 li
252.325 -262.688 li
253.168 -262.688 li
253.168 -261.938 li
cp
249.812 -261.938 mo
248.968 -261.938 li
248.968 -262.688 li
249.812 -262.688 li
249.812 -261.938 li
cp
246.456 -261.938 mo
245.612 -261.938 li
245.612 -262.688 li
246.456 -262.688 li
246.456 -261.938 li
cp
243.1 -261.938 mo
242.256 -261.938 li
242.256 -262.688 li
243.1 -262.688 li
243.1 -261.938 li
cp
239.743 -261.938 mo
238.9 -261.938 li
238.9 -262.688 li
239.743 -262.688 li
239.743 -261.938 li
cp
236.387 -261.938 mo
235.544 -261.938 li
235.544 -262.688 li
236.387 -262.688 li
236.387 -261.938 li
cp
233.031 -261.938 mo
232.187 -261.938 li
232.187 -262.688 li
233.031 -262.688 li
233.031 -261.938 li
cp
229.675 -261.938 mo
228.831 -261.938 li
228.831 -262.688 li
229.675 -262.688 li
229.675 -261.938 li
cp
226.318 -261.938 mo
225.475 -261.938 li
225.475 -262.688 li
226.318 -262.688 li
226.318 -261.938 li
cp
222.962 -261.938 mo
222.118 -261.938 li
222.118 -262.688 li
222.962 -262.688 li
222.962 -261.938 li
cp
219.606 -261.938 mo
218.762 -261.938 li
218.762 -262.688 li
219.606 -262.688 li
219.606 -261.938 li
cp
216.25 -261.938 mo
215.406 -261.938 li
215.406 -262.688 li
216.25 -262.688 li
216.25 -261.938 li
cp
212.894 -261.938 mo
212.05 -261.938 li
212.05 -262.688 li
212.894 -262.688 li
212.894 -261.938 li
cp
209.537 -261.938 mo
208.693 -261.938 li
208.693 -262.688 li
209.537 -262.688 li
209.537 -261.938 li
cp
206.181 -261.938 mo
205.337 -261.938 li
205.337 -262.688 li
206.181 -262.688 li
206.181 -261.938 li
cp
202.825 -261.938 mo
201.981 -261.938 li
201.981 -262.688 li
202.825 -262.688 li
202.825 -261.938 li
cp
199.469 -261.938 mo
198.625 -261.938 li
198.625 -262.688 li
199.469 -262.688 li
199.469 -261.938 li
cp
196.112 -261.938 mo
195.268 -261.938 li
195.268 -262.688 li
196.112 -262.688 li
196.112 -261.938 li
cp
192.756 -261.938 mo
191.912 -261.938 li
191.912 -262.688 li
192.756 -262.688 li
192.756 -261.938 li
cp
189.4 -261.938 mo
188.556 -261.938 li
188.556 -262.688 li
189.4 -262.688 li
189.4 -261.938 li
cp
186.043 -261.938 mo
185.2 -261.938 li
185.2 -262.688 li
186.043 -262.688 li
186.043 -261.938 li
cp
182.687 -261.938 mo
181.844 -261.938 li
181.844 -262.688 li
182.687 -262.688 li
182.687 -261.938 li
cp
179.331 -261.938 mo
178.487 -261.938 li
178.487 -262.688 li
179.331 -262.688 li
179.331 -261.938 li
cp
175.975 -261.938 mo
175.131 -261.938 li
175.131 -262.688 li
175.975 -262.688 li
175.975 -261.938 li
cp
172.618 -261.938 mo
171.775 -261.938 li
171.775 -262.688 li
172.618 -262.688 li
172.618 -261.938 li
cp
169.262 -261.938 mo
168.419 -261.938 li
168.419 -262.688 li
169.262 -262.688 li
169.262 -261.938 li
cp
165.906 -261.938 mo
165.062 -261.938 li
165.062 -262.688 li
165.906 -262.688 li
165.906 -261.938 li
cp
162.55 -261.938 mo
161.706 -261.938 li
161.706 -262.688 li
162.55 -262.688 li
162.55 -261.938 li
cp
159.194 -261.938 mo
158.35 -261.938 li
158.35 -262.688 li
159.194 -262.688 li
159.194 -261.938 li
cp
155.837 -261.938 mo
154.993 -261.938 li
154.993 -262.688 li
155.837 -262.688 li
155.837 -261.938 li
cp
152.481 -261.938 mo
151.637 -261.938 li
151.637 -262.688 li
152.481 -262.688 li
152.481 -261.938 li
cp
149.125 -261.938 mo
148.281 -261.938 li
148.281 -262.688 li
149.125 -262.688 li
149.125 -261.938 li
cp
145.769 -261.938 mo
144.925 -261.938 li
144.925 -262.688 li
145.769 -262.688 li
145.769 -261.938 li
cp
142.412 -261.938 mo
141.569 -261.938 li
141.569 -262.688 li
142.412 -262.688 li
142.412 -261.938 li
cp
139.056 -261.938 mo
138.212 -261.938 li
138.212 -262.688 li
139.056 -262.688 li
139.056 -261.938 li
cp
135.7 -261.938 mo
134.856 -261.938 li
134.856 -262.688 li
135.7 -262.688 li
135.7 -261.938 li
cp
132.344 -261.938 mo
131.5 -261.938 li
131.5 -262.688 li
132.344 -262.688 li
132.344 -261.938 li
cp
128.987 -261.938 mo
128.144 -261.938 li
128.144 -262.688 li
128.987 -262.688 li
128.987 -261.938 li
cp
125.631 -261.938 mo
124.787 -261.938 li
124.787 -262.688 li
125.631 -262.688 li
125.631 -261.938 li
cp
122.275 -261.938 mo
121.431 -261.938 li
121.431 -262.688 li
122.275 -262.688 li
122.275 -261.938 li
cp
118.919 -261.938 mo
118.075 -261.938 li
118.075 -262.688 li
118.919 -262.688 li
118.919 -261.938 li
cp
115.562 -261.938 mo
114.719 -261.938 li
114.719 -262.688 li
115.562 -262.688 li
115.562 -261.938 li
cp
112.206 -261.938 mo
111.362 -261.938 li
111.362 -262.688 li
112.206 -262.688 li
112.206 -261.938 li
cp
108.85 -261.938 mo
108.006 -261.938 li
108.006 -262.688 li
108.85 -262.688 li
108.85 -261.938 li
cp
105.493 -261.938 mo
104.65 -261.938 li
104.65 -262.688 li
105.493 -262.688 li
105.493 -261.938 li
cp
102.137 -261.938 mo
101.294 -261.938 li
101.294 -262.688 li
102.137 -262.688 li
102.137 -261.938 li
cp
98.781 -261.938 mo
97.9373 -261.938 li
97.9373 -262.688 li
98.781 -262.688 li
98.781 -261.938 li
cp
95.4248 -261.938 mo
94.581 -261.938 li
94.581 -262.688 li
95.4248 -262.688 li
95.4248 -261.938 li
cp
92.0685 -261.938 mo
91.2248 -261.938 li
91.2248 -262.688 li
92.0685 -262.688 li
92.0685 -261.938 li
cp
88.7122 -261.938 mo
87.8685 -261.938 li
87.8685 -262.688 li
88.7122 -262.688 li
88.7122 -261.938 li
cp
85.356 -261.938 mo
84.5123 -261.938 li
84.5123 -262.688 li
85.356 -262.688 li
85.356 -261.938 li
cp
81.9998 -261.938 mo
81.156 -261.938 li
81.156 -262.688 li
81.9998 -262.688 li
81.9998 -261.938 li
cp
78.6435 -261.938 mo
77.7998 -261.938 li
77.7998 -262.688 li
78.6435 -262.688 li
78.6435 -261.938 li
cp
75.2873 -261.938 mo
74.6849 -261.938 li
74.5864 -261.938 74.4884 -261.942 74.3909 -261.951 cv
74.4622 -262.698 li
74.536 -262.691 74.6102 -262.688 74.6849 -262.688 cv
75.2873 -262.688 li
75.2873 -261.938 li
cp
72.0359 -263.469 mo
71.8703 -263.755 71.7543 -264.06 71.6878 -264.384 cv
72.4224 -264.535 li
72.4726 -264.291 72.5602 -264.06 72.6853 -263.844 cv
72.0359 -263.469 li
cp
71.6249 -266.999 mo
71.6249 -267.843 li
72.3749 -267.843 li
72.3749 -266.999 li
71.6249 -266.999 li
cp
71.6249 -270.356 mo
71.6249 -271.199 li
72.3749 -271.199 li
72.3749 -270.356 li
71.6249 -270.356 li
cp
71.6249 -273.712 mo
71.6249 -274.556 li
72.3749 -274.556 li
72.3749 -273.712 li
71.6249 -273.712 li
cp
71.6249 -277.068 mo
71.6249 -277.912 li
72.3749 -277.912 li
72.3749 -277.068 li
71.6249 -277.068 li
cp
71.6249 -278.25 mo
71.6249 -278.591 71.6794 -278.921 71.7882 -279.241 cv
72.4982 -278.999 li
72.416 -278.758 72.3749 -278.508 72.3749 -278.25 cv
71.6249 -278.25 li
cp
.791409 .327764 1 .227756 cmyk
f
72.0222 -221.318 mo
72.866 -221.318 li
72.866 -220.568 li
72.0222 -220.568 li
72.0222 -221.318 li
cp
75.3785 -221.318 mo
76.2222 -221.318 li
76.2222 -220.568 li
75.3785 -220.568 li
75.3785 -221.318 li
cp
78.7347 -221.318 mo
79.5785 -221.318 li
79.5785 -220.568 li
78.7347 -220.568 li
78.7347 -221.318 li
cp
82.091 -221.318 mo
82.9348 -221.318 li
82.9348 -220.568 li
82.091 -220.568 li
82.091 -221.318 li
cp
85.4472 -221.318 mo
86.291 -221.318 li
86.291 -220.568 li
85.4472 -220.568 li
85.4472 -221.318 li
cp
88.8035 -221.318 mo
89.6472 -221.318 li
89.6472 -220.568 li
88.8035 -220.568 li
88.8035 -221.318 li
cp
92.1597 -221.318 mo
93.0035 -221.318 li
93.0035 -220.568 li
92.1597 -220.568 li
92.1597 -221.318 li
cp
95.516 -221.318 mo
96.3597 -221.318 li
96.3597 -220.568 li
95.516 -220.568 li
95.516 -221.318 li
cp
98.8723 -221.318 mo
99.716 -221.318 li
99.716 -220.568 li
98.8723 -220.568 li
98.8723 -221.318 li
cp
102.228 -221.318 mo
103.072 -221.318 li
103.072 -220.568 li
102.228 -220.568 li
102.228 -221.318 li
cp
105.585 -221.318 mo
106.428 -221.318 li
106.428 -220.568 li
105.585 -220.568 li
105.585 -221.318 li
cp
108.941 -221.318 mo
109.785 -221.318 li
109.785 -220.568 li
108.941 -220.568 li
108.941 -221.318 li
cp
112.297 -221.318 mo
113.141 -221.318 li
113.141 -220.568 li
112.297 -220.568 li
112.297 -221.318 li
cp
115.654 -221.318 mo
116.497 -221.318 li
116.497 -220.568 li
115.654 -220.568 li
115.654 -221.318 li
cp
119.01 -221.318 mo
119.853 -221.318 li
119.853 -220.568 li
119.01 -220.568 li
119.01 -221.318 li
cp
122.366 -221.318 mo
123.21 -221.318 li
123.21 -220.568 li
122.366 -220.568 li
122.366 -221.318 li
cp
125.722 -221.318 mo
126.566 -221.318 li
126.566 -220.568 li
125.722 -220.568 li
125.722 -221.318 li
cp
129.078 -221.318 mo
129.922 -221.318 li
129.922 -220.568 li
129.078 -220.568 li
129.078 -221.318 li
cp
132.435 -221.318 mo
133.279 -221.318 li
133.279 -220.568 li
132.435 -220.568 li
132.435 -221.318 li
cp
135.791 -221.318 mo
136.635 -221.318 li
136.635 -220.568 li
135.791 -220.568 li
135.791 -221.318 li
cp
139.147 -221.318 mo
139.991 -221.318 li
139.991 -220.568 li
139.147 -220.568 li
139.147 -221.318 li
cp
142.503 -221.318 mo
143.347 -221.318 li
143.347 -220.568 li
142.503 -220.568 li
142.503 -221.318 li
cp
145.86 -221.318 mo
146.703 -221.318 li
146.703 -220.568 li
145.86 -220.568 li
145.86 -221.318 li
cp
149.216 -221.318 mo
150.06 -221.318 li
150.06 -220.568 li
149.216 -220.568 li
149.216 -221.318 li
cp
152.572 -221.318 mo
153.416 -221.318 li
153.416 -220.568 li
152.572 -220.568 li
152.572 -221.318 li
cp
155.928 -221.318 mo
156.772 -221.318 li
156.772 -220.568 li
155.928 -220.568 li
155.928 -221.318 li
cp
159.285 -221.318 mo
160.128 -221.318 li
160.128 -220.568 li
159.285 -220.568 li
159.285 -221.318 li
cp
162.641 -221.318 mo
163.485 -221.318 li
163.485 -220.568 li
162.641 -220.568 li
162.641 -221.318 li
cp
165.997 -221.318 mo
166.841 -221.318 li
166.841 -220.568 li
165.997 -220.568 li
165.997 -221.318 li
cp
169.353 -221.318 mo
170.197 -221.318 li
170.197 -220.568 li
169.353 -220.568 li
169.353 -221.318 li
cp
172.71 -221.318 mo
173.553 -221.318 li
173.553 -220.568 li
172.71 -220.568 li
172.71 -221.318 li
cp
176.066 -221.318 mo
176.91 -221.318 li
176.91 -220.568 li
176.066 -220.568 li
176.066 -221.318 li
cp
179.422 -221.318 mo
180.266 -221.318 li
180.266 -220.568 li
179.422 -220.568 li
179.422 -221.318 li
cp
182.779 -221.318 mo
183.622 -221.318 li
183.622 -220.568 li
182.779 -220.568 li
182.779 -221.318 li
cp
186.135 -221.318 mo
186.978 -221.318 li
186.978 -220.568 li
186.135 -220.568 li
186.135 -221.318 li
cp
189.491 -221.318 mo
190.335 -221.318 li
190.335 -220.568 li
189.491 -220.568 li
189.491 -221.318 li
cp
192.847 -221.318 mo
193.691 -221.318 li
193.691 -220.568 li
192.847 -220.568 li
192.847 -221.318 li
cp
196.203 -221.318 mo
197.047 -221.318 li
197.047 -220.568 li
196.203 -220.568 li
196.203 -221.318 li
cp
199.56 -221.318 mo
200.404 -221.318 li
200.404 -220.568 li
199.56 -220.568 li
199.56 -221.318 li
cp
202.916 -221.318 mo
203.76 -221.318 li
203.76 -220.568 li
202.916 -220.568 li
202.916 -221.318 li
cp
206.272 -221.318 mo
207.116 -221.318 li
207.116 -220.568 li
206.272 -220.568 li
206.272 -221.318 li
cp
209.628 -221.318 mo
210.472 -221.318 li
210.472 -220.568 li
209.628 -220.568 li
209.628 -221.318 li
cp
212.985 -221.318 mo
213.828 -221.318 li
213.828 -220.568 li
212.985 -220.568 li
212.985 -221.318 li
cp
216.341 -221.318 mo
217.185 -221.318 li
217.185 -220.568 li
216.341 -220.568 li
216.341 -221.318 li
cp
219.697 -221.318 mo
220.541 -221.318 li
220.541 -220.568 li
219.697 -220.568 li
219.697 -221.318 li
cp
223.053 -221.318 mo
223.897 -221.318 li
223.897 -220.568 li
223.053 -220.568 li
223.053 -221.318 li
cp
226.41 -221.318 mo
227.253 -221.318 li
227.253 -220.568 li
226.41 -220.568 li
226.41 -221.318 li
cp
229.766 -221.318 mo
230.61 -221.318 li
230.61 -220.568 li
229.766 -220.568 li
229.766 -221.318 li
cp
233.122 -221.318 mo
233.966 -221.318 li
233.966 -220.568 li
233.122 -220.568 li
233.122 -221.318 li
cp
236.478 -221.318 mo
237.322 -221.318 li
237.322 -220.568 li
236.478 -220.568 li
236.478 -221.318 li
cp
239.835 -221.318 mo
240.678 -221.318 li
240.678 -220.568 li
239.835 -220.568 li
239.835 -221.318 li
cp
243.191 -221.318 mo
244.035 -221.318 li
244.035 -220.568 li
243.191 -220.568 li
243.191 -221.318 li
cp
246.547 -221.318 mo
247.391 -221.318 li
247.391 -220.568 li
246.547 -220.568 li
246.547 -221.318 li
cp
249.903 -221.318 mo
250.747 -221.318 li
250.747 -220.568 li
249.903 -220.568 li
249.903 -221.318 li
cp
253.26 -221.318 mo
254.103 -221.318 li
254.103 -220.568 li
253.26 -220.568 li
253.26 -221.318 li
cp
256.616 -221.318 mo
257.46 -221.318 li
257.46 -220.568 li
256.616 -220.568 li
256.616 -221.318 li
cp
259.972 -221.318 mo
260.816 -221.318 li
260.816 -220.568 li
259.972 -220.568 li
259.972 -221.318 li
cp
263.328 -221.318 mo
264.172 -221.318 li
264.172 -220.568 li
263.328 -220.568 li
263.328 -221.318 li
cp
266.685 -221.318 mo
267.528 -221.318 li
267.528 -220.568 li
266.685 -220.568 li
266.685 -221.318 li
cp
270.041 -221.318 mo
270.885 -221.318 li
270.885 -220.568 li
270.041 -220.568 li
270.041 -221.318 li
cp
273.397 -221.318 mo
274.241 -221.318 li
274.241 -220.568 li
273.397 -220.568 li
273.397 -221.318 li
cp
276.753 -221.318 mo
277.597 -221.318 li
277.597 -220.568 li
276.753 -220.568 li
276.753 -221.318 li
cp
280.11 -221.318 mo
280.953 -221.318 li
280.953 -220.568 li
280.11 -220.568 li
280.11 -221.318 li
cp
283.466 -221.318 mo
284.31 -221.318 li
284.31 -220.568 li
283.466 -220.568 li
283.466 -221.318 li
cp
286.822 -221.318 mo
287.666 -221.318 li
287.666 -220.568 li
286.822 -220.568 li
286.822 -221.318 li
cp
290.178 -221.318 mo
291.022 -221.318 li
291.022 -220.568 li
290.178 -220.568 li
290.178 -221.318 li
cp
293.535 -221.318 mo
294.378 -221.318 li
294.378 -220.568 li
293.535 -220.568 li
293.535 -221.318 li
cp
296.891 -221.318 mo
297.735 -221.318 li
297.735 -220.568 li
296.891 -220.568 li
296.891 -221.318 li
cp
300.247 -221.318 mo
301.091 -221.318 li
301.091 -220.568 li
300.247 -220.568 li
300.247 -221.318 li
cp
303.603 -221.318 mo
304.447 -221.318 li
304.447 -220.568 li
303.603 -220.568 li
303.603 -221.318 li
cp
306.96 -221.318 mo
307.803 -221.318 li
307.803 -220.568 li
306.96 -220.568 li
306.96 -221.318 li
cp
310.316 -221.318 mo
311.16 -221.318 li
311.16 -220.568 li
310.316 -220.568 li
310.316 -221.318 li
cp
313.672 -221.318 mo
314.516 -221.318 li
314.516 -220.568 li
313.672 -220.568 li
313.672 -221.318 li
cp
317.028 -221.318 mo
317.872 -221.318 li
317.872 -220.568 li
317.028 -220.568 li
317.028 -221.318 li
cp
320.385 -221.318 mo
321.228 -221.318 li
321.228 -220.568 li
320.385 -220.568 li
320.385 -221.318 li
cp
323.741 -221.318 mo
324.585 -221.318 li
324.585 -220.568 li
323.741 -220.568 li
323.741 -221.318 li
cp
327.097 -221.318 mo
327.941 -221.318 li
327.941 -220.568 li
327.097 -220.568 li
327.097 -221.318 li
cp
330.453 -221.318 mo
331.297 -221.318 li
331.297 -220.568 li
330.453 -220.568 li
330.453 -221.318 li
cp
333.81 -221.318 mo
334.653 -221.318 li
334.653 -220.568 li
333.81 -220.568 li
333.81 -221.318 li
cp
337.166 -221.318 mo
338.01 -221.318 li
338.01 -220.568 li
337.166 -220.568 li
337.166 -221.318 li
cp
340.522 -221.318 mo
341.366 -221.318 li
341.366 -220.568 li
340.522 -220.568 li
340.522 -221.318 li
cp
343.878 -221.318 mo
344.722 -221.318 li
344.722 -220.568 li
343.878 -220.568 li
343.878 -221.318 li
cp
347.235 -221.318 mo
348.078 -221.318 li
348.078 -220.568 li
347.235 -220.568 li
347.235 -221.318 li
cp
350.591 -221.318 mo
351.435 -221.318 li
351.435 -220.568 li
350.591 -220.568 li
350.591 -221.318 li
cp
353.947 -221.318 mo
354.791 -221.318 li
354.791 -220.568 li
353.947 -220.568 li
353.947 -221.318 li
cp
357.303 -221.318 mo
358.147 -221.318 li
358.147 -220.568 li
357.303 -220.568 li
357.303 -221.318 li
cp
360.66 -221.318 mo
361.503 -221.318 li
361.503 -220.568 li
360.66 -220.568 li
360.66 -221.318 li
cp
364.016 -221.318 mo
364.86 -221.318 li
364.86 -220.568 li
364.016 -220.568 li
364.016 -221.318 li
cp
367.372 -221.318 mo
368.216 -221.318 li
368.216 -220.568 li
367.372 -220.568 li
367.372 -221.318 li
cp
370.728 -221.318 mo
371.572 -221.318 li
371.572 -220.568 li
370.728 -220.568 li
370.728 -221.318 li
cp
374.085 -221.318 mo
374.928 -221.318 li
374.928 -220.568 li
374.085 -220.568 li
374.085 -221.318 li
cp
377.441 -221.318 mo
378.285 -221.318 li
378.285 -220.568 li
377.441 -220.568 li
377.441 -221.318 li
cp
380.797 -221.318 mo
381.641 -221.318 li
381.641 -220.568 li
380.797 -220.568 li
380.797 -221.318 li
cp
384.153 -221.318 mo
384.997 -221.318 li
384.997 -220.568 li
384.153 -220.568 li
384.153 -221.318 li
cp
387.51 -221.318 mo
388.353 -221.318 li
388.353 -220.568 li
387.51 -220.568 li
387.51 -221.318 li
cp
390.866 -221.318 mo
391.71 -221.318 li
391.71 -220.568 li
390.866 -220.568 li
390.866 -221.318 li
cp
394.222 -221.318 mo
395.066 -221.318 li
395.066 -220.568 li
394.222 -220.568 li
394.222 -221.318 li
cp
397.578 -221.318 mo
398.422 -221.318 li
398.422 -220.568 li
397.578 -220.568 li
397.578 -221.318 li
cp
400.935 -221.318 mo
401.778 -221.318 li
401.778 -220.568 li
400.935 -220.568 li
400.935 -221.318 li
cp
404.291 -221.318 mo
405.135 -221.318 li
405.135 -220.568 li
404.291 -220.568 li
404.291 -221.318 li
cp
407.647 -221.318 mo
408.491 -221.318 li
408.491 -220.568 li
407.647 -220.568 li
407.647 -221.318 li
cp
411.003 -221.318 mo
411.847 -221.318 li
411.847 -220.568 li
411.003 -220.568 li
411.003 -221.318 li
cp
414.36 -221.318 mo
415.203 -221.318 li
415.203 -220.568 li
414.36 -220.568 li
414.36 -221.318 li
cp
417.716 -221.318 mo
418.56 -221.318 li
418.56 -220.568 li
417.716 -220.568 li
417.716 -221.318 li
cp
421.072 -221.318 mo
421.916 -221.318 li
421.916 -220.568 li
421.072 -220.568 li
421.072 -221.318 li
cp
424.428 -221.318 mo
425.272 -221.318 li
425.272 -220.568 li
424.428 -220.568 li
424.428 -221.318 li
cp
427.785 -221.318 mo
428.628 -221.318 li
428.628 -220.568 li
427.785 -220.568 li
427.785 -221.318 li
cp
431.141 -221.318 mo
431.985 -221.318 li
431.985 -220.568 li
431.141 -220.568 li
431.141 -221.318 li
cp
434.55 -221.304 mo
434.894 -221.269 435.217 -221.167 435.518 -221 cv
435.153 -220.344 li
434.942 -220.462 434.716 -220.533 434.474 -220.558 cv
434.55 -221.304 li
cp
436.815 -218.52 mo
436.815 -217.677 li
436.065 -217.677 li
436.065 -218.52 li
436.815 -218.52 li
cp
436.815 -215.164 mo
436.815 -214.32 li
436.065 -214.32 li
436.065 -215.164 li
436.815 -215.164 li
cp
436.815 -211.808 mo
436.815 -210.964 li
436.065 -210.964 li
436.065 -211.808 li
436.815 -211.808 li
cp
436.815 -208.452 mo
436.815 -208.215 li
436.815 -207.962 436.778 -207.715 436.705 -207.475 cv
435.988 -207.693 li
436.039 -207.862 436.065 -208.036 436.065 -208.215 cv
436.065 -208.452 li
436.815 -208.452 li
cp
434.509 -205.697 mo
434.436 -205.691 434.362 -205.687 434.287 -205.687 cv
433.62 -205.687 li
433.62 -206.437 li
434.287 -206.437 li
434.34 -206.437 434.393 -206.44 434.445 -206.444 cv
434.509 -205.697 li
cp
431.108 -205.687 mo
430.264 -205.687 li
430.264 -206.437 li
431.108 -206.437 li
431.108 -205.687 li
cp
427.752 -205.687 mo
426.908 -205.687 li
426.908 -206.437 li
427.752 -206.437 li
427.752 -205.687 li
cp
424.395 -205.687 mo
423.552 -205.687 li
423.552 -206.437 li
424.395 -206.437 li
424.395 -205.687 li
cp
421.039 -205.687 mo
420.195 -205.687 li
420.195 -206.437 li
421.039 -206.437 li
421.039 -205.687 li
cp
417.683 -205.687 mo
416.839 -205.687 li
416.839 -206.437 li
417.683 -206.437 li
417.683 -205.687 li
cp
414.327 -205.687 mo
413.483 -205.687 li
413.483 -206.437 li
414.327 -206.437 li
414.327 -205.687 li
cp
410.97 -205.687 mo
410.127 -205.687 li
410.127 -206.437 li
410.97 -206.437 li
410.97 -205.687 li
cp
407.614 -205.687 mo
406.77 -205.687 li
406.77 -206.437 li
407.614 -206.437 li
407.614 -205.687 li
cp
404.258 -205.687 mo
403.414 -205.687 li
403.414 -206.437 li
404.258 -206.437 li
404.258 -205.687 li
cp
400.902 -205.687 mo
400.058 -205.687 li
400.058 -206.437 li
400.902 -206.437 li
400.902 -205.687 li
cp
397.545 -205.687 mo
396.702 -205.687 li
396.702 -206.437 li
397.545 -206.437 li
397.545 -205.687 li
cp
394.189 -205.687 mo
393.345 -205.687 li
393.345 -206.437 li
394.189 -206.437 li
394.189 -205.687 li
cp
390.833 -205.687 mo
389.989 -205.687 li
389.989 -206.437 li
390.833 -206.437 li
390.833 -205.687 li
cp
387.477 -205.687 mo
386.633 -205.687 li
386.633 -206.437 li
387.477 -206.437 li
387.477 -205.687 li
cp
384.12 -205.687 mo
383.277 -205.687 li
383.277 -206.437 li
384.12 -206.437 li
384.12 -205.687 li
cp
380.764 -205.687 mo
379.92 -205.687 li
379.92 -206.437 li
380.764 -206.437 li
380.764 -205.687 li
cp
377.408 -205.687 mo
376.564 -205.687 li
376.564 -206.437 li
377.408 -206.437 li
377.408 -205.687 li
cp
374.052 -205.687 mo
373.208 -205.687 li
373.208 -206.437 li
374.052 -206.437 li
374.052 -205.687 li
cp
370.695 -205.687 mo
369.852 -205.687 li
369.852 -206.437 li
370.695 -206.437 li
370.695 -205.687 li
cp
367.339 -205.687 mo
366.495 -205.687 li
366.495 -206.437 li
367.339 -206.437 li
367.339 -205.687 li
cp
363.983 -205.687 mo
363.139 -205.687 li
363.139 -206.437 li
363.983 -206.437 li
363.983 -205.687 li
cp
360.627 -205.687 mo
359.783 -205.687 li
359.783 -206.437 li
360.627 -206.437 li
360.627 -205.687 li
cp
357.27 -205.687 mo
356.427 -205.687 li
356.427 -206.437 li
357.27 -206.437 li
357.27 -205.687 li
cp
353.914 -205.687 mo
353.07 -205.687 li
353.07 -206.437 li
353.914 -206.437 li
353.914 -205.687 li
cp
350.558 -205.687 mo
349.714 -205.687 li
349.714 -206.437 li
350.558 -206.437 li
350.558 -205.687 li
cp
347.202 -205.687 mo
346.358 -205.687 li
346.358 -206.437 li
347.202 -206.437 li
347.202 -205.687 li
cp
343.845 -205.687 mo
343.002 -205.687 li
343.002 -206.437 li
343.845 -206.437 li
343.845 -205.687 li
cp
340.489 -205.687 mo
339.645 -205.687 li
339.645 -206.437 li
340.489 -206.437 li
340.489 -205.687 li
cp
337.133 -205.687 mo
336.289 -205.687 li
336.289 -206.437 li
337.133 -206.437 li
337.133 -205.687 li
cp
333.777 -205.687 mo
332.933 -205.687 li
332.933 -206.437 li
333.777 -206.437 li
333.777 -205.687 li
cp
330.42 -205.687 mo
329.577 -205.687 li
329.577 -206.437 li
330.42 -206.437 li
330.42 -205.687 li
cp
327.064 -205.687 mo
326.22 -205.687 li
326.22 -206.437 li
327.064 -206.437 li
327.064 -205.687 li
cp
323.708 -205.687 mo
322.864 -205.687 li
322.864 -206.437 li
323.708 -206.437 li
323.708 -205.687 li
cp
320.352 -205.687 mo
319.508 -205.687 li
319.508 -206.437 li
320.352 -206.437 li
320.352 -205.687 li
cp
316.995 -205.687 mo
316.152 -205.687 li
316.152 -206.437 li
316.995 -206.437 li
316.995 -205.687 li
cp
313.639 -205.687 mo
312.795 -205.687 li
312.795 -206.437 li
313.639 -206.437 li
313.639 -205.687 li
cp
310.283 -205.687 mo
309.439 -205.687 li
309.439 -206.437 li
310.283 -206.437 li
310.283 -205.687 li
cp
306.927 -205.687 mo
306.083 -205.687 li
306.083 -206.437 li
306.927 -206.437 li
306.927 -205.687 li
cp
303.57 -205.687 mo
302.727 -205.687 li
302.727 -206.437 li
303.57 -206.437 li
303.57 -205.687 li
cp
300.214 -205.687 mo
299.37 -205.687 li
299.37 -206.437 li
300.214 -206.437 li
300.214 -205.687 li
cp
296.858 -205.687 mo
296.014 -205.687 li
296.014 -206.437 li
296.858 -206.437 li
296.858 -205.687 li
cp
293.502 -205.687 mo
292.658 -205.687 li
292.658 -206.437 li
293.502 -206.437 li
293.502 -205.687 li
cp
290.145 -205.687 mo
289.302 -205.687 li
289.302 -206.437 li
290.145 -206.437 li
290.145 -205.687 li
cp
286.789 -205.687 mo
285.945 -205.687 li
285.945 -206.437 li
286.789 -206.437 li
286.789 -205.687 li
cp
283.433 -205.687 mo
282.589 -205.687 li
282.589 -206.437 li
283.433 -206.437 li
283.433 -205.687 li
cp
280.077 -205.687 mo
279.233 -205.687 li
279.233 -206.437 li
280.077 -206.437 li
280.077 -205.687 li
cp
276.72 -205.687 mo
275.877 -205.687 li
275.877 -206.437 li
276.72 -206.437 li
276.72 -205.687 li
cp
273.364 -205.687 mo
272.52 -205.687 li
272.52 -206.437 li
273.364 -206.437 li
273.364 -205.687 li
cp
270.008 -205.687 mo
269.164 -205.687 li
269.164 -206.437 li
270.008 -206.437 li
270.008 -205.687 li
cp
266.652 -205.687 mo
265.808 -205.687 li
265.808 -206.437 li
266.652 -206.437 li
266.652 -205.687 li
cp
263.295 -205.687 mo
262.452 -205.687 li
262.452 -206.437 li
263.295 -206.437 li
263.295 -205.687 li
cp
259.939 -205.687 mo
259.095 -205.687 li
259.095 -206.437 li
259.939 -206.437 li
259.939 -205.687 li
cp
256.583 -205.687 mo
255.739 -205.687 li
255.739 -206.437 li
256.583 -206.437 li
256.583 -205.687 li
cp
253.227 -205.687 mo
252.383 -205.687 li
252.383 -206.437 li
253.227 -206.437 li
253.227 -205.687 li
cp
249.87 -205.687 mo
249.027 -205.687 li
249.027 -206.437 li
249.87 -206.437 li
249.87 -205.687 li
cp
246.514 -205.687 mo
245.67 -205.687 li
245.67 -206.437 li
246.514 -206.437 li
246.514 -205.687 li
cp
243.158 -205.687 mo
242.314 -205.687 li
242.314 -206.437 li
243.158 -206.437 li
243.158 -205.687 li
cp
239.802 -205.687 mo
238.958 -205.687 li
238.958 -206.437 li
239.802 -206.437 li
239.802 -205.687 li
cp
236.445 -205.687 mo
235.602 -205.687 li
235.602 -206.437 li
236.445 -206.437 li
236.445 -205.687 li
cp
233.089 -205.687 mo
232.245 -205.687 li
232.245 -206.437 li
233.089 -206.437 li
233.089 -205.687 li
cp
229.733 -205.687 mo
228.889 -205.687 li
228.889 -206.437 li
229.733 -206.437 li
229.733 -205.687 li
cp
226.377 -205.687 mo
225.533 -205.687 li
225.533 -206.437 li
226.377 -206.437 li
226.377 -205.687 li
cp
223.02 -205.687 mo
222.177 -205.687 li
222.177 -206.437 li
223.02 -206.437 li
223.02 -205.687 li
cp
219.664 -205.687 mo
218.82 -205.687 li
218.82 -206.437 li
219.664 -206.437 li
219.664 -205.687 li
cp
216.308 -205.687 mo
215.464 -205.687 li
215.464 -206.437 li
216.308 -206.437 li
216.308 -205.687 li
cp
212.952 -205.687 mo
212.108 -205.687 li
212.108 -206.437 li
212.952 -206.437 li
212.952 -205.687 li
cp
209.595 -205.687 mo
208.752 -205.687 li
208.752 -206.437 li
209.595 -206.437 li
209.595 -205.687 li
cp
206.239 -205.687 mo
205.395 -205.687 li
205.395 -206.437 li
206.239 -206.437 li
206.239 -205.687 li
cp
202.883 -205.687 mo
202.039 -205.687 li
202.039 -206.437 li
202.883 -206.437 li
202.883 -205.687 li
cp
199.527 -205.687 mo
198.683 -205.687 li
198.683 -206.437 li
199.527 -206.437 li
199.527 -205.687 li
cp
196.17 -205.687 mo
195.327 -205.687 li
195.327 -206.437 li
196.17 -206.437 li
196.17 -205.687 li
cp
192.814 -205.687 mo
191.97 -205.687 li
191.97 -206.437 li
192.814 -206.437 li
192.814 -205.687 li
cp
189.458 -205.687 mo
188.614 -205.687 li
188.614 -206.437 li
189.458 -206.437 li
189.458 -205.687 li
cp
186.102 -205.687 mo
185.258 -205.687 li
185.258 -206.437 li
186.102 -206.437 li
186.102 -205.687 li
cp
182.745 -205.687 mo
181.902 -205.687 li
181.902 -206.437 li
182.745 -206.437 li
182.745 -205.687 li
cp
179.389 -205.687 mo
178.545 -205.687 li
178.545 -206.437 li
179.389 -206.437 li
179.389 -205.687 li
cp
176.033 -205.687 mo
175.189 -205.687 li
175.189 -206.437 li
176.033 -206.437 li
176.033 -205.687 li
cp
172.677 -205.687 mo
171.833 -205.687 li
171.833 -206.437 li
172.677 -206.437 li
172.677 -205.687 li
cp
169.32 -205.687 mo
168.477 -205.687 li
168.477 -206.437 li
169.32 -206.437 li
169.32 -205.687 li
cp
165.964 -205.687 mo
165.12 -205.687 li
165.12 -206.437 li
165.964 -206.437 li
165.964 -205.687 li
cp
162.608 -205.687 mo
161.764 -205.687 li
161.764 -206.437 li
162.608 -206.437 li
162.608 -205.687 li
cp
159.252 -205.687 mo
158.408 -205.687 li
158.408 -206.437 li
159.252 -206.437 li
159.252 -205.687 li
cp
155.895 -205.687 mo
155.052 -205.687 li
155.052 -206.437 li
155.895 -206.437 li
155.895 -205.687 li
cp
152.539 -205.687 mo
151.695 -205.687 li
151.695 -206.437 li
152.539 -206.437 li
152.539 -205.687 li
cp
149.183 -205.687 mo
148.339 -205.687 li
148.339 -206.437 li
149.183 -206.437 li
149.183 -205.687 li
cp
145.827 -205.687 mo
144.983 -205.687 li
144.983 -206.437 li
145.827 -206.437 li
145.827 -205.687 li
cp
142.47 -205.687 mo
141.627 -205.687 li
141.627 -206.437 li
142.47 -206.437 li
142.47 -205.687 li
cp
139.114 -205.687 mo
138.27 -205.687 li
138.27 -206.437 li
139.114 -206.437 li
139.114 -205.687 li
cp
135.758 -205.687 mo
134.914 -205.687 li
134.914 -206.437 li
135.758 -206.437 li
135.758 -205.687 li
cp
132.402 -205.687 mo
131.558 -205.687 li
131.558 -206.437 li
132.402 -206.437 li
132.402 -205.687 li
cp
129.045 -205.687 mo
128.202 -205.687 li
128.202 -206.437 li
129.045 -206.437 li
129.045 -205.687 li
cp
125.689 -205.687 mo
124.845 -205.687 li
124.845 -206.437 li
125.689 -206.437 li
125.689 -205.687 li
cp
122.333 -205.687 mo
121.489 -205.687 li
121.489 -206.437 li
122.333 -206.437 li
122.333 -205.687 li
cp
118.977 -205.687 mo
118.133 -205.687 li
118.133 -206.437 li
118.977 -206.437 li
118.977 -205.687 li
cp
115.62 -205.687 mo
114.777 -205.687 li
114.777 -206.437 li
115.62 -206.437 li
115.62 -205.687 li
cp
112.264 -205.687 mo
111.42 -205.687 li
111.42 -206.437 li
112.264 -206.437 li
112.264 -205.687 li
cp
108.908 -205.687 mo
108.064 -205.687 li
108.064 -206.437 li
108.908 -206.437 li
108.908 -205.687 li
cp
105.552 -205.687 mo
104.708 -205.687 li
104.708 -206.437 li
105.552 -206.437 li
105.552 -205.687 li
cp
102.195 -205.687 mo
101.352 -205.687 li
101.352 -206.437 li
102.195 -206.437 li
102.195 -205.687 li
cp
98.8392 -205.687 mo
97.9955 -205.687 li
97.9955 -206.437 li
98.8392 -206.437 li
98.8392 -205.687 li
cp
95.4829 -205.687 mo
94.6392 -205.687 li
94.6392 -206.437 li
95.4829 -206.437 li
95.4829 -205.687 li
cp
92.1267 -205.687 mo
91.283 -205.687 li
91.283 -206.437 li
92.1267 -206.437 li
92.1267 -205.687 li
cp
88.7705 -205.687 mo
87.9267 -205.687 li
87.9267 -206.437 li
88.7705 -206.437 li
88.7705 -205.687 li
cp
85.4142 -205.687 mo
84.5704 -205.687 li
84.5704 -206.437 li
85.4142 -206.437 li
85.4142 -205.687 li
cp
82.058 -205.687 mo
81.2142 -205.687 li
81.2142 -206.437 li
82.058 -206.437 li
82.058 -205.687 li
cp
78.7017 -205.687 mo
77.8579 -205.687 li
77.8579 -206.437 li
78.7017 -206.437 li
78.7017 -205.687 li
cp
75.3455 -205.687 mo
74.5017 -205.687 li
74.5017 -206.437 li
75.3455 -206.437 li
75.3455 -205.687 li
cp
71.9892 -205.687 mo
71.9624 -205.687 li
71.6219 -205.687 71.2962 -205.752 70.9852 -205.882 cv
71.2742 -206.574 li
71.4927 -206.483 71.7221 -206.437 71.9624 -206.437 cv
71.9892 -206.437 li
71.9892 -205.687 li
cp
69.4349 -208.248 mo
69.4349 -209.092 li
70.1849 -209.092 li
70.1849 -208.248 li
69.4349 -208.248 li
cp
69.4349 -211.604 mo
69.4349 -212.448 li
70.1849 -212.448 li
70.1849 -211.604 li
69.4349 -211.604 li
cp
69.4349 -214.961 mo
69.4349 -215.804 li
70.1849 -215.804 li
70.1849 -214.961 li
69.4349 -214.961 li
cp
69.4349 -218.317 mo
69.4349 -218.79 li
69.4349 -219.142 69.504 -219.477 69.6422 -219.797 cv
70.3306 -219.499 li
70.2335 -219.274 70.1849 -219.038 70.1849 -218.79 cv
70.1849 -218.317 li
69.4349 -218.317 li
cp
.33872 .685634 1 .2963 cmyk
f
.75 lw
292.027 -205.792 mo
275.482 -187.747 266.122 -166.62 291.322 -139.95 cv
.428534 .348058 .352331 .0131533 cmyk
@
284.628 -143.317 mo
287.723 -142.159 290.214 -140.766 292.1 -139.14 cv
290.538 -141.079 289.229 -143.615 288.175 -146.748 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 292.1 -139.14 ]ct
@
grestore newpath
.75 lw
213.127 -355.942 mo
262.005 -290.025 225.93 -212.347 283.927 -132.765 cv
.107546 1 1 .0573129 cmyk
@
277.951 -136.684 mo
280.869 -135.131 283.156 -133.424 284.812 -131.565 cv
283.517 -133.692 282.552 -136.377 281.917 -139.621 cv
1 lw
gsave
[-.446328 -.602737 .602737 -.446328 284.812 -131.565 ]ct
@
grestore newpath
.75 lw
331.56 -169.193 mo
384.81 -169.193 li
.0299992 .399451 1 0 cmyk
@
378.115 -166.722 mo
381.1 -168.142 383.832 -168.965 386.312 -169.19 cv
383.832 -169.415 381.1 -170.237 378.115 -171.657 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 386.312 -169.19 ]ct
@
grestore newpath
.75 lw
81.1499 -307.237 mo
81.0674 -280.567 li
.428534 .348058 .352331 .0131533 cmyk
@
78.6207 -287.27 mo
80.0313 -284.281 80.8452 -281.546 81.0624 -279.065 cv
81.2952 -281.544 82.1263 -284.274 83.5557 -287.255 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 81.0624 -279.065 ]ct
@
grestore newpath
.75 lw
291.9 -307.237 mo
291.817 -280.567 li
@
289.371 -287.27 mo
290.781 -284.281 291.595 -281.546 291.812 -279.065 cv
292.045 -281.544 292.876 -284.274 294.306 -287.255 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 291.812 -279.065 ]ct
@
grestore newpath
.75 lw
396.9 -307.237 mo
396.817 -280.567 li
@
394.371 -287.27 mo
395.781 -284.281 396.595 -281.546 396.812 -279.065 cv
397.045 -281.544 397.876 -284.274 399.306 -287.255 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 396.812 -279.065 ]ct
@
grestore newpath
.75 lw
501.9 -307.237 mo
501.81 -177.443 li
@
499.351 -184.139 mo
500.769 -181.153 501.589 -178.42 501.812 -175.94 cv
502.039 -178.42 502.864 -181.152 504.286 -184.136 cv
1 lw
gsave
[.000523599 -.75 .75 .000523599 501.812 -175.94 ]ct
@
grestore newpath
.75 lw
187.65 -349.237 mo
187.567 -322.567 li
@
185.121 -329.27 mo
186.531 -326.281 187.345 -323.546 187.562 -321.065 cv
187.795 -323.544 188.626 -326.274 190.056 -329.255 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 187.562 -321.065 ]ct
@
grestore newpath
.75 lw
187.65 -349.237 mo
171.105 -331.2 161.595 -306.615 186.787 -279.877 cv
@
180.09 -283.242 mo
183.186 -282.084 185.677 -280.691 187.562 -279.065 cv
186 -281.004 184.692 -283.54 183.638 -286.673 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 187.562 -279.065 ]ct
@
grestore newpath
.75 lw
502.05 -162.637 mo
502.095 -140.64 li
@
499.615 -147.332 mo
501.042 -144.35 501.87 -141.619 502.1 -139.14 cv
502.32 -141.62 503.137 -144.355 504.55 -147.343 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 502.1 -139.14 ]ct
@
grestore newpath
.75 lw
396.3 -162.637 mo
396.345 -140.64 li
@
393.865 -147.332 mo
395.292 -144.35 396.12 -141.619 396.35 -139.14 cv
396.57 -141.62 397.387 -144.355 398.8 -147.343 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 396.35 -139.14 ]ct
@
grestore newpath
.75 lw
331.56 -169.193 mo
388.342 -144.068 445.8 -143.198 490.702 -169.297 cv
.0299992 .399451 1 0 cmyk
@
485.563 -163.404 mo
487.415 -166.143 489.352 -168.238 491.375 -169.69 cv
489.124 -168.626 486.352 -167.948 483.059 -167.657 cv
1 lw
gsave
[-.646288 .380541 -.380541 -.646288 491.375 -169.69 ]ct
@
grestore newpath
.75 lw
213.127 -355.942 mo
339.127 -316.44 384.877 -242.19 392.377 -138.69 cv
.107546 1 1 .0573129 cmyk
@
389.322 -146.688 mo
390.954 -143.813 391.971 -141.147 392.375 -138.69 cv
392.42 -141.18 393.043 -143.964 394.244 -147.044 cv
1 lw
gsave
[-.0541453 -.748043 .748043 -.0541453 392.375 -138.69 ]ct
@
grestore newpath
.75 lw
213.127 -355.942 mo
349.627 -327.69 500.152 -269.992 498.127 -139.193 cv
@
495.785 -147.425 mo
497.158 -144.418 497.938 -141.673 498.125 -139.19 cv
498.388 -141.666 499.253 -144.386 500.719 -147.348 cv
1 lw
gsave
[.0116496 -.74991 .74991 .0116496 498.125 -139.19 ]ct
@
grestore newpath
grestore
gsave
-180.75 -444.69 mo
1475.25 -444.69 li
1475.25 -59.1899 li
-180.75 -59.1899 li
cp
eclp
.685756 .61828 .606409 .522393 cmyk
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIG+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIG+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.008 -0.276 0.98 0.733 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g13 put
dup 33 /g32 put
dup 34 /g20 put
dup 35 /g1C put
dup 36 /g26 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g13 {666 0 9 -692 639 3 setcachedevice
105 -664 mo
161 -662 li
185 -661 196 -653 196 -635 cv
196 -621 192 -589 187 -559 cv
112 -125 li
96 -34 94 -32 54 -28 cv
13 -25 li
9 3 li
51 2 li
98 0 117 0 141 0 cv
238 3 li
264 3 li
267 -25 li
218 -28 li
191 -30 182 -38 182 -58 cv
182 -67 183 -76 186 -93 cv
287 -648 li
316 -654 336 -656 363 -656 cv
450 -656 496 -617 496 -543 cv
496 -448 418 -378 314 -378 cv
270 -378 li
267 -367 li
401 -172 432 -124 507 3 cv
592 0 li
593 0 607 1 626 3 cv
639 3 li
639 -24 li
599 -29 588 -37 559 -79 cv
375 -354 li
430 -364 459 -376 495 -402 cv
553 -444 584 -499 584 -560 cv
584 -646 520 -693 409 -691 cv
108 -691 li
105 -664 li
cp
false sop
f
}bind def
/g32 {721 0 21 -482 699 11 setcachedevice
167 -420 mo
188 -420 201 -421 226 -424 cv
171 -350 72 -266 72 -126 cv
72 -44 107 11 160 11 cv
224 11 276 -44 350 -187 cv
341 -143 338 -118 338 -95 cv
338 -32 367 11 412 11 cv
546 11 699 -238 699 -384 cv
699 -441 673 -482 637 -482 cv
624 -482 612 -478 604 -470 cv
554 -423 li
565 -404 li
574 -410 583 -413 592 -413 cv
619 -413 635 -390 635 -350 cv
635 -205 538 -39 453 -39 cv
424 -39 403 -79 403 -134 cv
403 -181 412 -247 424 -290 cv
476 -474 li
469 -482 li
395 -460 li
366 -311 li
354 -249 340 -209 311 -155 cv
271 -80 233 -39 203 -39 cv
168 -39 145 -78 145 -136 cv
145 -255 186 -352 285 -464 cv
275 -482 li
255 -473 242 -470 214 -470 cv
186 -470 144 -472 115 -475 cv
103 -476 li
97 -477 92 -477 91 -477 cv
79 -477 70 -475 59 -470 cv
45 -443 34 -407 21 -352 cv
43 -352 li
60 -394 li
67 -411 87 -422 111 -422 cv
145 -422 128 -420 167 -420 cv
cp
false sop
f
}bind def
/g20 {388 0 15 -484 374 11 setcachedevice
328 -111 mo
304 -94 li
251 -56 203 -36 167 -36 cv
120 -36 91 -73 91 -133 cv
91 -158 94 -185 99 -214 cv
116 -218 225 -248 250 -259 cv
335 -296 374 -342 374 -404 cv
374 -451 340 -482 290 -482 cv
222 -496 112 -423 75 -349 cv
45 -299 15 -180 15 -113 cv
15 -35 59 11 131 11 cv
188 11 244 -17 336 -92 cv
328 -111 li
cp
113 -274 mo
130 -343 150 -386 179 -412 cv
197 -428 228 -440 252 -440 cv
281 -440 300 -420 300 -388 cv
300 -344 265 -297 213 -272 cv
185 -258 149 -247 104 -237 cv
113 -274 li
cp
false sop
f
}bind def
/g1C {443 0 4 -482 406 11 setcachedevice
271 -204 mo
242 -77 li
238 -60 236 -42 236 -26 cv
236 -4 245 9 260 9 cv
283 9 324 -17 406 -85 cv
399 -106 li
375 -86 346 -59 324 -59 cv
315 -59 309 -68 309 -82 cv
309 -87 309 -90 310 -93 cv
402 -472 li
392 -481 li
359 -463 li
318 -478 301 -482 274 -482 cv
246 -482 226 -477 199 -464 cv
137 -433 104 -403 79 -354 cv
35 -265 4 -145 4 -67 cv
4 -23 19 11 38 11 cv
75 11 155 -41 271 -204 cv
cp
319 -414 mo
297 -305 278 -253 244 -201 cv
187 -117 126 -59 94 -59 cv
82 -59 76 -72 76 -99 cv
76 -163 104 -280 139 -360 cv
163 -415 186 -433 234 -433 cv
257 -433 275 -429 319 -414 cv
cp
false sop
f
}bind def
/g26 {468 0 14 -733 455 9 setcachedevice
240 -722 mo
228 -733 li
176 -707 140 -698 68 -691 cv
64 -670 li
112 -670 li
136 -670 146 -663 146 -646 cv
146 -638 145 -629 144 -622 cv
96 -354 li
82 -279 66 -210 14 -1 cv
23 9 li
90 -8 li
113 -132 li
122 -180 146 -225 180 -259 cv
249 -59 281 9 306 9 cv
319 9 343 -4 387 -35 cv
433 -67 li
425 -86 li
382 -62 li
368 -54 361 -52 353 -52 cv
343 -52 336 -58 327 -75 cv
292 -139 270 -193 231 -316 cv
245 -330 li
306 -391 352 -416 402 -416 cv
410 -416 421 -414 438 -410 cv
455 -473 li
437 -479 419 -482 407 -482 cv
341 -482 258 -405 133 -230 cv
240 -722 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIH+ /UUNUIG+ findfont ct_VMDictPut
/UUNUIH+*1 
[32{/.notdef}rp /g13 /g32 /g20 /g1C /g26 219{/.notdef}rp]
UUNUIH+ nf
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
285.199 -126.983 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
294.422 -131.94 mo
(!)sh
300.857 -131.94 mo
(")sh
304.32 -131.94 mo
(#)sh
308.273 -131.94 mo
($)sh
false sop
.749844 .679255 .654902 .901945 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUII+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUII+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.025 -0.276 0.98 0.733 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g13 put
dup 33 /g14 put
dup 34 /g1C put
dup 35 /g1E put
dup 36 /g2C put
dup 37 /g1D put
dup 38 /g2D put
dup 39 /g2E put
dup 40 /g34 put
dup 41 /g29 put
dup 42 /g18 put
dup 43 /g20 put
dup 44 /g27 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g13 {666 0 9 -692 639 3 setcachedevice
105 -664 mo
161 -662 li
185 -661 196 -653 196 -635 cv
196 -621 192 -589 187 -559 cv
112 -125 li
96 -34 94 -32 54 -28 cv
13 -25 li
9 3 li
51 2 li
98 0 117 0 141 0 cv
238 3 li
264 3 li
267 -25 li
218 -28 li
191 -30 182 -38 182 -58 cv
182 -67 183 -76 186 -93 cv
287 -648 li
316 -654 336 -656 363 -656 cv
450 -656 496 -617 496 -543 cv
496 -448 418 -378 314 -378 cv
270 -378 li
267 -367 li
401 -172 432 -124 507 3 cv
592 0 li
593 0 607 1 626 3 cv
639 3 li
639 -24 li
599 -29 588 -37 559 -79 cv
375 -354 li
430 -364 459 -376 495 -402 cv
553 -444 584 -499 584 -560 cv
584 -646 520 -693 409 -691 cv
108 -691 li
105 -664 li
cp
false sop
f
}bind def
/g14 {555 0 42 -706 506 18 setcachedevice
108 -471 mo
108 -386 146 -339 230 -319 cv
325 -296 li
379 -283 406 -248 406 -191 cv
406 -96 335 -30 232 -30 cv
178 -30 140 -42 96 -73 cv
96 -172 li
66 -172 li
60 -117 53 -72 42 -20 cv
91 5 144 18 197 18 cv
352 18 485 -99 485 -234 cv
485 -313 442 -355 341 -377 cv
276 -391 li
210 -405 180 -442 180 -508 cv
180 -595 247 -658 339 -658 cv
388 -658 421 -645 451 -613 cv
451 -537 li
481 -537 li
485 -591 492 -629 506 -672 cv
461 -696 421 -706 374 -706 cv
250 -706 108 -614 108 -471 cv
cp
false sop
f
}bind def
/g1C {443 0 4 -482 406 11 setcachedevice
271 -204 mo
242 -77 li
238 -60 236 -42 236 -26 cv
236 -4 245 9 260 9 cv
283 9 324 -17 406 -85 cv
399 -106 li
375 -86 346 -59 324 -59 cv
315 -59 309 -68 309 -82 cv
309 -87 309 -90 310 -93 cv
402 -472 li
392 -481 li
359 -463 li
318 -478 301 -482 274 -482 cv
246 -482 226 -477 199 -464 cv
137 -433 104 -403 79 -354 cv
35 -265 4 -145 4 -67 cv
4 -23 19 11 38 11 cv
75 11 155 -41 271 -204 cv
cp
319 -414 mo
297 -305 278 -253 244 -201 cv
187 -117 126 -59 94 -59 cv
82 -59 76 -72 76 -99 cv
76 -163 104 -280 139 -360 cv
163 -415 186 -433 234 -433 cv
257 -433 275 -429 319 -414 cv
cp
false sop
f
}bind def
/g1E {406 0 25 -483 389 11 setcachedevice
342 -330 mo
365 -330 li
373 -395 380 -432 389 -458 cv
365 -473 330 -482 293 -482 cv
248 -483 175 -463 118 -400 cv
64 -352 25 -241 25 -136 cv
25 -40 67 11 147 11 cv
201 11 249 -9 304 -54 cv
354 -95 li
346 -115 li
331 -105 li
259 -57 221 -40 186 -40 cv
130 -40 101 -80 101 -159 cv
101 -267 136 -371 185 -409 cv
206 -425 230 -433 261 -433 cv
306 -433 342 -414 342 -390 cv
342 -330 li
cp
false sop
f
}bind def
/g2C {462 0 24 -482 432 276 setcachedevice
385 -458 mo
342 -475 313 -482 284 -482 cv
209 -482 121 -394 103 -374 cv
63 -327 24 -181 24 -78 cv
24 -19 36 11 60 11 cv
82 11 101 3 133 -19 cv
180 -51 259 -121 308 -209 cv
232 205 li
227 229 217 249 205 262 cv
214 276 li
245 268 276 262 300 259 cv
304 205 310 150 319 100 cv
405 -356 li
416 -417 422 -443 432 -474 cv
418 -480 li
385 -458 li
cp
118 -59 mo
104 -59 96 -80 96 -113 cv
96 -209 139 -359 181 -409 cv
193 -424 222 -433 254 -433 cv
282 -433 303 -427 351 -406 cv
330 -311 li
301 -174 160 -59 118 -59 cv
cp
false sop
f
}bind def
/g1D {462 0 37 -733 433 11 setcachedevice
235 -722 mo
223 -733 li
171 -707 135 -698 63 -691 cv
59 -670 li
107 -670 li
131 -670 141 -663 141 -646 cv
141 -639 140 -628 139 -622 cv
38 -71 li
37 -68 37 -64 37 -61 cv
37 -22 85 11 140 11 cv
177 11 228 -8 271 -39 cv
367 -107 433 -244 433 -376 cv
433 -414 424 -453 412 -468 cv
405 -477 392 -482 377 -482 cv
353 -482 323 -474 295 -460 cv
244 -433 211 -403 149 -324 cv
235 -722 li
cp
322 -424 mo
348 -424 361 -401 361 -352 cv
361 -288 340 -202 310 -137 cv
277 -68 237 -36 183 -36 cv
137 -36 112 -59 112 -101 cv
112 -135 127 -276 208 -361 cv
241 -395 293 -424 322 -424 cv
cp
false sop
f
}bind def
/g2D {388 0 26 -482 384 9 setcachedevice
368 -365 mo
371 -403 376 -435 384 -476 cv
373 -481 369 -482 364 -482 cv
333 -482 302 -458 266 -407 cv
227 -351 188 -291 172 -256 cv
204 -408 li
208 -425 210 -438 210 -450 cv
210 -470 202 -482 187 -482 cv
166 -482 128 -461 54 -408 cv
26 -388 li
33 -368 li
65 -389 li
93 -407 104 -412 113 -412 cv
123 -412 130 -403 130 -390 cv
130 -332 87 -126 47 2 cv
57 9 li
72 4 88 1 111 -4 cv
124 -6 li
150 -126 li
168 -209 191 -262 235 -319 cv
269 -363 296 -384 318 -384 cv
333 -384 343 -379 354 -365 cv
368 -365 li
cp
false sop
f
}bind def
/g2E {388 0 9 -482 345 11 setcachedevice
31 -148 mo
26 -97 20 -62 9 -16 cv
47 2 81 11 116 11 cv
165 11 211 -7 262 -47 cv
313 -87 334 -124 334 -174 cv
334 -228 302 -257 228 -271 cv
185 -279 li
125 -290 106 -307 106 -348 cv
106 -401 151 -442 208 -442 cv
249 -442 287 -424 303 -397 cv
303 -342 li
326 -342 li
330 -377 334 -404 345 -455 cv
306 -474 278 -482 245 -482 cv
193 -482 132 -452 84 -404 cv
58 -377 47 -352 47 -316 cv
47 -260 78 -228 144 -215 cv
207 -203 li
251 -195 267 -177 267 -138 cv
267 -73 221 -29 150 -29 cv
115 -29 84 -40 56 -64 cv
56 -148 li
31 -148 li
cp
false sop
f
}bind def
/g34 {499 0 -8 -482 490 276 setcachedevice
-7 180 mo
-8 187 -8 193 -8 198 cv
-8 241 29 276 74 276 cv
180 276 290 152 349 -33 cv
490 -473 li
479 -482 li
450 -471 427 -465 405 -463 cv
370 -331 li
358 -284 323 -211 290 -162 cv
255 -111 206 -67 184 -67 cv
172 -67 163 -90 164 -115 cv
180 -322 li
182 -353 184 -391 184 -419 cv
184 -464 177 -482 160 -482 cv
147 -482 133 -475 85 -442 cv
3 -386 li
14 -368 li
64 -398 li
69 -401 80 -410 89 -410 cv
103 -410 111 -391 111 -358 cv
111 -357 111 -351 110 -343 cv
93 -100 li
92 -60 li
92 -18 110 11 135 11 cv
172 11 256 -74 331 -187 cv
282 -16 li
231 161 181 234 111 234 cv
76 234 49 207 49 172 cv
49 167 50 159 51 150 cv
41 146 li
-7 180 li
cp
false sop
f
}bind def
/g29 {555 0 24 -482 514 9 setcachedevice
24 -388 mo
31 -368 li
63 -389 li
100 -412 103 -414 110 -414 cv
121 -414 128 -404 128 -389 cv
128 -338 87 -145 46 -2 cv
53 9 li
78 2 101 -4 123 -8 cv
142 -134 163 -199 209 -268 cv
263 -352 338 -414 383 -414 cv
394 -414 400 -405 400 -390 cv
400 -372 397 -351 389 -319 cv
337 -107 li
328 -70 324 -47 324 -31 cv
324 -6 335 9 354 9 cv
380 9 416 -12 514 -85 cv
504 -103 li
478 -86 li
449 -67 427 -56 417 -56 cv
410 -56 404 -65 404 -76 cv
404 -81 405 -92 406 -96 cv
472 -372 li
479 -401 483 -429 483 -446 cv
483 -469 472 -482 452 -482 cv
410 -482 341 -444 282 -389 cv
244 -354 216 -320 164 -247 cv
202 -408 li
206 -426 208 -438 208 -449 cv
208 -470 200 -482 185 -482 cv
164 -482 125 -460 52 -408 cv
24 -388 li
cp
false sop
f
}bind def
/g18 {943 0 71 -700 980 8 setcachedevice
303 -692 mo
264 -691 li
226 -689 202 -689 182 -689 cv
170 -689 148 -690 110 -691 cv
71 -692 li
71 -664 li
89 -662 li
130 -656 138 -645 142 -588 cv
174 -158 li
179 -92 181 -44 182 8 cv
232 8 li
246 -27 264 -66 282 -102 cv
506 -546 li
618 -154 li
633 -102 644 -53 657 8 cv
708 8 li
715 -18 li
725 -58 733 -85 746 -124 cv
917 -631 li
923 -648 938 -660 960 -662 cv
980 -664 li
980 -692 li
948 -691 li
919 -690 897 -689 883 -689 cv
870 -689 848 -690 818 -691 cv
785 -692 li
780 -664 li
819 -662 li
848 -661 860 -653 860 -639 cv
860 -626 857 -608 851 -590 cv
704 -128 li
546 -700 li
528 -700 li
516 -673 494 -624 476 -588 cv
252 -132 li
221 -616 li
221 -646 234 -660 266 -662 cv
303 -664 li
303 -692 li
cp
false sop
f
}bind def
/g20 {388 0 15 -484 374 11 setcachedevice
328 -111 mo
304 -94 li
251 -56 203 -36 167 -36 cv
120 -36 91 -73 91 -133 cv
91 -158 94 -185 99 -214 cv
116 -218 225 -248 250 -259 cv
335 -296 374 -342 374 -404 cv
374 -451 340 -482 290 -482 cv
222 -496 112 -423 75 -349 cv
45 -299 15 -180 15 -113 cv
15 -35 59 11 131 11 cv
188 11 244 -17 336 -92 cv
328 -111 li
cp
113 -274 mo
130 -343 150 -386 179 -412 cv
197 -428 228 -440 252 -440 cv
281 -440 300 -420 300 -388 cv
300 -344 265 -297 213 -272 cv
185 -258 149 -247 104 -237 cv
113 -274 li
cp
false sop
f
}bind def
/g27 {277 0 36 -733 251 9 setcachedevice
251 -722 mo
239 -733 li
187 -707 151 -698 79 -691 cv
75 -670 li
123 -670 li
147 -670 157 -663 157 -648 cv
157 -645 157 -640 154 -622 cv
143 -567 70 -182 55 -132 cv
42 -82 36 -52 36 -31 cv
36 -6 47 9 66 9 cv
92 9 128 -12 226 -85 cv
216 -103 li
190 -86 li
161 -67 139 -56 129 -56 cv
122 -56 116 -66 116 -76 cv
116 -82 117 -89 120 -104 cv
251 -722 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIJ+ /UUNUII+ findfont ct_VMDictPut
/UUNUIJ+*1 
[32{/.notdef}rp /g13 /g14 /g1C /g1E /g2C /g1D /g2D 
/g2E /g34 /g29 /g18 /g20 /g27 211{/.notdef}rp]
UUNUIJ+ nf
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
74.5195 -210.233 mo
( )sh
%ADOBeginSubsetFont: UUNUIK+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIK+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.215 0.5 0.726 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2 put
dup 33 /g12 put
dup 34 /g10 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2 {249 0 0 0 .01 .01 setcachedevice
}bind def
/g12 {499 0 29 -689 465 20 setcachedevice
263 -689 mo
108 -689 29 -566 29 -324 cv
29 -207 50 -106 85 -57 cv
120 -8 176 20 238 20 cv
389 20 465 -110 465 -366 cv
465 -585 400 -689 263 -689 cv
cp
245 -654 mo
342 -654 381 -556 381 -316 cv
381 -103 343 -15 251 -15 cv
154 -15 113 -116 113 -360 cv
113 -571 150 -654 245 -654 cv
cp
false sop
f
}bind def
/g10 {249 0 67 -111 183 5 setcachedevice
124 -111 mo
94 -111 67 -83 67 -53 cv
67 -23 94 5 123 5 cv
155 5 183 -22 183 -53 cv
183 -83 155 -111 124 -111 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIL+ /UUNUIK+ findfont ct_VMDictPut
/UUNUIL+*1 
[32{/.notdef}rp /g2 /g12 /g10 221{/.notdef}rp]
UUNUIL+ nf
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
96.2109 -210.233 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
99.3856 -210.233 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
83.7421 -215.19 mo
(")sh
87.6959 -215.19 mo
(#)sh
91.3194 -215.19 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
106.84 -207.69 mo
(!)sh
111.293 -207.69 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
72.7734 -166.44 mo
(%)sh
78.6639 -166.44 mo
(")sh
84.3121 -166.44 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
89.2617 -166.44 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
94.9804 -166.44 mo
(')sh
99.9274 -166.44 mo
(\()sh
106.29 -166.44 mo
(\))sh
113.366 -166.44 mo
(#)sh
74.2734 -267.233 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
97.1835 -267.233 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
100.358 -267.233 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
87.0234 -272.19 mo
(&)sh
90.4863 -272.19 mo
(+)sh
93.9492 -272.19 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
107.812 -264.69 mo
(!)sh
112.266 -264.69 mo
(!)sh
%ADOBeginSubsetFont: UUNUIM+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIM+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.061 0.891 0.662 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g3C2 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g3C2 {1000 0 109 -329 891 -213 setcachedevice
499 -329 mo
469 -329 442 -301 442 -271 cv
442 -241 469 -213 498 -213 cv
530 -213 558 -240 558 -271 cv
558 -301 530 -329 499 -329 cv
cp
166 -329 mo
136 -329 109 -301 109 -271 cv
109 -241 136 -213 165 -213 cv
197 -213 225 -240 225 -271 cv
225 -301 197 -329 166 -329 cv
cp
832 -329 mo
802 -329 775 -301 775 -271 cv
775 -241 802 -213 831 -213 cv
863 -213 891 -240 891 -271 cv
891 -301 863 -329 832 -329 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIN+ /UUNUIM+ findfont ct_VMDictPut
/UUNUIN+*1 
[32{/.notdef}rp /g3C2 223{/.notdef}rp]
UUNUIN+ nf
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
93.0086 -236.848 mo
( )sh
false sop
.685756 .61828 .606409 .522393 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIG+ AddGlyphs
systemdict begin UUNUIH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g2B {499 0 -7 -482 465 276 setcachedevice
176 11 mo
232 11 347 -62 390 -125 cv
431 -186 465 -296 465 -371 cv
465 -438 442 -482 406 -482 cv
364 -482 311 -456 259 -409 cv
218 -374 198 -348 162 -289 cv
186 -408 li
189 -425 191 -440 191 -452 cv
191 -471 183 -482 169 -482 cv
148 -482 110 -461 36 -408 cv
8 -388 li
15 -368 li
47 -389 li
75 -407 86 -412 95 -412 cv
105 -412 112 -403 112 -389 cv
112 -381 110 -361 108 -351 cv
50 -8 li
40 52 21 143 1 233 cv
-7 270 li
0 276 li
21 269 41 264 73 259 cv
115 -3 li
136 4 158 11 176 11 cv
cp
143 -165 mo
165 -293 272 -424 355 -424 cv
381 -424 393 -402 393 -356 cv
393 -275 353 -156 300 -80 cv
280 -51 248 -36 207 -36 cv
176 -36 151 -43 125 -59 cv
143 -165 li
cp
false sop
f
}bind def
/g2A {443 0 17 -482 411 11 setcachedevice
17 -152 mo
17 -46 62 11 145 11 cv
200 11 260 -15 305 -57 cv
367 -116 411 -230 411 -331 cv
411 -425 361 -482 278 -482 cv
174 -482 17 -382 17 -152 cv
cp
241 -444 mo
302 -444 335 -399 335 -315 cv
335 -219 304 -113 260 -60 cv
242 -39 216 -27 185 -27 cv
127 -27 93 -72 93 -151 cv
93 -264 132 -387 181 -427 cv
194 -438 217 -444 241 -444 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIH+*1 
[32{/.notdef}rp /g13 /g32 /g20 /g1C /g26 /g2B /g2A 
217{/.notdef}rp]
UUNUIH+ nf
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
84.3749 -188.94 mo
(%)sh
88.8285 -188.94 mo
(&)sh
83.4726 -245.94 mo
(%)sh
87.9262 -245.94 mo
(&)sh
false sop
.749844 .679255 .654902 .901945 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
179.519 -210.233 mo
( )sh
%ADOBeginSubsetFont: UUNUIK+ AddGlyphs
systemdict begin UUNUIL+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 {499 0 60 -700 418 3 setcachedevice
418 3 mo
418 -27 li
366 -30 li
311 -33 301 -44 301 -96 cv
301 -700 li
60 -598 li
67 -548 li
217 -614 li
217 -96 li
217 -44 206 -33 152 -30 cv
96 -27 li
96 3 li
250 0 250 0 261 0 cv
292 0 402 3 418 3 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIL+*1 
[32{/.notdef}rp /g2 /g12 /g10 /g13 220{/.notdef}rp]
UUNUIL+ nf
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
201.211 -210.233 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
204.386 -210.233 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
188.742 -215.19 mo
(")sh
192.696 -215.19 mo
(#)sh
196.319 -215.19 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
211.84 -208.44 mo
(!)sh
216.293 -208.44 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
177.773 -167.19 mo
(%)sh
183.664 -167.19 mo
(")sh
189.312 -167.19 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
194.262 -167.19 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
199.98 -167.19 mo
(')sh
204.927 -167.19 mo
(\()sh
211.29 -167.19 mo
(\))sh
218.366 -167.19 mo
(#)sh
179.273 -267.983 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
202.184 -267.983 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
205.358 -267.983 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
192.023 -272.94 mo
(&)sh
195.486 -272.94 mo
(+)sh
198.949 -272.94 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
212.812 -265.44 mo
(#)sh
217.266 -265.44 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
198.009 -236.848 mo
( )sh
false sop
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
189.375 -189.69 mo
(%)sh
193.829 -189.69 mo
(&)sh
188.473 -245.94 mo
(%)sh
192.926 -245.94 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
389.519 -209.483 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
411.211 -209.483 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
414.386 -209.483 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
398.742 -214.44 mo
(")sh
402.696 -214.44 mo
(#)sh
406.319 -214.44 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
421.84 -207.69 mo
(#)sh
426.293 -207.69 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
387.773 -166.44 mo
(%)sh
393.664 -166.44 mo
(")sh
399.312 -166.44 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
404.262 -166.44 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
409.98 -166.44 mo
(')sh
414.927 -166.44 mo
(\()sh
421.29 -166.44 mo
(\))sh
428.366 -166.44 mo
(#)sh
389.273 -267.233 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
412.183 -267.233 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
415.358 -267.233 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
402.023 -272.19 mo
(&)sh
405.486 -272.19 mo
(+)sh
408.949 -272.19 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
422.812 -264.69 mo
(#)sh
427.266 -264.69 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
408.009 -236.848 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
399.375 -188.94 mo
(%)sh
403.828 -188.94 mo
(&)sh
398.473 -245.94 mo
(%)sh
402.926 -245.94 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
284.894 -209.483 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
306.586 -209.483 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
309.761 -209.483 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
294.117 -214.44 mo
(")sh
298.071 -214.44 mo
(#)sh
301.694 -214.44 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
317.215 -207.69 mo
(#)sh
321.668 -207.69 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
283.148 -166.44 mo
(%)sh
289.039 -166.44 mo
(")sh
294.687 -166.44 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
299.637 -166.44 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
305.355 -166.44 mo
(')sh
310.302 -166.44 mo
(\()sh
316.665 -166.44 mo
(\))sh
323.741 -166.44 mo
(#)sh
284.648 -267.233 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
307.558 -267.233 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
310.733 -267.233 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
297.398 -272.19 mo
(&)sh
300.861 -272.19 mo
(+)sh
304.324 -272.19 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
318.187 -264.69 mo
(!)sh
322.641 -264.69 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
303.759 -236.848 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
294.75 -188.94 mo
(%)sh
299.203 -188.94 mo
(&)sh
293.848 -245.94 mo
(%)sh
298.301 -245.94 mo
(&)sh
.982818 .740505 .203769 .0532235 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIO+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIO+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.011 0.45 0.733 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2A put
dup 33 /g1D put
dup 34 /g2E put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2A {443 0 17 -482 411 11 setcachedevice
17 -152 mo
17 -46 62 11 145 11 cv
200 11 260 -15 305 -57 cv
367 -116 411 -230 411 -331 cv
411 -425 361 -482 278 -482 cv
174 -482 17 -382 17 -152 cv
cp
241 -444 mo
302 -444 335 -399 335 -315 cv
335 -219 304 -113 260 -60 cv
242 -39 216 -27 185 -27 cv
127 -27 93 -72 93 -151 cv
93 -264 132 -387 181 -427 cv
194 -438 217 -444 241 -444 cv
cp
false sop
f
}bind def
/g1D {462 0 37 -733 433 11 setcachedevice
235 -722 mo
223 -733 li
171 -707 135 -698 63 -691 cv
59 -670 li
107 -670 li
131 -670 141 -663 141 -646 cv
141 -639 140 -628 139 -622 cv
38 -71 li
37 -68 37 -64 37 -61 cv
37 -22 85 11 140 11 cv
177 11 228 -8 271 -39 cv
367 -107 433 -244 433 -376 cv
433 -414 424 -453 412 -468 cv
405 -477 392 -482 377 -482 cv
353 -482 323 -474 295 -460 cv
244 -433 211 -403 149 -324 cv
235 -722 li
cp
322 -424 mo
348 -424 361 -401 361 -352 cv
361 -288 340 -202 310 -137 cv
277 -68 237 -36 183 -36 cv
137 -36 112 -59 112 -101 cv
112 -135 127 -276 208 -361 cv
241 -395 293 -424 322 -424 cv
cp
false sop
f
}bind def
/g2E {388 0 9 -482 345 11 setcachedevice
31 -148 mo
26 -97 20 -62 9 -16 cv
47 2 81 11 116 11 cv
165 11 211 -7 262 -47 cv
313 -87 334 -124 334 -174 cv
334 -228 302 -257 228 -271 cv
185 -279 li
125 -290 106 -307 106 -348 cv
106 -401 151 -442 208 -442 cv
249 -442 287 -424 303 -397 cv
303 -342 li
326 -342 li
330 -377 334 -404 345 -455 cv
306 -474 278 -482 245 -482 cv
193 -482 132 -452 84 -404 cv
58 -377 47 -352 47 -316 cv
47 -260 78 -228 144 -215 cv
207 -203 li
251 -195 267 -177 267 -138 cv
267 -73 221 -29 150 -29 cv
115 -29 84 -40 56 -64 cv
56 -148 li
31 -148 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIP+ /UUNUIO+ findfont ct_VMDictPut
/UUNUIP+*1 
[32{/.notdef}rp /g2A /g1D /g2E 221{/.notdef}rp]
UUNUIP+ nf
UUNUIP+*1 [8.925 0 0 -8.925 0 0 ]msf
294.07 -438.69 mo
( )sh
298.024 -438.69 mo
(!)sh
302.147 -438.69 mo
(")sh
false sop
.318059 .580713 1 .170962 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIQ+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIQ+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.011 0.699 0.533 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2E put
dup 33 /g32 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2E {388 0 9 -482 345 11 setcachedevice
31 -148 mo
26 -97 20 -62 9 -16 cv
47 2 81 11 116 11 cv
165 11 211 -7 262 -47 cv
313 -87 334 -124 334 -174 cv
334 -228 302 -257 228 -271 cv
185 -279 li
125 -290 106 -307 106 -348 cv
106 -401 151 -442 208 -442 cv
249 -442 287 -424 303 -397 cv
303 -342 li
326 -342 li
330 -377 334 -404 345 -455 cv
306 -474 278 -482 245 -482 cv
193 -482 132 -452 84 -404 cv
58 -377 47 -352 47 -316 cv
47 -260 78 -228 144 -215 cv
207 -203 li
251 -195 267 -177 267 -138 cv
267 -73 221 -29 150 -29 cv
115 -29 84 -40 56 -64 cv
56 -148 li
31 -148 li
cp
false sop
f
}bind def
/g32 {721 0 21 -482 699 11 setcachedevice
167 -420 mo
188 -420 201 -421 226 -424 cv
171 -350 72 -266 72 -126 cv
72 -44 107 11 160 11 cv
224 11 276 -44 350 -187 cv
341 -143 338 -118 338 -95 cv
338 -32 367 11 412 11 cv
546 11 699 -238 699 -384 cv
699 -441 673 -482 637 -482 cv
624 -482 612 -478 604 -470 cv
554 -423 li
565 -404 li
574 -410 583 -413 592 -413 cv
619 -413 635 -390 635 -350 cv
635 -205 538 -39 453 -39 cv
424 -39 403 -79 403 -134 cv
403 -181 412 -247 424 -290 cv
476 -474 li
469 -482 li
395 -460 li
366 -311 li
354 -249 340 -209 311 -155 cv
271 -80 233 -39 203 -39 cv
168 -39 145 -78 145 -136 cv
145 -255 186 -352 285 -464 cv
275 -482 li
255 -473 242 -470 214 -470 cv
186 -470 144 -472 115 -475 cv
103 -476 li
97 -477 92 -477 91 -477 cv
79 -477 70 -475 59 -470 cv
45 -443 34 -407 21 -352 cv
43 -352 li
60 -394 li
67 -411 87 -422 111 -422 cv
145 -422 128 -420 167 -420 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIR+ /UUNUIQ+ findfont ct_VMDictPut
/UUNUIR+*1 
[32{/.notdef}rp /g2E /g32 222{/.notdef}rp]
UUNUIR+ nf
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
317.918 -437.94 mo
( )sh
321.381 -437.94 mo
(!)sh
false sop
.107546 1 1 .0573129 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIS+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIS+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.011 0.512 0.733 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g1E put
dup 33 /g1C put
dup 34 /g30 put
dup 35 /g2E put
dup 36 /g20 put
dup 37 /g1D put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g1E {406 0 25 -483 389 11 setcachedevice
342 -330 mo
365 -330 li
373 -395 380 -432 389 -458 cv
365 -473 330 -482 293 -482 cv
248 -483 175 -463 118 -400 cv
64 -352 25 -241 25 -136 cv
25 -40 67 11 147 11 cv
201 11 249 -9 304 -54 cv
354 -95 li
346 -115 li
331 -105 li
259 -57 221 -40 186 -40 cv
130 -40 101 -80 101 -159 cv
101 -267 136 -371 185 -409 cv
206 -425 230 -433 261 -433 cv
306 -433 342 -414 342 -390 cv
342 -330 li
cp
false sop
f
}bind def
/g1C {443 0 4 -482 406 11 setcachedevice
271 -204 mo
242 -77 li
238 -60 236 -42 236 -26 cv
236 -4 245 9 260 9 cv
283 9 324 -17 406 -85 cv
399 -106 li
375 -86 346 -59 324 -59 cv
315 -59 309 -68 309 -82 cv
309 -87 309 -90 310 -93 cv
402 -472 li
392 -481 li
359 -463 li
318 -478 301 -482 274 -482 cv
246 -482 226 -477 199 -464 cv
137 -433 104 -403 79 -354 cv
35 -265 4 -145 4 -67 cv
4 -23 19 11 38 11 cv
75 11 155 -41 271 -204 cv
cp
319 -414 mo
297 -305 278 -253 244 -201 cv
187 -117 126 -59 94 -59 cv
82 -59 76 -72 76 -99 cv
76 -163 104 -280 139 -360 cv
163 -415 186 -433 234 -433 cv
257 -433 275 -429 319 -414 cv
cp
false sop
f
}bind def
/g30 {555 0 32 -482 512 11 setcachedevice
492 -473 mo
485 -482 li
417 -465 li
407 -414 li
392 -336 367 -268 336 -221 cv
277 -130 199 -59 159 -59 cv
151 -59 146 -68 146 -85 cv
146 -99 148 -112 153 -137 cv
210 -408 li
213 -424 215 -438 215 -451 cv
215 -470 206 -482 192 -482 cv
172 -482 134 -461 60 -408 cv
32 -388 li
39 -368 li
71 -389 li
99 -407 110 -412 119 -412 cv
128 -412 136 -403 136 -392 cv
136 -388 135 -378 134 -374 cv
71 -77 li
69 -68 67 -44 67 -30 cv
67 -7 82 11 102 11 cv
165 11 286 -101 370 -239 cv
333 -97 li
326 -73 322 -46 322 -31 cv
322 -6 333 9 352 9 cv
378 9 414 -12 512 -85 cv
502 -103 li
476 -86 li
452 -70 426 -59 415 -59 cv
407 -59 402 -66 402 -76 cv
402 -112 477 -416 492 -473 cv
cp
false sop
f
}bind def
/g2E {388 0 9 -482 345 11 setcachedevice
31 -148 mo
26 -97 20 -62 9 -16 cv
47 2 81 11 116 11 cv
165 11 211 -7 262 -47 cv
313 -87 334 -124 334 -174 cv
334 -228 302 -257 228 -271 cv
185 -279 li
125 -290 106 -307 106 -348 cv
106 -401 151 -442 208 -442 cv
249 -442 287 -424 303 -397 cv
303 -342 li
326 -342 li
330 -377 334 -404 345 -455 cv
306 -474 278 -482 245 -482 cv
193 -482 132 -452 84 -404 cv
58 -377 47 -352 47 -316 cv
47 -260 78 -228 144 -215 cv
207 -203 li
251 -195 267 -177 267 -138 cv
267 -73 221 -29 150 -29 cv
115 -29 84 -40 56 -64 cv
56 -148 li
31 -148 li
cp
false sop
f
}bind def
/g20 {388 0 15 -484 374 11 setcachedevice
328 -111 mo
304 -94 li
251 -56 203 -36 167 -36 cv
120 -36 91 -73 91 -133 cv
91 -158 94 -185 99 -214 cv
116 -218 225 -248 250 -259 cv
335 -296 374 -342 374 -404 cv
374 -451 340 -482 290 -482 cv
222 -496 112 -423 75 -349 cv
45 -299 15 -180 15 -113 cv
15 -35 59 11 131 11 cv
188 11 244 -17 336 -92 cv
328 -111 li
cp
113 -274 mo
130 -343 150 -386 179 -412 cv
197 -428 228 -440 252 -440 cv
281 -440 300 -420 300 -388 cv
300 -344 265 -297 213 -272 cv
185 -258 149 -247 104 -237 cv
113 -274 li
cp
false sop
f
}bind def
/g1D {462 0 37 -733 433 11 setcachedevice
235 -722 mo
223 -733 li
171 -707 135 -698 63 -691 cv
59 -670 li
107 -670 li
131 -670 141 -663 141 -646 cv
141 -639 140 -628 139 -622 cv
38 -71 li
37 -68 37 -64 37 -61 cv
37 -22 85 11 140 11 cv
177 11 228 -8 271 -39 cv
367 -107 433 -244 433 -376 cv
433 -414 424 -453 412 -468 cv
405 -477 392 -482 377 -482 cv
353 -482 323 -474 295 -460 cv
244 -433 211 -403 149 -324 cv
235 -722 li
cp
322 -424 mo
348 -424 361 -401 361 -352 cv
361 -288 340 -202 310 -137 cv
277 -68 237 -36 183 -36 cv
137 -36 112 -59 112 -101 cv
112 -135 127 -276 208 -361 cv
241 -395 293 -424 322 -424 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIT+ /UUNUIS+ findfont ct_VMDictPut
/UUNUIT+*1 
[32{/.notdef}rp /g1E /g1C /g30 /g2E /g20 /g1D 218{/.notdef}rp]
UUNUIT+ nf
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
372.516 -438.69 mo
( )sh
376.139 -438.69 mo
(!)sh
380.093 -438.69 mo
(")sh
385.046 -438.69 mo
(#)sh
388.509 -438.69 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
392.238 -437.19 mo
(%)sh
395.125 -437.19 mo
(!)sh
397.892 -437.19 mo
(#)sh
400.316 -437.19 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
341.695 -435.69 mo
( )sh
345.319 -435.69 mo
(!)sh
349.273 -435.69 mo
(")sh
354.226 -435.69 mo
(#)sh
357.689 -435.69 mo
($)sh
false sop
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
253.195 -246.69 mo
( )sh
256.658 -246.69 mo
(!)sh
%ADOBeginSubsetFont: UUNUIU+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIU+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 0 0.48 0.662 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2 {249 0 0 0 .01 .01 setcachedevice
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIV+ /UUNUIU+ findfont ct_VMDictPut
/UUNUIV+*1 
[32{/.notdef}rp /g2 223{/.notdef}rp]
UUNUIV+ nf
UUNUIV+*1 [8.925 0 0 -8.925 0 0 ]msf
263.093 -246.69 mo
( )sh
false sop
.749844 .679255 .654902 .901945 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUII+ AddGlyphs
systemdict begin UUNUIJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g21 {550 0 -25 -733 550 276 setcachedevice
345 -437 mo
329 -437 li
350 -549 li
366 -635 394 -673 440 -673 cv
470 -673 497 -658 512 -634 cv
522 -638 li
527 -654 537 -685 545 -705 cv
550 -720 li
534 -727 503 -733 480 -733 cv
469 -733 453 -730 445 -726 cv
421 -715 339 -654 316 -630 cv
294 -608 282 -578 271 -521 cv
256 -442 li
215 -422 195 -414 170 -405 cv
165 -383 li
246 -383 li
237 -327 li
207 -132 170 54 148 123 cv
130 182 100 213 64 213 cv
41 213 30 206 12 184 cv
-2 188 li
-6 211 -20 259 -25 268 cv
-16 273 -1 276 10 276 cv
51 276 105 245 144 198 cv
215 114 235 18 319 -383 cv
423 -383 li
427 -402 434 -425 440 -439 cv
436 -446 li
407 -439 408 -437 345 -437 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIJ+*1 
[32{/.notdef}rp /g13 /g14 /g1C /g1E /g2C /g1D /g2D 
/g2E /g34 /g29 /g18 /g20 /g27 /g21 210{/.notdef}rp]
UUNUIJ+ nf
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
268.289 -246.69 mo
(&)sh
271.752 -246.69 mo
(-)sh
%ADOBeginSubsetFont: UUNUIK+ AddGlyphs
systemdict begin UUNUIL+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/gA {332 0 60 -726 301 215 setcachedevice
146 -266 mo
146 -526 243 -632 301 -700 cv
282 -726 li
225 -675 60 -542 60 -266 cv
60 -159 85 -58 133 32 cv
168 99 200 138 282 215 cv
301 194 li
255 137 146 15 146 -266 cv
cp
false sop
f
}bind def
/gB {332 0 32 -726 273 215 setcachedevice
51 -726 mo
32 -700 li
87 -636 187 -526 187 -266 cv
187 10 83 131 32 194 cv
51 215 li
104 165 273 23 273 -265 cv
273 -542 108 -675 51 -726 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIL+*1 
[32{/.notdef}rp /g2 /g12 /g10 /g13 /gA /gB 218{/.notdef}rp]
UUNUIL+ nf
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
265.324 -246.69 mo
($)sh
276.668 -246.69 mo
(%)sh
false sop
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
225.223 -179.19 mo
( )sh
228.846 -179.19 mo
(!)sh
232.8 -179.19 mo
(")sh
237.753 -179.19 mo
(#)sh
241.216 -179.19 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
244.945 -177.69 mo
(%)sh
247.832 -177.69 mo
(!)sh
250.599 -177.69 mo
(#)sh
253.023 -177.69 mo
($)sh
.791409 .327764 1 .227756 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIW+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIW+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.007 -0.276 0.514 0.733 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2B put
dup 33 /g1C put
dup 34 /g2F put
dup 35 /g20 put
dup 36 /g2D put
dup 37 /g29 put
dup 38 /g27 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2B {499 0 -7 -482 465 276 setcachedevice
176 11 mo
232 11 347 -62 390 -125 cv
431 -186 465 -296 465 -371 cv
465 -438 442 -482 406 -482 cv
364 -482 311 -456 259 -409 cv
218 -374 198 -348 162 -289 cv
186 -408 li
189 -425 191 -440 191 -452 cv
191 -471 183 -482 169 -482 cv
148 -482 110 -461 36 -408 cv
8 -388 li
15 -368 li
47 -389 li
75 -407 86 -412 95 -412 cv
105 -412 112 -403 112 -389 cv
112 -381 110 -361 108 -351 cv
50 -8 li
40 52 21 143 1 233 cv
-7 270 li
0 276 li
21 269 41 264 73 259 cv
115 -3 li
136 4 158 11 176 11 cv
cp
143 -165 mo
165 -293 272 -424 355 -424 cv
381 -424 393 -402 393 -356 cv
393 -275 353 -156 300 -80 cv
280 -51 248 -36 207 -36 cv
176 -36 151 -43 125 -59 cv
143 -165 li
cp
false sop
f
}bind def
/g1C {443 0 4 -482 406 11 setcachedevice
271 -204 mo
242 -77 li
238 -60 236 -42 236 -26 cv
236 -4 245 9 260 9 cv
283 9 324 -17 406 -85 cv
399 -106 li
375 -86 346 -59 324 -59 cv
315 -59 309 -68 309 -82 cv
309 -87 309 -90 310 -93 cv
402 -472 li
392 -481 li
359 -463 li
318 -478 301 -482 274 -482 cv
246 -482 226 -477 199 -464 cv
137 -433 104 -403 79 -354 cv
35 -265 4 -145 4 -67 cv
4 -23 19 11 38 11 cv
75 11 155 -41 271 -204 cv
cp
319 -414 mo
297 -305 278 -253 244 -201 cv
187 -117 126 -59 94 -59 cv
82 -59 76 -72 76 -99 cv
76 -163 104 -280 139 -360 cv
163 -415 186 -433 234 -433 cv
257 -433 275 -429 319 -414 cv
cp
false sop
f
}bind def
/g2F {332 0 41 -646 310 9 setcachedevice
125 -390 mo
69 -107 li
68 -99 56 -61 56 -31 cv
56 -6 67 9 86 9 cv
121 9 156 -11 234 -74 cv
265 -99 li
255 -117 li
210 -86 li
181 -66 161 -56 150 -56 cv
141 -56 136 -64 136 -76 cv
136 -102 150 -183 179 -328 cv
192 -390 li
299 -390 li
310 -440 li
272 -436 238 -434 200 -434 cv
216 -528 227 -577 245 -631 cv
234 -646 li
214 -634 187 -622 156 -610 cv
131 -440 li
87 -419 61 -408 43 -403 cv
41 -390 li
125 -390 li
cp
false sop
f
}bind def
/g20 {388 0 15 -484 374 11 setcachedevice
328 -111 mo
304 -94 li
251 -56 203 -36 167 -36 cv
120 -36 91 -73 91 -133 cv
91 -158 94 -185 99 -214 cv
116 -218 225 -248 250 -259 cv
335 -296 374 -342 374 -404 cv
374 -451 340 -482 290 -482 cv
222 -496 112 -423 75 -349 cv
45 -299 15 -180 15 -113 cv
15 -35 59 11 131 11 cv
188 11 244 -17 336 -92 cv
328 -111 li
cp
113 -274 mo
130 -343 150 -386 179 -412 cv
197 -428 228 -440 252 -440 cv
281 -440 300 -420 300 -388 cv
300 -344 265 -297 213 -272 cv
185 -258 149 -247 104 -237 cv
113 -274 li
cp
false sop
f
}bind def
/g2D {388 0 26 -482 384 9 setcachedevice
368 -365 mo
371 -403 376 -435 384 -476 cv
373 -481 369 -482 364 -482 cv
333 -482 302 -458 266 -407 cv
227 -351 188 -291 172 -256 cv
204 -408 li
208 -425 210 -438 210 -450 cv
210 -470 202 -482 187 -482 cv
166 -482 128 -461 54 -408 cv
26 -388 li
33 -368 li
65 -389 li
93 -407 104 -412 113 -412 cv
123 -412 130 -403 130 -390 cv
130 -332 87 -126 47 2 cv
57 9 li
72 4 88 1 111 -4 cv
124 -6 li
150 -126 li
168 -209 191 -262 235 -319 cv
269 -363 296 -384 318 -384 cv
333 -384 343 -379 354 -365 cv
368 -365 li
cp
false sop
f
}bind def
/g29 {555 0 24 -482 514 9 setcachedevice
24 -388 mo
31 -368 li
63 -389 li
100 -412 103 -414 110 -414 cv
121 -414 128 -404 128 -389 cv
128 -338 87 -145 46 -2 cv
53 9 li
78 2 101 -4 123 -8 cv
142 -134 163 -199 209 -268 cv
263 -352 338 -414 383 -414 cv
394 -414 400 -405 400 -390 cv
400 -372 397 -351 389 -319 cv
337 -107 li
328 -70 324 -47 324 -31 cv
324 -6 335 9 354 9 cv
380 9 416 -12 514 -85 cv
504 -103 li
478 -86 li
449 -67 427 -56 417 -56 cv
410 -56 404 -65 404 -76 cv
404 -81 405 -92 406 -96 cv
472 -372 li
479 -401 483 -429 483 -446 cv
483 -469 472 -482 452 -482 cv
410 -482 341 -444 282 -389 cv
244 -354 216 -320 164 -247 cv
202 -408 li
206 -426 208 -438 208 -449 cv
208 -470 200 -482 185 -482 cv
164 -482 125 -460 52 -408 cv
24 -388 li
cp
false sop
f
}bind def
/g27 {277 0 36 -733 251 9 setcachedevice
251 -722 mo
239 -733 li
187 -707 151 -698 79 -691 cv
75 -670 li
123 -670 li
147 -670 157 -663 157 -648 cv
157 -645 157 -640 154 -622 cv
143 -567 70 -182 55 -132 cv
42 -82 36 -52 36 -31 cv
36 -6 47 9 66 9 cv
92 9 128 -12 226 -85 cv
216 -103 li
190 -86 li
161 -67 139 -56 129 -56 cv
122 -56 116 -66 116 -76 cv
116 -82 117 -89 120 -104 cv
251 -722 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIX+ /UUNUIW+ findfont ct_VMDictPut
/UUNUIX+*1 
[32{/.notdef}rp /g2B /g1C /g2F /g20 /g2D /g29 /g27 
217{/.notdef}rp]
UUNUIX+ nf
UUNUIX+*1 [8.925 0 0 -8.925 0 0 ]msf
35.1796 -269.19 mo
( )sh
39.6332 -269.19 mo
(!)sh
43.587 -269.19 mo
(")sh
46.5501 -269.19 mo
(")sh
49.5132 -269.19 mo
(#)sh
52.976 -269.19 mo
($)sh
56.4389 -269.19 mo
(%)sh
UUNUIX+*1 [6.2475 0 0 -6.2475 0 0 ]msf
61.6523 -268.44 mo
($)sh
64.0763 -268.44 mo
(#)sh
66.5003 -268.44 mo
(&)sh
false sop
.33872 .685634 1 .2963 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIY+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUIY+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [-0.007 -0.276 0.514 0.646 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g2B put
dup 33 /g1C put
dup 34 /g2F put
dup 35 /g20 put
dup 36 /g2D put
dup 37 /g29 put
dup 38 /g1E put
dup 39 /g2C put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g2B {499 0 -7 -482 465 276 setcachedevice
176 11 mo
232 11 347 -62 390 -125 cv
431 -186 465 -296 465 -371 cv
465 -438 442 -482 406 -482 cv
364 -482 311 -456 259 -409 cv
218 -374 198 -348 162 -289 cv
186 -408 li
189 -425 191 -440 191 -452 cv
191 -471 183 -482 169 -482 cv
148 -482 110 -461 36 -408 cv
8 -388 li
15 -368 li
47 -389 li
75 -407 86 -412 95 -412 cv
105 -412 112 -403 112 -389 cv
112 -381 110 -361 108 -351 cv
50 -8 li
40 52 21 143 1 233 cv
-7 270 li
0 276 li
21 269 41 264 73 259 cv
115 -3 li
136 4 158 11 176 11 cv
cp
143 -165 mo
165 -293 272 -424 355 -424 cv
381 -424 393 -402 393 -356 cv
393 -275 353 -156 300 -80 cv
280 -51 248 -36 207 -36 cv
176 -36 151 -43 125 -59 cv
143 -165 li
cp
false sop
f
}bind def
/g1C {443 0 4 -482 406 11 setcachedevice
271 -204 mo
242 -77 li
238 -60 236 -42 236 -26 cv
236 -4 245 9 260 9 cv
283 9 324 -17 406 -85 cv
399 -106 li
375 -86 346 -59 324 -59 cv
315 -59 309 -68 309 -82 cv
309 -87 309 -90 310 -93 cv
402 -472 li
392 -481 li
359 -463 li
318 -478 301 -482 274 -482 cv
246 -482 226 -477 199 -464 cv
137 -433 104 -403 79 -354 cv
35 -265 4 -145 4 -67 cv
4 -23 19 11 38 11 cv
75 11 155 -41 271 -204 cv
cp
319 -414 mo
297 -305 278 -253 244 -201 cv
187 -117 126 -59 94 -59 cv
82 -59 76 -72 76 -99 cv
76 -163 104 -280 139 -360 cv
163 -415 186 -433 234 -433 cv
257 -433 275 -429 319 -414 cv
cp
false sop
f
}bind def
/g2F {332 0 41 -646 310 9 setcachedevice
125 -390 mo
69 -107 li
68 -99 56 -61 56 -31 cv
56 -6 67 9 86 9 cv
121 9 156 -11 234 -74 cv
265 -99 li
255 -117 li
210 -86 li
181 -66 161 -56 150 -56 cv
141 -56 136 -64 136 -76 cv
136 -102 150 -183 179 -328 cv
192 -390 li
299 -390 li
310 -440 li
272 -436 238 -434 200 -434 cv
216 -528 227 -577 245 -631 cv
234 -646 li
214 -634 187 -622 156 -610 cv
131 -440 li
87 -419 61 -408 43 -403 cv
41 -390 li
125 -390 li
cp
false sop
f
}bind def
/g20 {388 0 15 -484 374 11 setcachedevice
328 -111 mo
304 -94 li
251 -56 203 -36 167 -36 cv
120 -36 91 -73 91 -133 cv
91 -158 94 -185 99 -214 cv
116 -218 225 -248 250 -259 cv
335 -296 374 -342 374 -404 cv
374 -451 340 -482 290 -482 cv
222 -496 112 -423 75 -349 cv
45 -299 15 -180 15 -113 cv
15 -35 59 11 131 11 cv
188 11 244 -17 336 -92 cv
328 -111 li
cp
113 -274 mo
130 -343 150 -386 179 -412 cv
197 -428 228 -440 252 -440 cv
281 -440 300 -420 300 -388 cv
300 -344 265 -297 213 -272 cv
185 -258 149 -247 104 -237 cv
113 -274 li
cp
false sop
f
}bind def
/g2D {388 0 26 -482 384 9 setcachedevice
368 -365 mo
371 -403 376 -435 384 -476 cv
373 -481 369 -482 364 -482 cv
333 -482 302 -458 266 -407 cv
227 -351 188 -291 172 -256 cv
204 -408 li
208 -425 210 -438 210 -450 cv
210 -470 202 -482 187 -482 cv
166 -482 128 -461 54 -408 cv
26 -388 li
33 -368 li
65 -389 li
93 -407 104 -412 113 -412 cv
123 -412 130 -403 130 -390 cv
130 -332 87 -126 47 2 cv
57 9 li
72 4 88 1 111 -4 cv
124 -6 li
150 -126 li
168 -209 191 -262 235 -319 cv
269 -363 296 -384 318 -384 cv
333 -384 343 -379 354 -365 cv
368 -365 li
cp
false sop
f
}bind def
/g29 {555 0 24 -482 514 9 setcachedevice
24 -388 mo
31 -368 li
63 -389 li
100 -412 103 -414 110 -414 cv
121 -414 128 -404 128 -389 cv
128 -338 87 -145 46 -2 cv
53 9 li
78 2 101 -4 123 -8 cv
142 -134 163 -199 209 -268 cv
263 -352 338 -414 383 -414 cv
394 -414 400 -405 400 -390 cv
400 -372 397 -351 389 -319 cv
337 -107 li
328 -70 324 -47 324 -31 cv
324 -6 335 9 354 9 cv
380 9 416 -12 514 -85 cv
504 -103 li
478 -86 li
449 -67 427 -56 417 -56 cv
410 -56 404 -65 404 -76 cv
404 -81 405 -92 406 -96 cv
472 -372 li
479 -401 483 -429 483 -446 cv
483 -469 472 -482 452 -482 cv
410 -482 341 -444 282 -389 cv
244 -354 216 -320 164 -247 cv
202 -408 li
206 -426 208 -438 208 -449 cv
208 -470 200 -482 185 -482 cv
164 -482 125 -460 52 -408 cv
24 -388 li
cp
false sop
f
}bind def
/g1E {406 0 25 -483 389 11 setcachedevice
342 -330 mo
365 -330 li
373 -395 380 -432 389 -458 cv
365 -473 330 -482 293 -482 cv
248 -483 175 -463 118 -400 cv
64 -352 25 -241 25 -136 cv
25 -40 67 11 147 11 cv
201 11 249 -9 304 -54 cv
354 -95 li
346 -115 li
331 -105 li
259 -57 221 -40 186 -40 cv
130 -40 101 -80 101 -159 cv
101 -267 136 -371 185 -409 cv
206 -425 230 -433 261 -433 cv
306 -433 342 -414 342 -390 cv
342 -330 li
cp
false sop
f
}bind def
/g2C {462 0 24 -482 432 276 setcachedevice
385 -458 mo
342 -475 313 -482 284 -482 cv
209 -482 121 -394 103 -374 cv
63 -327 24 -181 24 -78 cv
24 -19 36 11 60 11 cv
82 11 101 3 133 -19 cv
180 -51 259 -121 308 -209 cv
232 205 li
227 229 217 249 205 262 cv
214 276 li
245 268 276 262 300 259 cv
304 205 310 150 319 100 cv
405 -356 li
416 -417 422 -443 432 -474 cv
418 -480 li
385 -458 li
cp
118 -59 mo
104 -59 96 -80 96 -113 cv
96 -209 139 -359 181 -409 cv
193 -424 222 -433 254 -433 cv
282 -433 303 -427 351 -406 cv
330 -311 li
301 -174 160 -59 118 -59 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUIZ+ /UUNUIY+ findfont ct_VMDictPut
/UUNUIZ+*1 
[32{/.notdef}rp /g2B /g1C /g2F /g20 /g2D /g29 /g1E 
/g2C 216{/.notdef}rp]
UUNUIZ+ nf
UUNUIZ+*1 [8.925 0 0 -8.925 0 0 ]msf
32.1796 -210.69 mo
( )sh
36.6332 -210.69 mo
(!)sh
40.587 -210.69 mo
(")sh
43.5501 -210.69 mo
(")sh
46.5132 -210.69 mo
(#)sh
49.976 -210.69 mo
($)sh
53.4389 -210.69 mo
(%)sh
UUNUIZ+*1 [6.2475 0 0 -6.2475 0 0 ]msf
58.6523 -209.94 mo
(!)sh
61.4199 -209.94 mo
(&)sh
63.9564 -209.94 mo
(')sh
false sop
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
267 -185.19 mo
(%)sh
271.453 -185.19 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUII+ AddGlyphs
systemdict begin UUNUIJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g8 {721 0 50 -706 694 19 setcachedevice
434 -653 mo
511 -653 565 -639 621 -603 cv
621 -519 li
648 -519 li
653 -576 661 -619 675 -665 cv
592 -695 535 -706 466 -706 cv
374 -706 301 -683 229 -632 cv
112 -548 50 -424 50 -274 cv
50 -87 159 18 355 18 cv
412 21 559 -6 608 -37 cv
628 -193 632 -216 633 -219 cv
635 -228 647 -238 660 -240 cv
692 -246 li
694 -274 li
655 -270 620 -269 569 -269 cv
518 -269 482 -270 440 -274 cv
435 -246 li
469 -244 li
544 -240 553 -236 553 -212 cv
553 -197 533 -84 528 -60 cv
483 -36 444 -27 390 -27 cv
224 -27 138 -120 138 -297 cv
138 -443 197 -653 434 -653 cv
cp
false sop
f
}bind def
/g11 {610 0 9 -693 594 3 setcachedevice
105 -664 mo
160 -662 li
184 -661 195 -653 195 -635 cv
112 -125 li
95 -34 94 -31 54 -28 cv
13 -25 li
9 3 li
51 2 li
92 1 123 0 141 0 cv
158 0 187 1 227 2 cv
280 3 li
283 -25 li
218 -28 li
192 -29 182 -37 182 -58 cv
182 -67 183 -74 186 -93 cv
284 -648 li
320 -654 336 -656 355 -656 cv
457 -656 506 -612 506 -519 cv
506 -411 434 -323 346 -323 cv
324 -323 304 -328 267 -342 cv
269 -311 li
306 -293 326 -288 355 -288 cv
484 -288 594 -405 594 -541 cv
594 -642 531 -695 412 -692 cv
108 -692 li
105 -664 li
cp
false sop
f
}bind def
/g16 {777 0 88 -692 798 19 setcachedevice
795 -664 mo
798 -692 li
782 -692 li
691 -689 li
676 -689 655 -689 611 -690 cv
548 -692 li
545 -664 li
593 -662 li
617 -661 628 -653 628 -634 cv
628 -629 628 -626 627 -622 cv
556 -177 li
508 -119 478 -93 427 -68 cv
389 -48 352 -39 314 -39 cv
229 -39 175 -84 175 -154 cv
175 -171 177 -187 182 -215 cv
270 -692 li
239 -691 li
212 -690 192 -689 181 -689 cv
171 -689 151 -690 123 -691 cv
91 -692 li
88 -664 li
140 -662 li
166 -661 174 -656 174 -639 cv
174 -630 171 -602 167 -581 cv
103 -206 li
99 -185 97 -160 97 -144 cv
97 -43 164 19 276 19 cv
320 19 361 9 409 -15 cv
468 -44 500 -69 552 -129 cv
544 -83 538 -57 525 -2 cv
530 3 li
552 3 li
614 0 li
618 0 640 1 672 2 cv
704 3 li
709 -25 li
649 -29 li
626 -31 617 -37 617 -50 cv
617 -65 618 -70 623 -106 cv
708 -613 li
714 -651 721 -657 759 -661 cv
795 -664 li
cp
false sop
f
}bind def
/g28 {777 0 24 -482 740 9 setcachedevice
730 -103 mo
704 -86 li
675 -67 653 -56 643 -56 cv
636 -56 630 -65 630 -76 cv
630 -86 632 -95 637 -116 cv
712 -413 li
716 -430 719 -446 719 -454 cv
719 -471 709 -482 693 -482 cv
664 -482 626 -464 565 -421 cv
502 -376 467 -341 418 -272 cv
448 -409 li
452 -429 455 -444 455 -451 cv
455 -470 445 -482 429 -482 cv
399 -482 353 -460 298 -418 cv
254 -384 234 -363 169 -275 cv
202 -408 li
206 -424 208 -439 208 -451 cv
208 -470 199 -482 185 -482 cv
164 -482 126 -461 52 -408 cv
24 -388 li
31 -368 li
68 -391 103 -414 110 -414 cv
121 -414 128 -404 128 -389 cv
128 -338 87 -145 46 -2 cv
49 9 li
117 -6 li
139 -108 li
163 -219 190 -278 245 -338 cv
287 -384 332 -414 360 -414 cv
367 -414 371 -406 371 -393 cv
371 -358 349 -244 308 -69 cv
292 -2 li
297 9 li
366 -6 li
387 -113 li
403 -194 437 -269 481 -318 cv
536 -379 586 -414 618 -414 cv
626 -414 631 -405 631 -389 cv
631 -365 628 -351 606 -264 cv
566 -105 550 -84 550 -31 cv
550 -6 561 9 580 9 cv
606 9 642 -12 740 -85 cv
730 -103 li
cp
false sop
f
}bind def
/g2A {443 0 17 -482 411 11 setcachedevice
17 -152 mo
17 -46 62 11 145 11 cv
200 11 260 -15 305 -57 cv
367 -116 411 -230 411 -331 cv
411 -425 361 -482 278 -482 cv
174 -482 17 -382 17 -152 cv
cp
241 -444 mo
302 -444 335 -399 335 -315 cv
335 -219 304 -113 260 -60 cv
242 -39 216 -27 185 -27 cv
127 -27 93 -72 93 -151 cv
93 -264 132 -387 181 -427 cv
194 -438 217 -444 241 -444 cv
cp
false sop
f
}bind def
/g26 {468 0 14 -733 455 9 setcachedevice
240 -722 mo
228 -733 li
176 -707 140 -698 68 -691 cv
64 -670 li
112 -670 li
136 -670 146 -663 146 -646 cv
146 -638 145 -629 144 -622 cv
96 -354 li
82 -279 66 -210 14 -1 cv
23 9 li
90 -8 li
113 -132 li
122 -180 146 -225 180 -259 cv
249 -59 281 9 306 9 cv
319 9 343 -4 387 -35 cv
433 -67 li
425 -86 li
382 -62 li
368 -54 361 -52 353 -52 cv
343 -52 336 -58 327 -75 cv
292 -139 270 -193 231 -316 cv
245 -330 li
306 -391 352 -416 402 -416 cv
410 -416 421 -414 438 -410 cv
455 -473 li
437 -479 419 -482 407 -482 cv
341 -482 258 -405 133 -230 cv
240 -722 li
cp
false sop
f
}bind def
/g2F {332 0 41 -646 310 9 setcachedevice
125 -390 mo
69 -107 li
68 -99 56 -61 56 -31 cv
56 -6 67 9 86 9 cv
121 9 156 -11 234 -74 cv
265 -99 li
255 -117 li
210 -86 li
181 -66 161 -56 150 -56 cv
141 -56 136 -64 136 -76 cv
136 -102 150 -183 179 -328 cv
192 -390 li
299 -390 li
310 -440 li
272 -436 238 -434 200 -434 cv
216 -528 227 -577 245 -631 cv
234 -646 li
214 -634 187 -622 156 -610 cv
131 -440 li
87 -419 61 -408 43 -403 cv
41 -390 li
125 -390 li
cp
false sop
f
}bind def
/g23 {499 0 10 -733 471 9 setcachedevice
236 -722 mo
224 -733 li
179 -711 138 -697 64 -691 cv
60 -670 li
108 -670 li
126 -670 142 -667 142 -647 cv
142 -641 142 -632 140 -622 cv
98 -388 li
78 -272 36 -80 10 -2 cv
17 9 li
86 -7 li
94 -64 108 -164 148 -236 cv
193 -317 296 -414 338 -414 cv
349 -414 360 -407 360 -393 cv
360 -375 355 -342 345 -303 cv
294 -107 li
288 -85 281 -55 281 -31 cv
281 -6 291 9 312 9 cv
344 9 412 -41 471 -85 cv
461 -103 li
435 -86 li
412 -71 386 -56 374 -56 cv
367 -56 361 -65 361 -76 cv
361 -88 364 -101 368 -116 cv
432 -372 li
438 -398 443 -423 443 -447 cv
443 -464 437 -482 411 -482 cv
376 -482 299 -437 231 -374 cv
198 -343 172 -308 144 -273 cv
140 -275 li
236 -722 li
cp
false sop
f
}bind def
/g1F {499 0 17 -733 483 11 setcachedevice
483 -722 mo
471 -733 li
419 -707 383 -698 311 -691 cv
307 -670 li
355 -670 li
379 -670 389 -663 389 -646 cv
389 -638 388 -629 387 -622 cv
359 -468 li
329 -477 302 -482 277 -482 cv
208 -482 114 -410 68 -323 cv
37 -265 17 -170 17 -86 cv
17 -21 32 11 61 11 cv
88 11 125 -6 159 -33 cv
213 -77 246 -116 313 -217 cv
290 -126 li
279 -82 274 -50 274 -24 cv
274 -3 283 9 300 9 cv
317 9 341 -3 375 -28 cv
456 -88 li
446 -107 li
402 -76 li
388 -66 372 -59 363 -59 cv
355 -59 349 -68 349 -82 cv
349 -90 350 -99 357 -128 cv
483 -722 li
cp
114 -59 mo
98 -59 89 -73 89 -98 cv
89 -224 135 -380 184 -418 cv
197 -428 216 -433 243 -433 cv
287 -433 316 -427 349 -410 cv
337 -351 li
300 -171 159 -59 114 -59 cv
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIJ+*1 
[32{/.notdef}rp /g13 /g14 /g1C /g1E /g2C /g1D /g2D 
/g2E /g34 /g29 /g18 /g20 /g27 /g21 /g8 
/g11 /g16 /g28 /g2A /g26 /g2F /g23 /g1F 
201{/.notdef}rp]
UUNUIJ+ nf
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
175.324 -374.94 mo
(.)sh
183.598 -374.94 mo
(/)sh
190.597 -374.94 mo
(0)sh
%ADOBeginSubsetFont: UUNUIK+ AddGlyphs
systemdict begin UUNUIL+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/gE {249 0 16 -123 218 155 setcachedevice
204 -123 mo
177 -114 159 -108 106 -93 cv
99 -17 74 48 16 144 cv
30 155 li
71 136 li
152 31 190 -32 218 -109 cv
204 -123 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIL+*1 
[32{/.notdef}rp /g2 /g12 /g10 /g13 /gA /gB /gE 
217{/.notdef}rp]
UUNUIL+ nf
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
199.513 -374.94 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
202.371 -374.94 mo
(1)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
211.289 -374.94 mo
(&)sh
216.434 -374.94 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
219.291 -374.94 mo
(%)sh
224.592 -374.94 mo
(,)sh
227.771 -374.94 mo
(2)sh
232.854 -374.94 mo
(#)sh
237.513 -374.94 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
242.883 -374.94 mo
( )sh
245.741 -374.94 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
255.516 -374.19 mo
(.)sh
263.789 -374.19 mo
(/)sh
270.789 -374.19 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
279.705 -374.19 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
282.562 -374.19 mo
(\))sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
288.937 -374.19 mo
(&)sh
294.082 -374.19 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
296.939 -374.19 mo
(%)sh
302.241 -374.19 mo
(,)sh
305.419 -374.19 mo
(2)sh
310.503 -374.19 mo
(#)sh
315.161 -374.19 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
320.532 -374.19 mo
( )sh
323.389 -374.19 mo
(!)sh
329.115 -374.19 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
73.4999 -134.94 mo
(4)sh
77.3096 -134.94 mo
(5)sh
83.0356 -134.94 mo
(&)sh
87.4879 -134.94 mo
(+)sh
91.9402 -134.94 mo
(")sh
97.0236 -134.94 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
102.75 -134.94 mo
( )sh
105.607 -134.94 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
178.5 -134.94 mo
(4)sh
182.31 -134.94 mo
(5)sh
188.036 -134.94 mo
(&)sh
192.488 -134.94 mo
(+)sh
196.94 -134.94 mo
(")sh
202.024 -134.94 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
207.75 -134.94 mo
( )sh
210.607 -134.94 mo
(#)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
283.746 -345.69 mo
(4)sh
287.556 -345.69 mo
(5)sh
293.282 -345.69 mo
(&)sh
297.734 -345.69 mo
(+)sh
302.186 -345.69 mo
(")sh
307.27 -345.69 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
312.996 -345.69 mo
( )sh
315.853 -345.69 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
388.746 -344.94 mo
(4)sh
392.556 -344.94 mo
(5)sh
398.282 -344.94 mo
(&)sh
402.734 -344.94 mo
(+)sh
407.186 -344.94 mo
(")sh
412.27 -344.94 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
417.996 -344.94 mo
( )sh
420.853 -344.94 mo
(#)sh
false sop
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
349.418 -171.69 mo
( )sh
352.881 -171.69 mo
(!)sh
.749844 .679255 .654902 .901945 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
493.371 -345.69 mo
(4)sh
497.181 -345.69 mo
(5)sh
502.907 -345.69 mo
(&)sh
507.359 -345.69 mo
(+)sh
511.811 -345.69 mo
(")sh
516.895 -345.69 mo
(6)sh
%ADOBeginSubsetFont: UUNUIK+ AddGlyphs
systemdict begin UUNUIL+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g14 {499 0 16 -689 468 3 setcachedevice
16 -23 mo
16 3 li
203 3 203 0 239 0 cv
275 0 275 3 468 3 cv
468 -82 li
353 -77 307 -81 122 -77 cv
304 -270 li
401 -373 431 -428 431 -503 cv
431 -618 353 -689 226 -689 cv
154 -689 105 -669 56 -619 cv
39 -483 li
68 -483 li
81 -529 li
97 -587 133 -612 200 -612 cv
286 -612 341 -558 341 -473 cv
341 -398 299 -324 186 -204 cv
16 -23 li
cp
false sop
f
}bind def
/g41 {499 0 0 75 500 125 setcachedevice
500 125 mo
500 75 li
0 75 li
0 125 li
500 125 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIL+*1 
[32{/.notdef}rp /g2 /g12 /g10 /g13 /gA /gB /gE 
/g14 /g41 215{/.notdef}rp]
UUNUIL+ nf
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
522.621 -345.69 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
525.478 -345.69 mo
(4)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
529.629 -343.44 mo
(')sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
497.191 -330.69 mo
(4)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
506.051 -330.69 mo
( )sh
%ADOBeginSubsetFont: UUNUIM+ AddGlyphs
systemdict begin UUNUIN+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g338 {669 0 65 -604 604 61 setcachedevice
604 -329 mo
604 -351 li
65 -604 li
65 -544 li
503 -339 li
65 -134 li
65 -75 li
604 -329 li
cp
604 61 mo
604 5 li
65 5 li
65 61 li
604 61 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIN+*1 
[32{/.notdef}rp /g3C2 /g338 222{/.notdef}rp]
UUNUIN+ nf
UUNUIN+*1 [11.475 0 0 -11.475 0 0 ]msf
512.344 -330.69 mo
(!)sh
%ADOBeginSubsetFont: UUNUJA+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUJA+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.011 0.668 0.694 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g3B put
dup 33 /g33 put
dup 34 /g36 put
dup 35 /g30 put
dup 36 /g28 put
dup 37 /g37 put
dup 38 /g2D put
dup 39 /g3E put
dup 40 /g29 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g3B {682 0 14 -444 668 0 setcachedevice
230 0 mo
338 -388 li
443 0 li
531 0 li
668 -444 li
595 -444 li
485 -54 li
484 -54 li
373 -444 li
303 -444 li
197 -55 li
196 -55 li
90 -444 li
14 -444 li
151 0 li
230 0 li
cp
false sop
f
}bind def
/g33 {499 0 30 -461 469 11 setcachedevice
469 -220 mo
469 -354 369 -461 250 -461 cv
127 -461 30 -351 30 -220 cv
30 -88 132 11 249 11 cv
369 11 469 -90 469 -220 cv
cp
249 -53 mo
180 -53 108 -109 108 -230 cv
108 -351 184 -400 249 -400 cv
319 -400 391 -348 391 -230 cv
391 -112 323 -53 249 -53 cv
cp
false sop
f
}bind def
/g36 {340 0 82 -455 327 0 setcachedevice
157 -214 mo
157 -314 229 -386 327 -388 cv
327 -455 li
238 -454 183 -405 152 -359 cv
152 -450 li
82 -450 li
82 0 li
157 0 li
157 -214 li
cp
false sop
f
}bind def
/g30 {237 0 81 -694 156 0 setcachedevice
156 -694 mo
81 -694 li
81 0 li
156 0 li
156 -694 li
cp
false sop
f
}bind def
/g28 {515 0 36 -694 434 11 setcachedevice
434 -694 mo
359 -694 li
359 -400 li
306 -444 250 -455 213 -455 cv
114 -455 36 -351 36 -222 cv
36 -91 113 11 208 11 cv
241 11 300 2 356 -52 cv
356 0 li
434 0 li
434 -694 li
cp
356 -139 mo
356 -125 355 -107 323 -78 cv
300 -58 275 -50 249 -50 cv
187 -50 114 -97 114 -221 cv
114 -353 200 -394 259 -394 cv
304 -394 334 -371 356 -339 cv
356 -139 li
cp
false sop
f
}bind def
/g37 {382 0 28 -461 360 11 setcachedevice
360 -128 mo
360 -183 323 -217 321 -220 cv
282 -255 255 -261 205 -270 cv
150 -281 104 -291 104 -340 cv
104 -402 176 -402 189 -402 cv
221 -402 274 -398 331 -364 cv
343 -429 li
291 -453 250 -461 199 -461 cv
174 -461 33 -461 33 -330 cv
33 -281 62 -249 87 -230 cv
118 -208 140 -204 195 -193 cv
231 -186 289 -174 289 -121 cv
289 -52 210 -52 195 -52 cv
114 -52 58 -89 40 -101 cv
28 -33 li
60 -17 115 11 196 11 cv
334 11 360 -75 360 -128 cv
cp
false sop
f
}bind def
/g2D {237 0 74 -680 163 0 setcachedevice
163 -680 mo
74 -680 li
74 -591 li
163 -591 li
163 -680 li
cp
156 -444 mo
81 -444 li
81 0 li
156 0 li
156 -444 li
cp
false sop
f
}bind def
/g3E {433 0 28 -444 402 0 setcachedevice
400 -405 mo
400 -444 li
42 -444 li
42 -386 li
295 -386 li
28 -41 li
28 0 li
402 0 li
402 -61 li
134 -61 li
400 -405 li
cp
false sop
f
}bind def
/g29 {443 0 35 -461 414 11 setcachedevice
414 -219 mo
414 -421 307 -461 236 -461 cv
125 -461 35 -355 35 -226 cv
35 -94 131 11 251 11 cv
314 11 371 -13 410 -41 cv
404 -106 li
341 -54 275 -50 252 -50 cv
172 -50 108 -121 105 -219 cv
414 -219 li
cp
110 -274 mo
126 -350 179 -400 236 -400 cv
288 -400 344 -366 357 -274 cv
110 -274 li
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUJB+ /UUNUJA+ findfont ct_VMDictPut
/UUNUJB+*1 
[32{/.notdef}rp /g3B /g33 /g36 /g30 /g28 /g37 /g2D 
/g3E /g29 215{/.notdef}rp]
UUNUJB+ nf
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
523.465 -330.69 mo
( )sh
531.291 -330.69 mo
(!)sh
537.017 -330.69 mo
(")sh
540.918 -330.69 mo
(#)sh
543.638 -330.69 mo
($)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
549.547 -330.69 mo
(\()sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
555.273 -330.69 mo
(%)sh
559.657 -330.69 mo
(&)sh
562.376 -330.69 mo
(')sh
567.345 -330.69 mo
(\()sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
493.371 -330.69 mo
($)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
501.351 -328.44 mo
(')sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
572.437 -330.69 mo
(%)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
493.148 -166.44 mo
(%)sh
499.039 -166.44 mo
(")sh
504.687 -166.44 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
509.637 -166.44 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
515.355 -166.44 mo
(')sh
520.302 -166.44 mo
(\()sh
526.665 -166.44 mo
(\))sh
533.741 -166.44 mo
(#)sh
false sop
.685756 .61828 .606409 .522393 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIG+ AddGlyphs
systemdict begin UUNUIH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g18 {943 0 71 -700 980 8 setcachedevice
303 -692 mo
264 -691 li
226 -689 202 -689 182 -689 cv
170 -689 148 -690 110 -691 cv
71 -692 li
71 -664 li
89 -662 li
130 -656 138 -645 142 -588 cv
174 -158 li
179 -92 181 -44 182 8 cv
232 8 li
246 -27 264 -66 282 -102 cv
506 -546 li
618 -154 li
633 -102 644 -53 657 8 cv
708 8 li
715 -18 li
725 -58 733 -85 746 -124 cv
917 -631 li
923 -648 938 -660 960 -662 cv
980 -664 li
980 -692 li
948 -691 li
919 -690 897 -689 883 -689 cv
870 -689 848 -690 818 -691 cv
785 -692 li
780 -664 li
819 -662 li
848 -661 860 -653 860 -639 cv
860 -626 857 -608 851 -590 cv
704 -128 li
546 -700 li
528 -700 li
516 -673 494 -624 476 -588 cv
252 -132 li
221 -616 li
221 -646 234 -660 266 -662 cv
303 -664 li
303 -692 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIH+*1 
[32{/.notdef}rp /g13 /g32 /g20 /g1C /g26 /g2B /g2A 
/g18 216{/.notdef}rp]
UUNUIH+ nf
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
179.625 -351.983 mo
(')sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
192.375 -356.94 mo
(!)sh
198.81 -356.94 mo
(")sh
202.273 -356.94 mo
(#)sh
206.227 -356.94 mo
($)sh
190.793 -293.94 mo
(%)sh
195.246 -293.94 mo
(&)sh
84.2929 -293.94 mo
(%)sh
88.7465 -293.94 mo
(&)sh
295.043 -293.94 mo
(%)sh
299.496 -293.94 mo
(&)sh
400.043 -293.94 mo
(%)sh
404.496 -293.94 mo
(&)sh
505.043 -254.94 mo
(%)sh
509.496 -254.94 mo
(&)sh
false sop
.749844 .679255 .654902 .901945 cmyk
%ADOBeginSubsetFont: JHAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUNUIF+ArialMT gcheck setglobal} if
1 108 11 <0001007cfe51026005d30010004eb0852b58400a270f0100101207081010
b80133b3009f0e08b801334011079f0e5e0003100320030303ac119d8c18
2b10f65dfdf6ed10f6ed003f3c3f3c3130015d1bb3000f070100183f3f30
3159012602113437363733060706070615100101df95ce4d5abc8179273d
232b012bfe51bc01f8010eeedafdfbd0598a96bbbdfe1ffe2000>UUNUIF+ArialMT AddT42Char 
1 254 12 <0001007cfe51026005d300100076b0852b58400c2802281002090a100100
1209b80133b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8ff
f8b40f0f02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e02
0eac129d8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1b
b3010f090100183f3f3031591323001134272627262733161716151002fd
81012b2b223d277a81bc5a4dcffe5101e001e1bcb9968a5ad2fbfddaeefe
f2fe0800>UUNUIF+ArialMT AddT42Char 
1 438 15 <000100aafede018300cd000a0064b0852b58b50a030007ab06b801504026
01033c0202010a013c000a020301033c000638073a4f005f006f007f00a0
000500a00ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded
0111123931301bb507060140000800183f1acd2fcd303159333533151406
0727363637b6cd505732393603cdcd718b264d19615b>UUNUIF+ArialMT AddT42Char 
1 580 19 <00020055ffe7041105c00010001d01feb0852b58b10202435458400a1a1e
0405141e0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c
0f0f025500160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3f
ed31301bb10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f0655
09b8ffe6b40d0d065509b8ffee40190b0b0655091100100d0d065500100c
0c065500100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301b404e
04068702880b880fc90e0509070b180245134c154a19431b54135c155c19
521b6b076b0b63136c156b19601b79027706760b7a0f870698079610c918
da02d606d60bdb0f1a1a1e0405141e0d0d174110fff4000c000c01400056
0017fff2000b000b014000560017fff8000d000d01404011561773094021
2334300901000910090209410afff4000b000b014000560009ffe8000d00
0d0140b75609901f110c0c0cb80140b456110e0b0bb80140b45611080d0d
b80140b356117300b8ffc0400c2123342000400002000c0c0cb80140b456
00080b0bb80140b45600080d0db80140b65600901ec78b182b10f62b2b2b
5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed3fed3130015d71005db0
0243b0405058b4062019101cb8fff0b202200bbeffe00016ffe00012ffe0
000fffe0003838383838013838385959591bb10d14b8032fb46c0d0d041a
b8032fb26c040500183f2b3f2b3031591310123633321616121510020623
22272613101633323611102623220706556bd3a076b274426ad3a1d47991
b9a97c7ca9a97e7c4a5d02d30104013dac5fb3feffdafefefec3ad98b701
9dfe97eff00168016aee6986>UUNUIF+ArialMT AddT42Char 
1 1192 20 <000100df000002fb05c0000a010eb0852b58b30a0c0c0cb80140b456000c
0c0cb80140b4560a0e0b0bb80140b456000e0b0bb80140b4560a080d0db8
0140b45600080d0db8014040215603400d11346b047f028f02990804ac04
010900060502030905010c0201ca0a00b8ffc0400a212334300001200001
00b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d0d02
5500b8fff040190f0f065500100c0c065500100d0d0655001a0c05400d0f
3405b8ffc0400e212334300501200540050205190bba013c018500182b4e
10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f1739011139
3130015d005d2b012b2b2b2b2b2b1b400c0201090640050509010c090500
183f3f12392f1acd111239303159212311060607353636373302fbb441d3
5497e22f74047b3e7c1fae47ca5f>UUNUIF+ArialMT AddT42Char 
1 1506 21 <0001003c0000040705c0001e0227b0852b58b10602435458400911100d18
131306550db8fff4b4111106550db8ffee4009101006550d1e14051eb8ff
e84017131306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb40
0c020a1717201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b
2b3fed2b2b2bc43231301bb10202435458400911100d0c121202550db8ff
f440090f1102550d1e14051eb8ffe0400b121302551e140f1102551eb802
bbb2020a17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f101102
02201f1112392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b
40473b053b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a
138912bc12e51ae51bf01a0cbf0bb713021e0a10080606ca1c1a141c1c1a
081c1a030102081a1c030d1e10b802a4b34f110111b80118b50d1e140500
1eb802bbb301020c0a4110fff4000c000c01400056000afff2000b000b01
400056000afff8000d000d0140400d560a7317d30000014021233401bb02
81002000100138400c11b53f025f026f027f020402ba0224001f018fb18b
182b10f65df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de4111217
390111121739870e2e2b0e7d10c4011112393130b00243b040505840091b
101c101d101e1006befff00007ffe00008fff00009fff000383838380138
38383859005d015d7259591b400910100d1b07070d021eb80333b46c020c
140db8032fb26c140500183f2b3f2b1139113312392f3031592515212637
36363736363534262322060727363633321615140606070606070407fc37
021725a39aefa8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c0
7ec4e5666b939c8a13cfd9eaad58aabca4886131>UUNUIF+ArialMT AddT42Char 
1 2156 31 <0001007000e2043b04c30006007cb0852b58400c8f038005020305060308
0205bb025a00060003025ab2024006ba015000020150401500ab01ab2004
021a08043c01200001007507575a182b10f65d3ced4e10f600192f1a4ded
ededed181a10ed10ed01111217393130005d1b400b040001010205060603
400200182f1acd322fcd11392fcd39303159133501150101157003cbfcfe
03020281a8019ab3fec4fec1b300>UUNUIF+ArialMT AddT42Char 
1 2320 33 <0001007000e2043b04c30006007cb0852b58400c80028f04020402010307
0502bb025a00010004025ab2054001ba015000050150401500ab06ab2003
033c06001a08200501057507575a182b10e65d4e10f63c4ded00192f1aed
ededed181a10ed10ed01111217393130005d1b400b030006060502010104
400500182f1acd322fcd11392fcd3930315901013501013501043bfc3503
01fcff03cb0281fe61b3013f013cb3fe6600>UUNUIF+ArialMT AddT42Char 
UUNUIF+ArialMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/comma 15 def
/zero 19 def
/one 20 def
/two 21 def
/less 31 def
/greater 33 def
end
UUNUIF+ArialMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 60 /less put
dup 62 /greater put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUNUIF+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp 
/zero /one /two 9{/.notdef}rp /less /.notdef /greater 193{/.notdef}rp]
UUNUIF+ArialMT nf
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-163.5 -401.94 mo
(\(0,0,1\)<>\(1,0,0\))sh
-163.5 -386.19 mo
(\(0,0,1\)<>\(1,0,1\))sh
-163.5 -370.44 mo
(\(0,0,1\)<>\(1,0,2\))sh
.685756 .61828 .606409 .522393 cmyk
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: UUNUIG+ AddGlyphs
systemdict begin UUNUIH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1D {462 0 37 -733 433 11 setcachedevice
235 -722 mo
223 -733 li
171 -707 135 -698 63 -691 cv
59 -670 li
107 -670 li
131 -670 141 -663 141 -646 cv
141 -639 140 -628 139 -622 cv
38 -71 li
37 -68 37 -64 37 -61 cv
37 -22 85 11 140 11 cv
177 11 228 -8 271 -39 cv
367 -107 433 -244 433 -376 cv
433 -414 424 -453 412 -468 cv
405 -477 392 -482 377 -482 cv
353 -482 323 -474 295 -460 cv
244 -433 211 -403 149 -324 cv
235 -722 li
cp
322 -424 mo
348 -424 361 -401 361 -352 cv
361 -288 340 -202 310 -137 cv
277 -68 237 -36 183 -36 cv
137 -36 112 -59 112 -101 cv
112 -135 127 -276 208 -361 cv
241 -395 293 -424 322 -424 cv
cp
false sop
f
}bind def
/g2D {388 0 26 -482 384 9 setcachedevice
368 -365 mo
371 -403 376 -435 384 -476 cv
373 -481 369 -482 364 -482 cv
333 -482 302 -458 266 -407 cv
227 -351 188 -291 172 -256 cv
204 -408 li
208 -425 210 -438 210 -450 cv
210 -470 202 -482 187 -482 cv
166 -482 128 -461 54 -408 cv
26 -388 li
33 -368 li
65 -389 li
93 -407 104 -412 113 -412 cv
123 -412 130 -403 130 -390 cv
130 -332 87 -126 47 2 cv
57 9 li
72 4 88 1 111 -4 cv
124 -6 li
150 -126 li
168 -209 191 -262 235 -319 cv
269 -363 296 -384 318 -384 cv
333 -384 343 -379 354 -365 cv
368 -365 li
cp
false sop
f
}bind def
/g2E {388 0 9 -482 345 11 setcachedevice
31 -148 mo
26 -97 20 -62 9 -16 cv
47 2 81 11 116 11 cv
165 11 211 -7 262 -47 cv
313 -87 334 -124 334 -174 cv
334 -228 302 -257 228 -271 cv
185 -279 li
125 -290 106 -307 106 -348 cv
106 -401 151 -442 208 -442 cv
249 -442 287 -424 303 -397 cv
303 -342 li
326 -342 li
330 -377 334 -404 345 -455 cv
306 -474 278 -482 245 -482 cv
193 -482 132 -452 84 -404 cv
58 -377 47 -352 47 -316 cv
47 -260 78 -228 144 -215 cv
207 -203 li
251 -195 267 -177 267 -138 cv
267 -73 221 -29 150 -29 cv
115 -29 84 -40 56 -64 cv
56 -148 li
31 -148 li
cp
false sop
f
}bind def
/g34 {499 0 -8 -482 490 276 setcachedevice
-7 180 mo
-8 187 -8 193 -8 198 cv
-8 241 29 276 74 276 cv
180 276 290 152 349 -33 cv
490 -473 li
479 -482 li
450 -471 427 -465 405 -463 cv
370 -331 li
358 -284 323 -211 290 -162 cv
255 -111 206 -67 184 -67 cv
172 -67 163 -90 164 -115 cv
180 -322 li
182 -353 184 -391 184 -419 cv
184 -464 177 -482 160 -482 cv
147 -482 133 -475 85 -442 cv
3 -386 li
14 -368 li
64 -398 li
69 -401 80 -410 89 -410 cv
103 -410 111 -391 111 -358 cv
111 -357 111 -351 110 -343 cv
93 -100 li
92 -60 li
92 -18 110 11 135 11 cv
172 11 256 -74 331 -187 cv
282 -16 li
231 161 181 234 111 234 cv
76 234 49 207 49 172 cv
49 167 50 159 51 150 cv
41 146 li
-7 180 li
cp
false sop
f
}bind def
/g29 {555 0 24 -482 514 9 setcachedevice
24 -388 mo
31 -368 li
63 -389 li
100 -412 103 -414 110 -414 cv
121 -414 128 -404 128 -389 cv
128 -338 87 -145 46 -2 cv
53 9 li
78 2 101 -4 123 -8 cv
142 -134 163 -199 209 -268 cv
263 -352 338 -414 383 -414 cv
394 -414 400 -405 400 -390 cv
400 -372 397 -351 389 -319 cv
337 -107 li
328 -70 324 -47 324 -31 cv
324 -6 335 9 354 9 cv
380 9 416 -12 514 -85 cv
504 -103 li
478 -86 li
449 -67 427 -56 417 -56 cv
410 -56 404 -65 404 -76 cv
404 -81 405 -92 406 -96 cv
472 -372 li
479 -401 483 -429 483 -446 cv
483 -469 472 -482 452 -482 cv
410 -482 341 -444 282 -389 cv
244 -354 216 -320 164 -247 cv
202 -408 li
206 -426 208 -438 208 -449 cv
208 -470 200 -482 185 -482 cv
164 -482 125 -460 52 -408 cv
24 -388 li
cp
false sop
f
}bind def
/g1E {406 0 25 -483 389 11 setcachedevice
342 -330 mo
365 -330 li
373 -395 380 -432 389 -458 cv
365 -473 330 -482 293 -482 cv
248 -483 175 -463 118 -400 cv
64 -352 25 -241 25 -136 cv
25 -40 67 11 147 11 cv
201 11 249 -9 304 -54 cv
354 -95 li
346 -115 li
331 -105 li
259 -57 221 -40 186 -40 cv
130 -40 101 -80 101 -159 cv
101 -267 136 -371 185 -409 cv
206 -425 230 -433 261 -433 cv
306 -433 342 -414 342 -390 cv
342 -330 li
cp
false sop
f
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/UUNUIH+*1 
[32{/.notdef}rp /g13 /g32 /g20 /g1C /g26 /g2B /g2A 
/g18 /g1D /g2D /g2E /g34 /g29 /g1E 210{/.notdef}rp]
UUNUIH+ nf
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
493.148 -310.44 mo
(\()sh
499.039 -310.44 mo
(#)sh
504.687 -310.44 mo
(\))sh
%ADOBeginSubsetFont: UUNUJC+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /UUNUJC+ def
/FontMatrix [0.001 0 0 -0.001 0 0 ] def
/FontBBox [0 -0.005 0.48 0.662 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /g10 put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice
}bind def
/g10 {249 0 67 -111 183 5 setcachedevice
124 -111 mo
94 -111 67 -83 67 -53 cv
67 -23 94 5 123 5 cv
155 5 183 -22 183 -53 cv
183 -83 155 -111 124 -111 cv
cp
false sop
f
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/UUNUJD+ /UUNUJC+ findfont ct_VMDictPut
/UUNUJD+*1 
[32{/.notdef}rp /g10 223{/.notdef}rp]
UUNUJD+ nf
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
509.637 -310.44 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
515.355 -310.44 mo
(*)sh
520.302 -310.44 mo
(+)sh
526.665 -310.44 mo
(,)sh
533.741 -310.44 mo
(-)sh
388.148 -310.44 mo
(\()sh
394.039 -310.44 mo
(#)sh
399.687 -310.44 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
404.637 -310.44 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
410.355 -310.44 mo
(*)sh
415.302 -310.44 mo
(+)sh
421.665 -310.44 mo
(,)sh
428.741 -310.44 mo
(-)sh
283.148 -310.44 mo
(\()sh
289.039 -310.44 mo
(#)sh
294.687 -310.44 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
299.637 -310.44 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
305.355 -310.44 mo
(*)sh
310.302 -310.44 mo
(+)sh
316.665 -310.44 mo
(,)sh
323.741 -310.44 mo
(-)sh
178.148 -310.44 mo
(\()sh
184.039 -310.44 mo
(#)sh
189.687 -310.44 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
194.637 -310.44 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
200.355 -310.44 mo
(*)sh
205.302 -310.44 mo
(+)sh
211.665 -310.44 mo
(,)sh
218.741 -310.44 mo
(-)sh
73.1484 -310.44 mo
(\()sh
79.0389 -310.44 mo
(#)sh
84.6871 -310.44 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
89.6367 -310.44 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
95.3554 -310.44 mo
(*)sh
100.302 -310.44 mo
(+)sh
106.665 -310.44 mo
(,)sh
113.741 -310.44 mo
(-)sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
190.793 -335.94 mo
(%)sh
195.246 -335.94 mo
(&)sh
161.25 -326.19 mo
(%)sh
165.704 -326.19 mo
(&)sh
false sop
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
408.668 -152.94 mo
( )sh
412.131 -152.94 mo
(!)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
495.199 -126.983 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
504.422 -131.94 mo
(!)sh
510.857 -131.94 mo
(")sh
514.32 -131.94 mo
(#)sh
518.273 -131.94 mo
($)sh
294.891 -151.44 mo
(%)sh
299.344 -151.44 mo
(&)sh
504.891 -151.44 mo
(%)sh
509.344 -151.44 mo
(&)sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
389.449 -126.983 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
398.672 -131.94 mo
(!)sh
405.107 -131.94 mo
(")sh
408.57 -131.94 mo
(#)sh
412.523 -131.94 mo
($)sh
399.141 -151.44 mo
(%)sh
403.594 -151.44 mo
(&)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
333.973 -244.44 mo
( )sh
337.596 -244.44 mo
(!)sh
341.55 -244.44 mo
(")sh
346.503 -244.44 mo
(#)sh
349.966 -244.44 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
353.695 -242.94 mo
(%)sh
356.582 -242.94 mo
(!)sh
359.349 -242.94 mo
(#)sh
361.773 -242.94 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
453.223 -255.69 mo
( )sh
456.846 -255.69 mo
(!)sh
460.8 -255.69 mo
(")sh
465.753 -255.69 mo
(#)sh
469.216 -255.69 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
472.945 -254.19 mo
(%)sh
475.832 -254.19 mo
(!)sh
478.599 -254.19 mo
(#)sh
481.023 -254.19 mo
($)sh
grestore
-180.75 -59.19 mo
1475.25 -59.19 li
1475.25 326.31 li
-180.75 326.31 li
cp
f
gsave
-180.75 -59.1899 mo
1475.25 -59.1899 li
1475.25 326.31 li
-180.75 326.31 li
cp
eclp
.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
226.275 6.06 mo
226.335 268.935 li
.428534 .348058 .352331 .0131533 cmyk
@
51.0292 148.695 mo
55.5292 148.695 li
55.5292 149.445 li
51.0292 149.445 li
51.0292 148.695 li
cp
60.0292 148.695 mo
64.5292 148.695 li
64.5292 149.445 li
60.0292 149.445 li
60.0292 148.695 li
cp
69.0292 148.695 mo
73.5292 148.695 li
73.5292 149.445 li
69.0292 149.445 li
69.0292 148.695 li
cp
78.0292 148.695 mo
82.5292 148.695 li
82.5292 149.445 li
78.0292 149.445 li
78.0292 148.695 li
cp
87.0292 148.695 mo
87.2099 148.695 li
88.9497 148.695 90.2555 149.448 91.1273 150.955 cv
90.4781 151.331 li
89.7507 150.074 88.6613 149.445 87.2099 149.445 cv
87.0292 149.445 li
87.0292 148.695 li
cp
91.7324 155.563 mo
91.7324 160.063 li
90.9824 160.063 li
90.9824 155.563 li
91.7324 155.563 li
cp
91.7324 164.563 mo
91.7324 169.063 li
90.9824 169.063 li
90.9824 164.563 li
91.7324 164.563 li
cp
91.7324 173.563 mo
91.7324 178.063 li
90.9824 178.063 li
90.9824 173.563 li
91.7324 173.563 li
cp
91.7324 182.563 mo
91.7324 183.922 li
91.7324 185.129 91.315 186.17 90.48 187.044 cv
89.9376 186.526 li
90.6342 185.797 90.9824 184.929 90.9824 183.922 cv
90.9824 182.563 li
91.7324 182.563 li
cp
86.0424 188.445 mo
81.5424 188.445 li
81.5424 187.695 li
86.0424 187.695 li
86.0424 188.445 li
cp
77.0424 188.445 mo
72.5424 188.445 li
72.5424 187.695 li
77.0424 187.695 li
77.0424 188.445 li
cp
68.0424 188.445 mo
63.5424 188.445 li
63.5424 187.695 li
68.0424 187.695 li
68.0424 188.445 li
cp
59.0424 188.445 mo
54.5424 188.445 li
54.5424 187.695 li
59.0424 187.695 li
59.0424 188.445 li
cp
50.0424 188.445 mo
48.5099 188.445 li
47.3742 188.445 46.3795 188.071 45.5258 187.324 cv
46.0198 186.76 li
46.7321 187.383 47.5622 187.695 48.5099 187.695 cv
50.0424 187.695 li
50.0424 188.445 li
cp
43.9799 182.934 mo
43.9799 178.434 li
44.7299 178.434 li
44.7299 182.934 li
43.9799 182.934 li
cp
43.9799 173.934 mo
43.9799 169.434 li
44.7299 169.434 li
44.7299 173.934 li
43.9799 173.934 li
cp
43.9799 164.934 mo
43.9799 160.434 li
44.7299 160.434 li
44.7299 164.934 li
43.9799 164.934 li
cp
43.9799 155.934 mo
43.9799 153.217 li
43.9799 151.388 44.7919 150.051 46.4158 149.205 cv
46.7621 149.871 li
45.4073 150.576 44.7299 151.691 44.7299 153.217 cv
44.7299 155.934 li
43.9799 155.934 li
cp
.749844 .679255 .654902 .901945 cmyk
f
53.9249 127.732 mo
53.9249 168.232 li
.428534 .348058 .352331 .0131533 cmyk
@
51.4575 161.538 mo
52.8775 164.523 53.7 167.255 53.925 169.735 cv
54.15 167.255 54.9725 164.523 56.3925 161.538 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 53.925 169.735 ]ct
@
grestore newpath
.75 lw
53.9024 185.482 mo
53.8274 213.135 li
@
51.3789 206.431 mo
52.7911 209.42 53.6064 212.154 53.825 214.635 cv
54.0564 212.156 54.8861 209.425 56.3139 206.444 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 53.825 214.635 ]ct
@
grestore newpath
156.929 148.62 mo
161.429 148.62 li
161.429 149.37 li
156.929 149.37 li
156.929 148.62 li
cp
165.929 148.62 mo
170.429 148.62 li
170.429 149.37 li
165.929 149.37 li
165.929 148.62 li
cp
174.929 148.62 mo
179.429 148.62 li
179.429 149.37 li
174.929 149.37 li
174.929 148.62 li
cp
183.929 148.62 mo
188.429 148.62 li
188.429 149.37 li
183.929 149.37 li
183.929 148.62 li
cp
192.929 148.62 mo
193.11 148.62 li
194.85 148.62 196.155 149.373 197.027 150.88 cv
196.378 151.256 li
195.651 149.999 194.561 149.37 193.11 149.37 cv
192.929 149.37 li
192.929 148.62 li
cp
197.632 155.488 mo
197.632 159.988 li
196.882 159.988 li
196.882 155.488 li
197.632 155.488 li
cp
197.632 164.488 mo
197.632 168.988 li
196.882 168.988 li
196.882 164.488 li
197.632 164.488 li
cp
197.632 173.488 mo
197.632 177.988 li
196.882 177.988 li
196.882 173.488 li
197.632 173.488 li
cp
197.632 182.488 mo
197.632 183.847 li
197.632 185.054 197.215 186.095 196.38 186.969 cv
195.838 186.451 li
196.534 185.722 196.882 184.854 196.882 183.847 cv
196.882 182.488 li
197.632 182.488 li
cp
191.942 188.37 mo
187.442 188.37 li
187.442 187.62 li
191.942 187.62 li
191.942 188.37 li
cp
182.942 188.37 mo
178.442 188.37 li
178.442 187.62 li
182.942 187.62 li
182.942 188.37 li
cp
173.942 188.37 mo
169.442 188.37 li
169.442 187.62 li
173.942 187.62 li
173.942 188.37 li
cp
164.942 188.37 mo
160.442 188.37 li
160.442 187.62 li
164.942 187.62 li
164.942 188.37 li
cp
155.942 188.37 mo
154.41 188.37 li
153.274 188.37 152.28 187.996 151.426 187.249 cv
151.92 186.685 li
152.632 187.308 153.462 187.62 154.41 187.62 cv
155.942 187.62 li
155.942 188.37 li
cp
149.88 182.859 mo
149.88 178.359 li
150.63 178.359 li
150.63 182.859 li
149.88 182.859 li
cp
149.88 173.859 mo
149.88 169.359 li
150.63 169.359 li
150.63 173.859 li
149.88 173.859 li
cp
149.88 164.859 mo
149.88 160.359 li
150.63 160.359 li
150.63 164.859 li
149.88 164.859 li
cp
149.88 155.859 mo
149.88 153.142 li
149.88 151.313 150.692 149.976 152.316 149.13 cv
152.662 149.796 li
151.307 150.501 150.63 151.617 150.63 153.142 cv
150.63 155.859 li
149.88 155.859 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
159.825 127.658 mo
159.825 168.158 li
.428534 .348058 .352331 .0131533 cmyk
@
157.357 161.463 mo
158.777 164.448 159.6 167.18 159.825 169.66 cv
160.05 167.18 160.872 164.448 162.292 161.463 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 159.825 169.66 ]ct
@
grestore newpath
.75 lw
159.802 185.408 mo
159.727 213.06 li
@
157.279 206.356 mo
158.691 209.345 159.506 212.079 159.725 214.56 cv
159.956 212.081 160.786 209.35 162.214 206.369 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 159.725 214.56 ]ct
@
grestore newpath
261.404 148.92 mo
265.904 148.92 li
265.904 149.67 li
261.404 149.67 li
261.404 148.92 li
cp
270.404 148.92 mo
274.904 148.92 li
274.904 149.67 li
270.404 149.67 li
270.404 148.92 li
cp
279.404 148.92 mo
283.904 148.92 li
283.904 149.67 li
279.404 149.67 li
279.404 148.92 li
cp
288.404 148.92 mo
292.904 148.92 li
292.904 149.67 li
288.404 149.67 li
288.404 148.92 li
cp
297.404 148.92 mo
297.585 148.92 li
299.325 148.92 300.63 149.673 301.502 151.18 cv
300.853 151.556 li
300.126 150.299 299.036 149.67 297.585 149.67 cv
297.404 149.67 li
297.404 148.92 li
cp
302.107 155.788 mo
302.107 160.288 li
301.357 160.288 li
301.357 155.788 li
302.107 155.788 li
cp
302.107 164.788 mo
302.107 169.288 li
301.357 169.288 li
301.357 164.788 li
302.107 164.788 li
cp
302.107 173.788 mo
302.107 178.288 li
301.357 178.288 li
301.357 173.788 li
302.107 173.788 li
cp
302.107 182.788 mo
302.107 184.148 li
302.107 185.354 301.69 186.395 300.855 187.269 cv
300.313 186.751 li
301.009 186.022 301.357 185.154 301.357 184.148 cv
301.357 182.788 li
302.107 182.788 li
cp
296.417 188.67 mo
291.917 188.67 li
291.917 187.92 li
296.417 187.92 li
296.417 188.67 li
cp
287.417 188.67 mo
282.917 188.67 li
282.917 187.92 li
287.417 187.92 li
287.417 188.67 li
cp
278.417 188.67 mo
273.917 188.67 li
273.917 187.92 li
278.417 187.92 li
278.417 188.67 li
cp
269.417 188.67 mo
264.917 188.67 li
264.917 187.92 li
269.417 187.92 li
269.417 188.67 li
cp
260.417 188.67 mo
258.885 188.67 li
257.749 188.67 256.755 188.296 255.901 187.549 cv
256.395 186.985 li
257.107 187.608 257.937 187.92 258.885 187.92 cv
260.417 187.92 li
260.417 188.67 li
cp
254.355 183.159 mo
254.355 178.659 li
255.105 178.659 li
255.105 183.159 li
254.355 183.159 li
cp
254.355 174.159 mo
254.355 169.659 li
255.105 169.659 li
255.105 174.159 li
254.355 174.159 li
cp
254.355 165.159 mo
254.355 160.659 li
255.105 160.659 li
255.105 165.159 li
254.355 165.159 li
cp
254.355 156.159 mo
254.355 153.443 li
254.355 151.613 255.167 150.276 256.791 149.43 cv
257.137 150.096 li
255.782 150.801 255.105 151.917 255.105 153.443 cv
255.105 156.159 li
254.355 156.159 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
264 85.185 mo
264.292 168.457 li
.428534 .348058 .352331 .0131533 cmyk
@
261.804 161.771 mo
263.234 164.751 264.066 167.481 264.3 169.96 cv
264.516 167.479 265.329 164.744 266.739 161.754 cv
1 lw
gsave
[-.00261799 -.749995 .749995 -.00261799 264.3 169.96 ]ct
@
grestore newpath
.75 lw
264.277 185.707 mo
264.202 213.36 li
@
261.754 206.656 mo
263.166 209.645 263.981 212.379 264.2 214.86 cv
264.431 212.381 265.261 209.65 266.689 206.669 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 264.2 214.86 ]ct
@
grestore newpath
366.029 148.92 mo
370.529 148.92 li
370.529 149.67 li
366.029 149.67 li
366.029 148.92 li
cp
375.029 148.92 mo
379.529 148.92 li
379.529 149.67 li
375.029 149.67 li
375.029 148.92 li
cp
384.029 148.92 mo
388.529 148.92 li
388.529 149.67 li
384.029 149.67 li
384.029 148.92 li
cp
393.029 148.92 mo
397.529 148.92 li
397.529 149.67 li
393.029 149.67 li
393.029 148.92 li
cp
402.029 148.92 mo
402.21 148.92 li
403.95 148.92 405.255 149.673 406.127 151.18 cv
405.478 151.556 li
404.751 150.299 403.661 149.67 402.21 149.67 cv
402.029 149.67 li
402.029 148.92 li
cp
406.732 155.788 mo
406.732 160.288 li
405.982 160.288 li
405.982 155.788 li
406.732 155.788 li
cp
406.732 164.788 mo
406.732 169.288 li
405.982 169.288 li
405.982 164.788 li
406.732 164.788 li
cp
406.732 173.788 mo
406.732 178.288 li
405.982 178.288 li
405.982 173.788 li
406.732 173.788 li
cp
406.732 182.788 mo
406.732 184.148 li
406.732 185.354 406.315 186.395 405.48 187.269 cv
404.938 186.751 li
405.634 186.022 405.982 185.154 405.982 184.148 cv
405.982 182.788 li
406.732 182.788 li
cp
401.042 188.67 mo
396.542 188.67 li
396.542 187.92 li
401.042 187.92 li
401.042 188.67 li
cp
392.042 188.67 mo
387.542 188.67 li
387.542 187.92 li
392.042 187.92 li
392.042 188.67 li
cp
383.042 188.67 mo
378.542 188.67 li
378.542 187.92 li
383.042 187.92 li
383.042 188.67 li
cp
374.042 188.67 mo
369.542 188.67 li
369.542 187.92 li
374.042 187.92 li
374.042 188.67 li
cp
365.042 188.67 mo
363.51 188.67 li
362.374 188.67 361.379 188.296 360.526 187.549 cv
361.02 186.985 li
361.732 187.608 362.562 187.92 363.51 187.92 cv
365.042 187.92 li
365.042 188.67 li
cp
358.98 183.159 mo
358.98 178.659 li
359.73 178.659 li
359.73 183.159 li
358.98 183.159 li
cp
358.98 174.159 mo
358.98 169.659 li
359.73 169.659 li
359.73 174.159 li
358.98 174.159 li
cp
358.98 165.159 mo
358.98 160.659 li
359.73 160.659 li
359.73 165.159 li
358.98 165.159 li
cp
358.98 156.159 mo
358.98 153.443 li
358.98 151.613 359.792 150.276 361.416 149.43 cv
361.762 150.096 li
360.407 150.801 359.73 151.917 359.73 153.443 cv
359.73 156.159 li
358.98 156.159 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
369 85.935 mo
368.925 168.457 li
.428534 .348058 .352331 .0131533 cmyk
@
366.465 161.76 mo
367.882 164.747 368.702 167.48 368.925 169.96 cv
369.152 167.48 369.977 164.748 371.4 161.765 cv
1 lw
gsave
[.000654498 -.75 .75 .000654498 368.925 169.96 ]ct
@
grestore newpath
.75 lw
368.902 185.707 mo
368.827 213.36 li
@
366.379 206.656 mo
367.791 209.645 368.606 212.379 368.825 214.86 cv
369.056 212.381 369.886 209.65 371.314 206.669 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 368.825 214.86 ]ct
@
grestore newpath
.75 lw
196.56 120.307 mo
255.855 177.27 li
.0299992 .399451 1 0 cmyk
@
249.316 174.41 mo
252.453 175.454 254.993 176.754 256.937 178.31 cv
255.305 176.43 253.904 173.943 252.735 170.852 cv
1 lw
gsave
[-.540867 -.51958 .51958 -.540867 256.937 178.31 ]ct
@
grestore newpath
.75 lw
264.3 228.862 mo
264.345 250.86 li
.428534 .348058 .352331 .0131533 cmyk
@
261.865 244.168 mo
263.292 247.15 264.12 249.881 264.35 252.36 cv
264.57 249.88 265.387 247.145 266.8 244.157 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 264.35 252.36 ]ct
@
grestore newpath
.75 lw
159.9 84.2625 mo
159.817 110.932 li
@
157.371 104.23 mo
158.781 107.219 159.595 109.954 159.812 112.435 cv
160.045 109.956 160.876 107.226 162.306 104.245 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 159.812 112.435 ]ct
@
grestore newpath
46.0372 110.317 mo
46.3284 110.227 46.6277 110.182 46.9349 110.182 cv
47.0191 110.182 li
47.0191 110.932 li
46.9349 110.932 li
46.7027 110.932 46.4769 110.966 46.2574 111.034 cv
46.0372 110.317 li
cp
49.5316 110.182 mo
50.3754 110.182 li
50.3754 110.932 li
49.5316 110.932 li
49.5316 110.182 li
cp
52.8879 110.182 mo
53.7317 110.182 li
53.7317 110.932 li
52.8879 110.932 li
52.8879 110.182 li
cp
56.2441 110.182 mo
57.0879 110.182 li
57.0879 110.932 li
56.2441 110.932 li
56.2441 110.182 li
cp
59.6004 110.182 mo
60.4442 110.182 li
60.4442 110.932 li
59.6004 110.932 li
59.6004 110.182 li
cp
62.9566 110.182 mo
63.8004 110.182 li
63.8004 110.932 li
62.9566 110.932 li
62.9566 110.182 li
cp
66.3129 110.182 mo
67.1566 110.182 li
67.1566 110.932 li
66.3129 110.932 li
66.3129 110.182 li
cp
69.6692 110.182 mo
70.5129 110.182 li
70.5129 110.932 li
69.6692 110.932 li
69.6692 110.182 li
cp
73.0254 110.182 mo
73.8691 110.182 li
73.8691 110.932 li
73.0254 110.932 li
73.0254 110.182 li
cp
76.3817 110.182 mo
77.2254 110.182 li
77.2254 110.932 li
76.3817 110.932 li
76.3817 110.182 li
cp
79.7379 110.182 mo
80.5816 110.182 li
80.5816 110.932 li
79.7379 110.932 li
79.7379 110.182 li
cp
83.0941 110.182 mo
83.9379 110.182 li
83.9379 110.932 li
83.0941 110.932 li
83.0941 110.182 li
cp
86.4504 110.182 mo
87.2942 110.182 li
87.2942 110.932 li
86.4504 110.932 li
86.4504 110.182 li
cp
89.8066 110.182 mo
90.6504 110.182 li
90.6504 110.932 li
89.8066 110.932 li
89.8066 110.182 li
cp
93.1629 110.182 mo
94.0067 110.182 li
94.0067 110.932 li
93.1629 110.932 li
93.1629 110.182 li
cp
96.5191 110.182 mo
97.3629 110.182 li
97.3629 110.932 li
96.5191 110.932 li
96.5191 110.182 li
cp
99.8754 110.182 mo
100.719 110.182 li
100.719 110.932 li
99.8754 110.932 li
99.8754 110.182 li
cp
103.232 110.182 mo
104.075 110.182 li
104.075 110.932 li
103.232 110.932 li
103.232 110.182 li
cp
106.588 110.182 mo
107.432 110.182 li
107.432 110.932 li
106.588 110.932 li
106.588 110.182 li
cp
109.944 110.182 mo
110.788 110.182 li
110.788 110.932 li
109.944 110.932 li
109.944 110.182 li
cp
113.3 110.182 mo
114.144 110.182 li
114.144 110.932 li
113.3 110.932 li
113.3 110.182 li
cp
116.657 110.182 mo
117.5 110.182 li
117.5 110.932 li
116.657 110.932 li
116.657 110.182 li
cp
120.013 110.182 mo
120.857 110.182 li
120.857 110.932 li
120.013 110.932 li
120.013 110.182 li
cp
123.369 110.182 mo
124.213 110.182 li
124.213 110.932 li
123.369 110.932 li
123.369 110.182 li
cp
126.725 110.182 mo
127.569 110.182 li
127.569 110.932 li
126.725 110.932 li
126.725 110.182 li
cp
130.082 110.182 mo
130.925 110.182 li
130.925 110.932 li
130.082 110.932 li
130.082 110.182 li
cp
133.438 110.182 mo
134.282 110.182 li
134.282 110.932 li
133.438 110.932 li
133.438 110.182 li
cp
136.794 110.182 mo
137.638 110.182 li
137.638 110.932 li
136.794 110.932 li
136.794 110.182 li
cp
140.15 110.182 mo
140.994 110.182 li
140.994 110.932 li
140.15 110.932 li
140.15 110.182 li
cp
143.507 110.182 mo
144.35 110.182 li
144.35 110.932 li
143.507 110.932 li
143.507 110.182 li
cp
146.863 110.182 mo
147.707 110.182 li
147.707 110.932 li
146.863 110.932 li
146.863 110.182 li
cp
150.219 110.182 mo
151.063 110.182 li
151.063 110.932 li
150.219 110.932 li
150.219 110.182 li
cp
153.575 110.182 mo
154.419 110.182 li
154.419 110.932 li
153.575 110.932 li
153.575 110.182 li
cp
156.932 110.182 mo
157.775 110.182 li
157.775 110.932 li
156.932 110.932 li
156.932 110.182 li
cp
160.288 110.182 mo
161.132 110.182 li
161.132 110.932 li
160.288 110.932 li
160.288 110.182 li
cp
163.644 110.182 mo
164.488 110.182 li
164.488 110.932 li
163.644 110.932 li
163.644 110.182 li
cp
167 110.182 mo
167.844 110.182 li
167.844 110.932 li
167 110.932 li
167 110.182 li
cp
170.357 110.182 mo
171.2 110.182 li
171.2 110.932 li
170.357 110.932 li
170.357 110.182 li
cp
173.713 110.182 mo
174.557 110.182 li
174.557 110.932 li
173.713 110.932 li
173.713 110.182 li
cp
177.069 110.182 mo
177.913 110.182 li
177.913 110.932 li
177.069 110.932 li
177.069 110.182 li
cp
180.425 110.182 mo
181.269 110.182 li
181.269 110.932 li
180.425 110.932 li
180.425 110.182 li
cp
183.782 110.182 mo
184.625 110.182 li
184.625 110.932 li
183.782 110.932 li
183.782 110.182 li
cp
187.138 110.182 mo
187.982 110.182 li
187.982 110.932 li
187.138 110.932 li
187.138 110.182 li
cp
190.494 110.182 mo
191.338 110.182 li
191.338 110.932 li
190.494 110.932 li
190.494 110.182 li
cp
193.85 110.182 mo
194.565 110.182 li
194.618 110.182 194.671 110.184 194.723 110.187 cv
194.685 110.936 li
194.645 110.934 194.605 110.932 194.565 110.932 cv
193.85 110.932 li
193.85 110.182 li
cp
197.147 111.603 mo
197.324 111.882 197.453 112.18 197.533 112.5 cv
196.805 112.682 li
196.745 112.441 196.648 112.216 196.514 112.006 cv
197.147 111.603 li
cp
197.625 115.132 mo
197.625 115.976 li
196.875 115.976 li
196.875 115.132 li
197.625 115.132 li
cp
197.625 118.488 mo
197.625 119.332 li
196.875 119.332 li
196.875 118.488 li
197.625 118.488 li
cp
197.625 121.845 mo
197.625 122.688 li
196.875 122.688 li
196.875 121.845 li
197.625 121.845 li
cp
197.625 125.201 mo
197.625 126.045 li
196.875 126.045 li
196.875 125.201 li
197.625 125.201 li
cp
196.727 128.665 mo
196.497 128.896 196.237 129.085 195.948 129.232 cv
195.608 128.564 li
195.826 128.452 196.023 128.31 196.197 128.135 cv
196.727 128.665 li
cp
193.262 129.562 mo
192.419 129.562 li
192.419 128.812 li
193.262 128.812 li
193.262 129.562 li
cp
189.906 129.562 mo
189.062 129.562 li
189.062 128.812 li
189.906 128.812 li
189.906 129.562 li
cp
186.55 129.562 mo
185.706 129.562 li
185.706 128.812 li
186.55 128.812 li
186.55 129.562 li
cp
183.194 129.562 mo
182.35 129.562 li
182.35 128.812 li
183.194 128.812 li
183.194 129.562 li
cp
179.837 129.562 mo
178.994 129.562 li
178.994 128.812 li
179.837 128.812 li
179.837 129.562 li
cp
176.481 129.562 mo
175.637 129.562 li
175.637 128.812 li
176.481 128.812 li
176.481 129.562 li
cp
173.125 129.562 mo
172.281 129.562 li
172.281 128.812 li
173.125 128.812 li
173.125 129.562 li
cp
169.769 129.562 mo
168.925 129.562 li
168.925 128.812 li
169.769 128.812 li
169.769 129.562 li
cp
166.412 129.562 mo
165.569 129.562 li
165.569 128.812 li
166.412 128.812 li
166.412 129.562 li
cp
163.056 129.562 mo
162.212 129.562 li
162.212 128.812 li
163.056 128.812 li
163.056 129.562 li
cp
159.7 129.562 mo
158.856 129.562 li
158.856 128.812 li
159.7 128.812 li
159.7 129.562 li
cp
156.344 129.562 mo
155.5 129.562 li
155.5 128.812 li
156.344 128.812 li
156.344 129.562 li
cp
152.987 129.562 mo
152.144 129.562 li
152.144 128.812 li
152.987 128.812 li
152.987 129.562 li
cp
149.631 129.562 mo
148.787 129.562 li
148.787 128.812 li
149.631 128.812 li
149.631 129.562 li
cp
146.275 129.562 mo
145.431 129.562 li
145.431 128.812 li
146.275 128.812 li
146.275 129.562 li
cp
142.919 129.562 mo
142.075 129.562 li
142.075 128.812 li
142.919 128.812 li
142.919 129.562 li
cp
139.562 129.562 mo
138.719 129.562 li
138.719 128.812 li
139.562 128.812 li
139.562 129.562 li
cp
136.206 129.562 mo
135.362 129.562 li
135.362 128.812 li
136.206 128.812 li
136.206 129.562 li
cp
132.85 129.562 mo
132.006 129.562 li
132.006 128.812 li
132.85 128.812 li
132.85 129.562 li
cp
129.494 129.562 mo
128.65 129.562 li
128.65 128.812 li
129.494 128.812 li
129.494 129.562 li
cp
126.137 129.562 mo
125.294 129.562 li
125.294 128.812 li
126.137 128.812 li
126.137 129.562 li
cp
122.781 129.562 mo
121.937 129.562 li
121.937 128.812 li
122.781 128.812 li
122.781 129.562 li
cp
119.425 129.562 mo
118.581 129.562 li
118.581 128.812 li
119.425 128.812 li
119.425 129.562 li
cp
116.069 129.562 mo
115.225 129.562 li
115.225 128.812 li
116.069 128.812 li
116.069 129.562 li
cp
112.712 129.562 mo
111.869 129.562 li
111.869 128.812 li
112.712 128.812 li
112.712 129.562 li
cp
109.356 129.562 mo
108.512 129.562 li
108.512 128.812 li
109.356 128.812 li
109.356 129.562 li
cp
106 129.562 mo
105.156 129.562 li
105.156 128.812 li
106 128.812 li
106 129.562 li
cp
102.644 129.562 mo
101.8 129.562 li
101.8 128.812 li
102.644 128.812 li
102.644 129.562 li
cp
99.2873 129.562 mo
98.4435 129.562 li
98.4435 128.812 li
99.2873 128.812 li
99.2873 129.562 li
cp
95.931 129.562 mo
95.0873 129.562 li
95.0873 128.812 li
95.931 128.812 li
95.931 129.562 li
cp
92.5748 129.562 mo
91.7311 129.562 li
91.7311 128.812 li
92.5748 128.812 li
92.5748 129.562 li
cp
89.2185 129.562 mo
88.3748 129.562 li
88.3748 128.812 li
89.2185 128.812 li
89.2185 129.562 li
cp
85.8623 129.562 mo
85.0186 129.562 li
85.0186 128.812 li
85.8623 128.812 li
85.8623 129.562 li
cp
82.506 129.562 mo
81.6623 129.562 li
81.6623 128.812 li
82.506 128.812 li
82.506 129.562 li
cp
79.1498 129.562 mo
78.306 129.562 li
78.306 128.812 li
79.1498 128.812 li
79.1498 129.562 li
cp
75.7936 129.562 mo
74.9498 129.562 li
74.9498 128.812 li
75.7936 128.812 li
75.7936 129.562 li
cp
72.4373 129.562 mo
71.5935 129.562 li
71.5935 128.812 li
72.4373 128.812 li
72.4373 129.562 li
cp
69.0811 129.562 mo
68.2373 129.562 li
68.2373 128.812 li
69.0811 128.812 li
69.0811 129.562 li
cp
65.7248 129.562 mo
64.881 129.562 li
64.881 128.812 li
65.7248 128.812 li
65.7248 129.562 li
cp
62.3685 129.562 mo
61.5248 129.562 li
61.5248 128.812 li
62.3685 128.812 li
62.3685 129.562 li
cp
59.0123 129.562 mo
58.1686 129.562 li
58.1686 128.812 li
59.0123 128.812 li
59.0123 129.562 li
cp
55.656 129.562 mo
54.8123 129.562 li
54.8123 128.812 li
55.656 128.812 li
55.656 129.562 li
cp
52.2998 129.562 mo
51.4561 129.562 li
51.4561 128.812 li
52.2998 128.812 li
52.2998 129.562 li
cp
48.9435 129.562 mo
48.0998 129.562 li
48.0998 128.812 li
48.9435 128.812 li
48.9435 129.562 li
cp
45.4123 129.156 mo
45.1313 128.995 44.882 128.793 44.6643 128.551 cv
45.2213 128.049 li
45.386 128.232 45.5744 128.384 45.7866 128.506 cv
45.4123 129.156 li
cp
43.8749 125.907 mo
43.8749 125.063 li
44.6249 125.063 li
44.6249 125.907 li
43.8749 125.907 li
cp
43.8749 122.551 mo
43.8749 121.707 li
44.6249 121.707 li
44.6249 122.551 li
43.8749 122.551 li
cp
43.8749 119.194 mo
43.8749 118.351 li
44.6249 118.351 li
44.6249 119.194 li
43.8749 119.194 li
cp
43.8749 115.838 mo
43.8749 114.994 li
44.6249 114.994 li
44.6249 115.838 li
43.8749 115.838 li
cp
43.8749 113.25 mo
43.8749 112.909 43.9294 112.579 44.0382 112.259 cv
44.7482 112.501 li
44.666 112.742 44.6249 112.992 44.6249 113.25 cv
43.8749 113.25 li
cp
.791409 .327764 1 .227756 cmyk
f
44.2722 170.182 mo
45.116 170.182 li
45.116 170.932 li
44.2722 170.932 li
44.2722 170.182 li
cp
47.6285 170.182 mo
48.4722 170.182 li
48.4722 170.932 li
47.6285 170.932 li
47.6285 170.182 li
cp
50.9847 170.182 mo
51.8285 170.182 li
51.8285 170.932 li
50.9847 170.932 li
50.9847 170.182 li
cp
54.341 170.182 mo
55.1848 170.182 li
55.1848 170.932 li
54.341 170.932 li
54.341 170.182 li
cp
57.6972 170.182 mo
58.541 170.182 li
58.541 170.932 li
57.6972 170.932 li
57.6972 170.182 li
cp
61.0535 170.182 mo
61.8972 170.182 li
61.8972 170.932 li
61.0535 170.932 li
61.0535 170.182 li
cp
64.4097 170.182 mo
65.2535 170.182 li
65.2535 170.932 li
64.4097 170.932 li
64.4097 170.182 li
cp
67.766 170.182 mo
68.6097 170.182 li
68.6097 170.932 li
67.766 170.932 li
67.766 170.182 li
cp
71.1223 170.182 mo
71.966 170.182 li
71.966 170.932 li
71.1223 170.932 li
71.1223 170.182 li
cp
74.4785 170.182 mo
75.3222 170.182 li
75.3222 170.932 li
74.4785 170.932 li
74.4785 170.182 li
cp
77.8347 170.182 mo
78.6785 170.182 li
78.6785 170.932 li
77.8347 170.932 li
77.8347 170.182 li
cp
81.191 170.182 mo
82.0347 170.182 li
82.0347 170.932 li
81.191 170.932 li
81.191 170.182 li
cp
84.5472 170.182 mo
85.391 170.182 li
85.391 170.932 li
84.5472 170.932 li
84.5472 170.182 li
cp
87.9035 170.182 mo
88.7473 170.182 li
88.7473 170.932 li
87.9035 170.932 li
87.9035 170.182 li
cp
91.2597 170.182 mo
92.1035 170.182 li
92.1035 170.932 li
91.2597 170.932 li
91.2597 170.182 li
cp
94.616 170.182 mo
95.4597 170.182 li
95.4597 170.932 li
94.616 170.932 li
94.616 170.182 li
cp
97.9722 170.182 mo
98.816 170.182 li
98.816 170.932 li
97.9722 170.932 li
97.9722 170.182 li
cp
101.328 170.182 mo
102.172 170.182 li
102.172 170.932 li
101.328 170.932 li
101.328 170.182 li
cp
104.685 170.182 mo
105.529 170.182 li
105.529 170.932 li
104.685 170.932 li
104.685 170.182 li
cp
108.041 170.182 mo
108.885 170.182 li
108.885 170.932 li
108.041 170.932 li
108.041 170.182 li
cp
111.397 170.182 mo
112.241 170.182 li
112.241 170.932 li
111.397 170.932 li
111.397 170.182 li
cp
114.753 170.182 mo
115.597 170.182 li
115.597 170.932 li
114.753 170.932 li
114.753 170.182 li
cp
118.11 170.182 mo
118.953 170.182 li
118.953 170.932 li
118.11 170.932 li
118.11 170.182 li
cp
121.466 170.182 mo
122.31 170.182 li
122.31 170.932 li
121.466 170.932 li
121.466 170.182 li
cp
124.822 170.182 mo
125.666 170.182 li
125.666 170.932 li
124.822 170.932 li
124.822 170.182 li
cp
128.178 170.182 mo
129.022 170.182 li
129.022 170.932 li
128.178 170.932 li
128.178 170.182 li
cp
131.535 170.182 mo
132.378 170.182 li
132.378 170.932 li
131.535 170.932 li
131.535 170.182 li
cp
134.891 170.182 mo
135.735 170.182 li
135.735 170.932 li
134.891 170.932 li
134.891 170.182 li
cp
138.247 170.182 mo
139.091 170.182 li
139.091 170.932 li
138.247 170.932 li
138.247 170.182 li
cp
141.603 170.182 mo
142.447 170.182 li
142.447 170.932 li
141.603 170.932 li
141.603 170.182 li
cp
144.96 170.182 mo
145.803 170.182 li
145.803 170.932 li
144.96 170.932 li
144.96 170.182 li
cp
148.316 170.182 mo
149.16 170.182 li
149.16 170.932 li
148.316 170.932 li
148.316 170.182 li
cp
151.672 170.182 mo
152.516 170.182 li
152.516 170.932 li
151.672 170.932 li
151.672 170.182 li
cp
155.029 170.182 mo
155.872 170.182 li
155.872 170.932 li
155.029 170.932 li
155.029 170.182 li
cp
158.385 170.182 mo
159.228 170.182 li
159.228 170.932 li
158.385 170.932 li
158.385 170.182 li
cp
161.741 170.182 mo
162.585 170.182 li
162.585 170.932 li
161.741 170.932 li
161.741 170.182 li
cp
165.097 170.182 mo
165.941 170.182 li
165.941 170.932 li
165.097 170.932 li
165.097 170.182 li
cp
168.453 170.182 mo
169.297 170.182 li
169.297 170.932 li
168.453 170.932 li
168.453 170.182 li
cp
171.81 170.182 mo
172.654 170.182 li
172.654 170.932 li
171.81 170.932 li
171.81 170.182 li
cp
175.166 170.182 mo
176.01 170.182 li
176.01 170.932 li
175.166 170.932 li
175.166 170.182 li
cp
178.522 170.182 mo
179.366 170.182 li
179.366 170.932 li
178.522 170.932 li
178.522 170.182 li
cp
181.878 170.182 mo
182.722 170.182 li
182.722 170.932 li
181.878 170.932 li
181.878 170.182 li
cp
185.235 170.182 mo
186.078 170.182 li
186.078 170.932 li
185.235 170.932 li
185.235 170.182 li
cp
188.591 170.182 mo
189.435 170.182 li
189.435 170.932 li
188.591 170.932 li
188.591 170.182 li
cp
191.947 170.182 mo
192.791 170.182 li
192.791 170.932 li
191.947 170.932 li
191.947 170.182 li
cp
195.303 170.182 mo
196.147 170.182 li
196.147 170.932 li
195.303 170.932 li
195.303 170.182 li
cp
198.66 170.182 mo
199.503 170.182 li
199.503 170.932 li
198.66 170.932 li
198.66 170.182 li
cp
202.016 170.182 mo
202.86 170.182 li
202.86 170.932 li
202.016 170.932 li
202.016 170.182 li
cp
205.372 170.182 mo
206.216 170.182 li
206.216 170.932 li
205.372 170.932 li
205.372 170.182 li
cp
208.728 170.182 mo
209.572 170.182 li
209.572 170.932 li
208.728 170.932 li
208.728 170.182 li
cp
212.085 170.182 mo
212.928 170.182 li
212.928 170.932 li
212.085 170.932 li
212.085 170.182 li
cp
215.441 170.182 mo
216.285 170.182 li
216.285 170.932 li
215.441 170.932 li
215.441 170.182 li
cp
218.797 170.182 mo
219.641 170.182 li
219.641 170.932 li
218.797 170.932 li
218.797 170.182 li
cp
222.153 170.182 mo
222.997 170.182 li
222.997 170.932 li
222.153 170.932 li
222.153 170.182 li
cp
225.51 170.182 mo
226.353 170.182 li
226.353 170.932 li
225.51 170.932 li
225.51 170.182 li
cp
228.866 170.182 mo
229.71 170.182 li
229.71 170.932 li
228.866 170.932 li
228.866 170.182 li
cp
232.222 170.182 mo
233.066 170.182 li
233.066 170.932 li
232.222 170.932 li
232.222 170.182 li
cp
235.578 170.182 mo
236.422 170.182 li
236.422 170.932 li
235.578 170.932 li
235.578 170.182 li
cp
238.935 170.182 mo
239.778 170.182 li
239.778 170.932 li
238.935 170.932 li
238.935 170.182 li
cp
242.291 170.182 mo
243.135 170.182 li
243.135 170.932 li
242.291 170.932 li
242.291 170.182 li
cp
245.647 170.182 mo
246.491 170.182 li
246.491 170.932 li
245.647 170.932 li
245.647 170.182 li
cp
249.003 170.182 mo
249.847 170.182 li
249.847 170.932 li
249.003 170.932 li
249.003 170.182 li
cp
252.36 170.182 mo
253.203 170.182 li
253.203 170.932 li
252.36 170.932 li
252.36 170.182 li
cp
255.716 170.182 mo
256.56 170.182 li
256.56 170.932 li
255.716 170.932 li
255.716 170.182 li
cp
259.072 170.182 mo
259.916 170.182 li
259.916 170.932 li
259.072 170.932 li
259.072 170.182 li
cp
262.428 170.182 mo
263.272 170.182 li
263.272 170.932 li
262.428 170.932 li
262.428 170.182 li
cp
265.785 170.182 mo
266.628 170.182 li
266.628 170.932 li
265.785 170.932 li
265.785 170.182 li
cp
269.141 170.182 mo
269.985 170.182 li
269.985 170.932 li
269.141 170.932 li
269.141 170.182 li
cp
272.497 170.182 mo
273.341 170.182 li
273.341 170.932 li
272.497 170.932 li
272.497 170.182 li
cp
275.853 170.182 mo
276.697 170.182 li
276.697 170.932 li
275.853 170.932 li
275.853 170.182 li
cp
279.21 170.182 mo
280.053 170.182 li
280.053 170.932 li
279.21 170.932 li
279.21 170.182 li
cp
282.566 170.182 mo
283.41 170.182 li
283.41 170.932 li
282.566 170.932 li
282.566 170.182 li
cp
285.922 170.182 mo
286.766 170.182 li
286.766 170.932 li
285.922 170.932 li
285.922 170.182 li
cp
289.278 170.182 mo
290.122 170.182 li
290.122 170.932 li
289.278 170.932 li
289.278 170.182 li
cp
292.635 170.182 mo
293.478 170.182 li
293.478 170.932 li
292.635 170.932 li
292.635 170.182 li
cp
295.991 170.182 mo
296.835 170.182 li
296.835 170.932 li
295.991 170.932 li
295.991 170.182 li
cp
299.347 170.182 mo
300.191 170.182 li
300.191 170.932 li
299.347 170.932 li
299.347 170.182 li
cp
302.703 170.182 mo
303.547 170.182 li
303.547 170.932 li
302.703 170.932 li
302.703 170.182 li
cp
306.06 170.182 mo
306.903 170.182 li
306.903 170.932 li
306.06 170.932 li
306.06 170.182 li
cp
309.416 170.182 mo
310.26 170.182 li
310.26 170.932 li
309.416 170.932 li
309.416 170.182 li
cp
312.772 170.182 mo
313.616 170.182 li
313.616 170.932 li
312.772 170.932 li
312.772 170.182 li
cp
316.128 170.182 mo
316.972 170.182 li
316.972 170.932 li
316.128 170.932 li
316.128 170.182 li
cp
319.485 170.182 mo
320.328 170.182 li
320.328 170.932 li
319.485 170.932 li
319.485 170.182 li
cp
322.841 170.182 mo
323.685 170.182 li
323.685 170.932 li
322.841 170.932 li
322.841 170.182 li
cp
326.197 170.182 mo
327.041 170.182 li
327.041 170.932 li
326.197 170.932 li
326.197 170.182 li
cp
329.553 170.182 mo
330.397 170.182 li
330.397 170.932 li
329.553 170.932 li
329.553 170.182 li
cp
332.91 170.182 mo
333.753 170.182 li
333.753 170.932 li
332.91 170.932 li
332.91 170.182 li
cp
336.266 170.182 mo
337.11 170.182 li
337.11 170.932 li
336.266 170.932 li
336.266 170.182 li
cp
339.622 170.182 mo
340.466 170.182 li
340.466 170.932 li
339.622 170.932 li
339.622 170.182 li
cp
342.978 170.182 mo
343.822 170.182 li
343.822 170.932 li
342.978 170.932 li
342.978 170.182 li
cp
346.335 170.182 mo
347.178 170.182 li
347.178 170.932 li
346.335 170.932 li
346.335 170.182 li
cp
349.691 170.182 mo
350.535 170.182 li
350.535 170.932 li
349.691 170.932 li
349.691 170.182 li
cp
353.047 170.182 mo
353.891 170.182 li
353.891 170.932 li
353.047 170.932 li
353.047 170.182 li
cp
356.403 170.182 mo
357.247 170.182 li
357.247 170.932 li
356.403 170.932 li
356.403 170.182 li
cp
359.76 170.182 mo
360.603 170.182 li
360.603 170.932 li
359.76 170.932 li
359.76 170.182 li
cp
363.116 170.182 mo
363.96 170.182 li
363.96 170.932 li
363.116 170.932 li
363.116 170.182 li
cp
366.472 170.182 mo
367.316 170.182 li
367.316 170.932 li
366.472 170.932 li
366.472 170.182 li
cp
369.828 170.182 mo
370.672 170.182 li
370.672 170.932 li
369.828 170.932 li
369.828 170.182 li
cp
373.185 170.182 mo
374.028 170.182 li
374.028 170.932 li
373.185 170.932 li
373.185 170.182 li
cp
376.541 170.182 mo
377.385 170.182 li
377.385 170.932 li
376.541 170.932 li
376.541 170.182 li
cp
379.897 170.182 mo
380.741 170.182 li
380.741 170.932 li
379.897 170.932 li
379.897 170.182 li
cp
383.253 170.182 mo
384.097 170.182 li
384.097 170.932 li
383.253 170.932 li
383.253 170.182 li
cp
386.61 170.182 mo
387.453 170.182 li
387.453 170.932 li
386.61 170.932 li
386.61 170.182 li
cp
389.966 170.182 mo
390.81 170.182 li
390.81 170.932 li
389.966 170.932 li
389.966 170.182 li
cp
393.322 170.182 mo
394.166 170.182 li
394.166 170.932 li
393.322 170.932 li
393.322 170.182 li
cp
396.678 170.182 mo
397.522 170.182 li
397.522 170.932 li
396.678 170.932 li
396.678 170.182 li
cp
400.035 170.182 mo
400.878 170.182 li
400.878 170.932 li
400.035 170.932 li
400.035 170.182 li
cp
403.391 170.182 mo
404.235 170.182 li
404.235 170.932 li
403.391 170.932 li
403.391 170.182 li
cp
406.8 170.196 mo
407.144 170.231 407.467 170.333 407.768 170.5 cv
407.403 171.156 li
407.192 171.038 406.966 170.967 406.724 170.942 cv
406.8 170.196 li
cp
409.065 172.98 mo
409.065 173.823 li
408.315 173.823 li
408.315 172.98 li
409.065 172.98 li
cp
409.065 176.336 mo
409.065 177.18 li
408.315 177.18 li
408.315 176.336 li
409.065 176.336 li
cp
409.065 179.692 mo
409.065 180.536 li
408.315 180.536 li
408.315 179.692 li
409.065 179.692 li
cp
409.065 183.048 mo
409.065 183.285 li
409.065 183.538 409.028 183.785 408.955 184.025 cv
408.238 183.807 li
408.289 183.638 408.315 183.464 408.315 183.285 cv
408.315 183.048 li
409.065 183.048 li
cp
406.759 185.803 mo
406.686 185.809 406.612 185.813 406.537 185.813 cv
405.87 185.813 li
405.87 185.063 li
406.537 185.063 li
406.59 185.063 406.643 185.06 406.695 185.056 cv
406.759 185.803 li
cp
403.358 185.813 mo
402.514 185.813 li
402.514 185.063 li
403.358 185.063 li
403.358 185.813 li
cp
400.002 185.813 mo
399.158 185.813 li
399.158 185.063 li
400.002 185.063 li
400.002 185.813 li
cp
396.645 185.813 mo
395.802 185.813 li
395.802 185.063 li
396.645 185.063 li
396.645 185.813 li
cp
393.289 185.813 mo
392.445 185.813 li
392.445 185.063 li
393.289 185.063 li
393.289 185.813 li
cp
389.933 185.813 mo
389.089 185.813 li
389.089 185.063 li
389.933 185.063 li
389.933 185.813 li
cp
386.577 185.813 mo
385.733 185.813 li
385.733 185.063 li
386.577 185.063 li
386.577 185.813 li
cp
383.22 185.813 mo
382.377 185.813 li
382.377 185.063 li
383.22 185.063 li
383.22 185.813 li
cp
379.864 185.813 mo
379.02 185.813 li
379.02 185.063 li
379.864 185.063 li
379.864 185.813 li
cp
376.508 185.813 mo
375.664 185.813 li
375.664 185.063 li
376.508 185.063 li
376.508 185.813 li
cp
373.152 185.813 mo
372.308 185.813 li
372.308 185.063 li
373.152 185.063 li
373.152 185.813 li
cp
369.795 185.813 mo
368.952 185.813 li
368.952 185.063 li
369.795 185.063 li
369.795 185.813 li
cp
366.439 185.813 mo
365.595 185.813 li
365.595 185.063 li
366.439 185.063 li
366.439 185.813 li
cp
363.083 185.813 mo
362.239 185.813 li
362.239 185.063 li
363.083 185.063 li
363.083 185.813 li
cp
359.727 185.813 mo
358.883 185.813 li
358.883 185.063 li
359.727 185.063 li
359.727 185.813 li
cp
356.37 185.813 mo
355.527 185.813 li
355.527 185.063 li
356.37 185.063 li
356.37 185.813 li
cp
353.014 185.813 mo
352.17 185.813 li
352.17 185.063 li
353.014 185.063 li
353.014 185.813 li
cp
349.658 185.813 mo
348.814 185.813 li
348.814 185.063 li
349.658 185.063 li
349.658 185.813 li
cp
346.302 185.813 mo
345.458 185.813 li
345.458 185.063 li
346.302 185.063 li
346.302 185.813 li
cp
342.945 185.813 mo
342.102 185.813 li
342.102 185.063 li
342.945 185.063 li
342.945 185.813 li
cp
339.589 185.813 mo
338.745 185.813 li
338.745 185.063 li
339.589 185.063 li
339.589 185.813 li
cp
336.233 185.813 mo
335.389 185.813 li
335.389 185.063 li
336.233 185.063 li
336.233 185.813 li
cp
332.877 185.813 mo
332.033 185.813 li
332.033 185.063 li
332.877 185.063 li
332.877 185.813 li
cp
329.52 185.813 mo
328.677 185.813 li
328.677 185.063 li
329.52 185.063 li
329.52 185.813 li
cp
326.164 185.813 mo
325.32 185.813 li
325.32 185.063 li
326.164 185.063 li
326.164 185.813 li
cp
322.808 185.813 mo
321.964 185.813 li
321.964 185.063 li
322.808 185.063 li
322.808 185.813 li
cp
319.452 185.813 mo
318.608 185.813 li
318.608 185.063 li
319.452 185.063 li
319.452 185.813 li
cp
316.095 185.813 mo
315.252 185.813 li
315.252 185.063 li
316.095 185.063 li
316.095 185.813 li
cp
312.739 185.813 mo
311.895 185.813 li
311.895 185.063 li
312.739 185.063 li
312.739 185.813 li
cp
309.383 185.813 mo
308.539 185.813 li
308.539 185.063 li
309.383 185.063 li
309.383 185.813 li
cp
306.027 185.813 mo
305.183 185.813 li
305.183 185.063 li
306.027 185.063 li
306.027 185.813 li
cp
302.67 185.813 mo
301.827 185.813 li
301.827 185.063 li
302.67 185.063 li
302.67 185.813 li
cp
299.314 185.813 mo
298.47 185.813 li
298.47 185.063 li
299.314 185.063 li
299.314 185.813 li
cp
295.958 185.813 mo
295.114 185.813 li
295.114 185.063 li
295.958 185.063 li
295.958 185.813 li
cp
292.602 185.813 mo
291.758 185.813 li
291.758 185.063 li
292.602 185.063 li
292.602 185.813 li
cp
289.245 185.813 mo
288.402 185.813 li
288.402 185.063 li
289.245 185.063 li
289.245 185.813 li
cp
285.889 185.813 mo
285.045 185.813 li
285.045 185.063 li
285.889 185.063 li
285.889 185.813 li
cp
282.533 185.813 mo
281.689 185.813 li
281.689 185.063 li
282.533 185.063 li
282.533 185.813 li
cp
279.177 185.813 mo
278.333 185.813 li
278.333 185.063 li
279.177 185.063 li
279.177 185.813 li
cp
275.82 185.813 mo
274.977 185.813 li
274.977 185.063 li
275.82 185.063 li
275.82 185.813 li
cp
272.464 185.813 mo
271.62 185.813 li
271.62 185.063 li
272.464 185.063 li
272.464 185.813 li
cp
269.108 185.813 mo
268.264 185.813 li
268.264 185.063 li
269.108 185.063 li
269.108 185.813 li
cp
265.752 185.813 mo
264.908 185.813 li
264.908 185.063 li
265.752 185.063 li
265.752 185.813 li
cp
262.395 185.813 mo
261.552 185.813 li
261.552 185.063 li
262.395 185.063 li
262.395 185.813 li
cp
259.039 185.813 mo
258.195 185.813 li
258.195 185.063 li
259.039 185.063 li
259.039 185.813 li
cp
255.683 185.813 mo
254.839 185.813 li
254.839 185.063 li
255.683 185.063 li
255.683 185.813 li
cp
252.327 185.813 mo
251.483 185.813 li
251.483 185.063 li
252.327 185.063 li
252.327 185.813 li
cp
248.97 185.813 mo
248.127 185.813 li
248.127 185.063 li
248.97 185.063 li
248.97 185.813 li
cp
245.614 185.813 mo
244.77 185.813 li
244.77 185.063 li
245.614 185.063 li
245.614 185.813 li
cp
242.258 185.813 mo
241.414 185.813 li
241.414 185.063 li
242.258 185.063 li
242.258 185.813 li
cp
238.902 185.813 mo
238.058 185.813 li
238.058 185.063 li
238.902 185.063 li
238.902 185.813 li
cp
235.545 185.813 mo
234.702 185.813 li
234.702 185.063 li
235.545 185.063 li
235.545 185.813 li
cp
232.189 185.813 mo
231.345 185.813 li
231.345 185.063 li
232.189 185.063 li
232.189 185.813 li
cp
228.833 185.813 mo
227.989 185.813 li
227.989 185.063 li
228.833 185.063 li
228.833 185.813 li
cp
225.477 185.813 mo
224.633 185.813 li
224.633 185.063 li
225.477 185.063 li
225.477 185.813 li
cp
222.12 185.813 mo
221.277 185.813 li
221.277 185.063 li
222.12 185.063 li
222.12 185.813 li
cp
218.764 185.813 mo
217.92 185.813 li
217.92 185.063 li
218.764 185.063 li
218.764 185.813 li
cp
215.408 185.813 mo
214.564 185.813 li
214.564 185.063 li
215.408 185.063 li
215.408 185.813 li
cp
212.052 185.813 mo
211.208 185.813 li
211.208 185.063 li
212.052 185.063 li
212.052 185.813 li
cp
208.695 185.813 mo
207.852 185.813 li
207.852 185.063 li
208.695 185.063 li
208.695 185.813 li
cp
205.339 185.813 mo
204.495 185.813 li
204.495 185.063 li
205.339 185.063 li
205.339 185.813 li
cp
201.983 185.813 mo
201.139 185.813 li
201.139 185.063 li
201.983 185.063 li
201.983 185.813 li
cp
198.627 185.813 mo
197.783 185.813 li
197.783 185.063 li
198.627 185.063 li
198.627 185.813 li
cp
195.27 185.813 mo
194.427 185.813 li
194.427 185.063 li
195.27 185.063 li
195.27 185.813 li
cp
191.914 185.813 mo
191.07 185.813 li
191.07 185.063 li
191.914 185.063 li
191.914 185.813 li
cp
188.558 185.813 mo
187.714 185.813 li
187.714 185.063 li
188.558 185.063 li
188.558 185.813 li
cp
185.202 185.813 mo
184.358 185.813 li
184.358 185.063 li
185.202 185.063 li
185.202 185.813 li
cp
181.845 185.813 mo
181.002 185.813 li
181.002 185.063 li
181.845 185.063 li
181.845 185.813 li
cp
178.489 185.813 mo
177.645 185.813 li
177.645 185.063 li
178.489 185.063 li
178.489 185.813 li
cp
175.133 185.813 mo
174.289 185.813 li
174.289 185.063 li
175.133 185.063 li
175.133 185.813 li
cp
171.777 185.813 mo
170.933 185.813 li
170.933 185.063 li
171.777 185.063 li
171.777 185.813 li
cp
168.42 185.813 mo
167.577 185.813 li
167.577 185.063 li
168.42 185.063 li
168.42 185.813 li
cp
165.064 185.813 mo
164.22 185.813 li
164.22 185.063 li
165.064 185.063 li
165.064 185.813 li
cp
161.708 185.813 mo
160.864 185.813 li
160.864 185.063 li
161.708 185.063 li
161.708 185.813 li
cp
158.352 185.813 mo
157.508 185.813 li
157.508 185.063 li
158.352 185.063 li
158.352 185.813 li
cp
154.995 185.813 mo
154.152 185.813 li
154.152 185.063 li
154.995 185.063 li
154.995 185.813 li
cp
151.639 185.813 mo
150.795 185.813 li
150.795 185.063 li
151.639 185.063 li
151.639 185.813 li
cp
148.283 185.813 mo
147.439 185.813 li
147.439 185.063 li
148.283 185.063 li
148.283 185.813 li
cp
144.927 185.813 mo
144.083 185.813 li
144.083 185.063 li
144.927 185.063 li
144.927 185.813 li
cp
141.57 185.813 mo
140.727 185.813 li
140.727 185.063 li
141.57 185.063 li
141.57 185.813 li
cp
138.214 185.813 mo
137.37 185.813 li
137.37 185.063 li
138.214 185.063 li
138.214 185.813 li
cp
134.858 185.813 mo
134.014 185.813 li
134.014 185.063 li
134.858 185.063 li
134.858 185.813 li
cp
131.502 185.813 mo
130.658 185.813 li
130.658 185.063 li
131.502 185.063 li
131.502 185.813 li
cp
128.145 185.813 mo
127.302 185.813 li
127.302 185.063 li
128.145 185.063 li
128.145 185.813 li
cp
124.789 185.813 mo
123.945 185.813 li
123.945 185.063 li
124.789 185.063 li
124.789 185.813 li
cp
121.433 185.813 mo
120.589 185.813 li
120.589 185.063 li
121.433 185.063 li
121.433 185.813 li
cp
118.077 185.813 mo
117.233 185.813 li
117.233 185.063 li
118.077 185.063 li
118.077 185.813 li
cp
114.72 185.813 mo
113.877 185.813 li
113.877 185.063 li
114.72 185.063 li
114.72 185.813 li
cp
111.364 185.813 mo
110.52 185.813 li
110.52 185.063 li
111.364 185.063 li
111.364 185.813 li
cp
108.008 185.813 mo
107.164 185.813 li
107.164 185.063 li
108.008 185.063 li
108.008 185.813 li
cp
104.652 185.813 mo
103.808 185.813 li
103.808 185.063 li
104.652 185.063 li
104.652 185.813 li
cp
101.295 185.813 mo
100.452 185.813 li
100.452 185.063 li
101.295 185.063 li
101.295 185.813 li
cp
97.9392 185.813 mo
97.0955 185.813 li
97.0955 185.063 li
97.9392 185.063 li
97.9392 185.813 li
cp
94.583 185.813 mo
93.7392 185.813 li
93.7392 185.063 li
94.583 185.063 li
94.583 185.813 li
cp
91.2267 185.813 mo
90.3829 185.813 li
90.3829 185.063 li
91.2267 185.063 li
91.2267 185.813 li
cp
87.8705 185.813 mo
87.0267 185.813 li
87.0267 185.063 li
87.8705 185.063 li
87.8705 185.813 li
cp
84.5142 185.813 mo
83.6704 185.813 li
83.6704 185.063 li
84.5142 185.063 li
84.5142 185.813 li
cp
81.158 185.813 mo
80.3142 185.813 li
80.3142 185.063 li
81.158 185.063 li
81.158 185.813 li
cp
77.8017 185.813 mo
76.958 185.813 li
76.958 185.063 li
77.8017 185.063 li
77.8017 185.813 li
cp
74.4454 185.813 mo
73.6017 185.813 li
73.6017 185.063 li
74.4454 185.063 li
74.4454 185.813 li
cp
71.0892 185.813 mo
70.2455 185.813 li
70.2455 185.063 li
71.0892 185.063 li
71.0892 185.813 li
cp
67.7329 185.813 mo
66.8892 185.813 li
66.8892 185.063 li
67.7329 185.063 li
67.7329 185.813 li
cp
64.3767 185.813 mo
63.533 185.813 li
63.533 185.063 li
64.3767 185.063 li
64.3767 185.813 li
cp
61.0205 185.813 mo
60.1767 185.813 li
60.1767 185.063 li
61.0205 185.063 li
61.0205 185.813 li
cp
57.6642 185.813 mo
56.8204 185.813 li
56.8204 185.063 li
57.6642 185.063 li
57.6642 185.813 li
cp
54.308 185.813 mo
53.4642 185.813 li
53.4642 185.063 li
54.308 185.063 li
54.308 185.813 li
cp
50.9517 185.813 mo
50.1079 185.813 li
50.1079 185.063 li
50.9517 185.063 li
50.9517 185.813 li
cp
47.5955 185.813 mo
46.7517 185.813 li
46.7517 185.063 li
47.5955 185.063 li
47.5955 185.813 li
cp
44.2392 185.813 mo
44.2124 185.813 li
43.8719 185.813 43.5462 185.748 43.2352 185.618 cv
43.5242 184.926 li
43.7427 185.017 43.9721 185.063 44.2124 185.063 cv
44.2392 185.063 li
44.2392 185.813 li
cp
41.6849 183.252 mo
41.6849 182.408 li
42.4349 182.408 li
42.4349 183.252 li
41.6849 183.252 li
cp
41.6849 179.896 mo
41.6849 179.052 li
42.4349 179.052 li
42.4349 179.896 li
41.6849 179.896 li
cp
41.6849 176.539 mo
41.6849 175.696 li
42.4349 175.696 li
42.4349 176.539 li
41.6849 176.539 li
cp
41.6849 173.183 mo
41.6849 172.71 li
41.6849 172.358 41.754 172.023 41.8922 171.703 cv
42.5806 172.001 li
42.4835 172.226 42.4349 172.462 42.4349 172.71 cv
42.4349 173.183 li
41.6849 173.183 li
cp
.33872 .685634 1 .2963 cmyk
f
.75 lw
264.277 185.707 mo
247.732 203.752 238.372 224.88 263.572 251.55 cv
.428534 .348058 .352331 .0131533 cmyk
@
256.878 248.183 mo
259.973 249.341 262.464 250.734 264.35 252.36 cv
262.788 250.421 261.479 247.885 260.425 244.752 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 264.35 252.36 ]ct
@
grestore newpath
.75 lw
185.377 35.5575 mo
234.255 101.475 198.18 179.153 256.177 258.735 cv
.107546 1 1 .0573129 cmyk
@
250.201 254.816 mo
253.119 256.369 255.406 258.076 257.062 259.935 cv
255.767 257.808 254.802 255.123 254.167 251.879 cv
1 lw
gsave
[-.446328 -.602737 .602737 -.446328 257.062 259.935 ]ct
@
grestore newpath
.75 lw
303.81 222.307 mo
357.06 222.307 li
.0299992 .399451 1 0 cmyk
@
350.365 224.778 mo
353.35 223.358 356.082 222.535 358.562 222.31 cv
356.082 222.085 353.35 221.263 350.365 219.843 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 358.562 222.31 ]ct
@
grestore newpath
.75 lw
53.3999 84.2625 mo
53.3174 110.932 li
.428534 .348058 .352331 .0131533 cmyk
@
50.8707 104.23 mo
52.2813 107.219 53.0952 109.954 53.3124 112.435 cv
53.5452 109.956 54.3763 107.226 55.8057 104.245 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 53.3124 112.435 ]ct
@
grestore newpath
.75 lw
474.15 84.2625 mo
474.06 214.057 li
@
471.601 207.361 mo
473.019 210.347 473.839 213.08 474.062 215.56 cv
474.289 213.08 475.114 210.348 476.536 207.364 cv
1 lw
gsave
[.000523599 -.75 .75 .000523599 474.062 215.56 ]ct
@
grestore newpath
.75 lw
159.9 42.2625 mo
159.817 68.9325 li
@
157.371 62.2298 mo
158.781 65.2192 159.595 67.9543 159.812 70.435 cv
160.045 67.9557 160.876 65.2258 162.306 62.2453 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 159.812 70.435 ]ct
@
grestore newpath
.75 lw
159.9 42.2625 mo
143.355 60.3 133.845 84.885 159.037 111.622 cv
@
152.34 108.257 mo
155.436 109.416 157.927 110.809 159.812 112.435 cv
158.25 110.496 156.942 107.96 155.888 104.827 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 159.812 112.435 ]ct
@
grestore newpath
.75 lw
474.3 228.862 mo
474.345 250.86 li
@
471.865 244.168 mo
473.292 247.15 474.12 249.881 474.35 252.36 cv
474.57 249.88 475.387 247.145 476.8 244.157 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 474.35 252.36 ]ct
@
grestore newpath
.75 lw
368.55 228.862 mo
368.595 250.86 li
@
366.115 244.168 mo
367.542 247.15 368.37 249.881 368.6 252.36 cv
368.82 249.88 369.637 247.145 371.05 244.157 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 368.6 252.36 ]ct
@
grestore newpath
.75 lw
303.81 222.307 mo
360.592 247.432 418.05 248.302 462.952 222.203 cv
.0299992 .399451 1 0 cmyk
@
457.813 228.096 mo
459.665 225.357 461.602 223.262 463.625 221.81 cv
461.374 222.874 458.602 223.552 455.309 223.843 cv
1 lw
gsave
[-.646288 .380541 -.380541 -.646288 463.625 221.81 ]ct
@
grestore newpath
.75 lw
185.377 35.5575 mo
311.377 75.06 357.127 149.31 364.627 252.81 cv
.107546 1 1 .0573129 cmyk
@
361.572 244.812 mo
363.204 247.687 364.221 250.353 364.625 252.81 cv
364.67 250.32 365.293 247.536 366.494 244.456 cv
1 lw
gsave
[-.0541453 -.748043 .748043 -.0541453 364.625 252.81 ]ct
@
grestore newpath
.75 lw
185.377 35.5575 mo
321.877 63.81 472.402 121.507 470.377 252.307 cv
@
468.035 244.075 mo
469.408 247.082 470.188 249.827 470.375 252.31 cv
470.638 249.834 471.503 247.114 472.969 244.152 cv
1 lw
gsave
[.0116496 -.74991 .74991 .0116496 470.375 252.31 ]ct
@
grestore newpath
grestore
gsave
-180.75 -59.1899 mo
1475.25 -59.1899 li
1475.25 326.31 li
-180.75 326.31 li
cp
eclp
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
257.449 264.517 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
266.672 259.56 mo
(!)sh
273.107 259.56 mo
(")sh
276.57 259.56 mo
(#)sh
280.523 259.56 mo
($)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
46.7695 181.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
68.4609 181.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
71.6356 181.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
55.9921 176.31 mo
(")sh
59.9459 176.31 mo
(#)sh
63.5694 176.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
79.0898 183.81 mo
(!)sh
83.5434 183.81 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
45.0234 225.06 mo
(%)sh
50.9139 225.06 mo
(")sh
56.5621 225.06 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
61.5117 225.06 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
67.2304 225.06 mo
(')sh
72.1774 225.06 mo
(\()sh
78.5396 225.06 mo
(\))sh
85.6159 225.06 mo
(#)sh
46.5234 124.267 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
69.4335 124.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
72.6083 124.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
59.2734 119.31 mo
(&)sh
62.7363 119.31 mo
(+)sh
66.1992 119.31 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
80.0624 126.81 mo
(!)sh
84.516 126.81 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
65.2586 154.652 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
56.6249 202.56 mo
(%)sh
61.0785 202.56 mo
(&)sh
55.7226 145.56 mo
(%)sh
60.1762 145.56 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
151.769 181.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
173.461 181.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
176.636 181.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
160.992 176.31 mo
(")sh
164.946 176.31 mo
(#)sh
168.569 176.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
184.09 183.06 mo
(!)sh
188.543 183.06 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
150.023 224.31 mo
(%)sh
155.914 224.31 mo
(")sh
161.562 224.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
166.512 224.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
172.23 224.31 mo
(')sh
177.177 224.31 mo
(\()sh
183.54 224.31 mo
(\))sh
190.616 224.31 mo
(#)sh
151.523 123.517 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
174.434 123.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
177.608 123.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
164.273 118.56 mo
(&)sh
167.736 118.56 mo
(+)sh
171.199 118.56 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
185.062 126.06 mo
(#)sh
189.516 126.06 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
170.259 154.652 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
161.625 201.81 mo
(%)sh
166.079 201.81 mo
(&)sh
160.723 145.56 mo
(%)sh
165.176 145.56 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
257.144 182.017 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
278.836 182.017 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
282.011 182.017 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
266.367 177.06 mo
(")sh
270.321 177.06 mo
(#)sh
273.944 177.06 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
289.465 183.81 mo
(#)sh
293.918 183.81 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
255.398 225.06 mo
(%)sh
261.289 225.06 mo
(")sh
266.937 225.06 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
271.887 225.06 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
277.605 225.06 mo
(')sh
282.552 225.06 mo
(\()sh
288.915 225.06 mo
(\))sh
295.991 225.06 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
276.009 154.652 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
267 202.56 mo
(%)sh
271.453 202.56 mo
(&)sh
266.098 145.56 mo
(%)sh
270.551 145.56 mo
(&)sh
.982818 .740505 .203769 .0532235 cmyk
UUNUIP+*1 [8.925 0 0 -8.925 0 0 ]msf
294.07 -53.19 mo
( )sh
298.024 -53.19 mo
(!)sh
302.147 -53.19 mo
(")sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
317.918 -52.44 mo
( )sh
321.381 -52.44 mo
(!)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
372.516 -53.19 mo
( )sh
376.139 -53.19 mo
(!)sh
380.093 -53.19 mo
(")sh
385.046 -53.19 mo
(#)sh
388.509 -53.19 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
392.238 -51.69 mo
(%)sh
395.125 -51.69 mo
(!)sh
397.892 -51.69 mo
(#)sh
400.316 -51.69 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
341.695 -50.19 mo
( )sh
345.319 -50.19 mo
(!)sh
349.273 -50.19 mo
(")sh
354.226 -50.19 mo
(#)sh
357.689 -50.19 mo
($)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
225.445 144.81 mo
( )sh
228.908 144.81 mo
(!)sh
UUNUIV+*1 [8.925 0 0 -8.925 0 0 ]msf
235.343 144.81 mo
( )sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
240.539 144.81 mo
(&)sh
244.002 144.81 mo
(-)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
237.574 144.81 mo
($)sh
248.918 144.81 mo
(%)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
197.473 212.31 mo
( )sh
201.096 212.31 mo
(!)sh
205.05 212.31 mo
(")sh
210.003 212.31 mo
(#)sh
213.466 212.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
217.195 213.81 mo
(%)sh
220.082 213.81 mo
(!)sh
222.849 213.81 mo
(#)sh
225.273 213.81 mo
($)sh
.791409 .327764 1 .227756 cmyk
UUNUIX+*1 [8.925 0 0 -8.925 0 0 ]msf
7.42963 122.31 mo
( )sh
11.8832 122.31 mo
(!)sh
15.837 122.31 mo
(")sh
18.8001 122.31 mo
(")sh
21.7632 122.31 mo
(#)sh
25.226 122.31 mo
($)sh
28.6889 122.31 mo
(%)sh
UUNUIX+*1 [6.2475 0 0 -6.2475 0 0 ]msf
33.9023 123.06 mo
($)sh
36.3263 123.06 mo
(#)sh
38.7503 123.06 mo
(&)sh
.33872 .685634 1 .2963 cmyk
UUNUIZ+*1 [8.925 0 0 -8.925 0 0 ]msf
4.42964 180.81 mo
( )sh
8.88321 180.81 mo
(!)sh
12.837 180.81 mo
(")sh
15.8001 180.81 mo
(")sh
18.7632 180.81 mo
(#)sh
22.2261 180.81 mo
($)sh
25.689 180.81 mo
(%)sh
UUNUIZ+*1 [6.2475 0 0 -6.2475 0 0 ]msf
30.9023 181.56 mo
(!)sh
33.6699 181.56 mo
(&)sh
36.2064 181.56 mo
(')sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
239.25 206.31 mo
(%)sh
243.704 206.31 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
147.574 16.56 mo
(.)sh
155.848 16.56 mo
(/)sh
162.847 16.56 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
171.763 16.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
174.621 16.56 mo
(1)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
183.539 16.56 mo
(&)sh
188.684 16.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
191.541 16.56 mo
(%)sh
196.842 16.56 mo
(,)sh
200.021 16.56 mo
(2)sh
205.104 16.56 mo
(#)sh
209.763 16.56 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
215.133 16.56 mo
( )sh
217.991 16.56 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
227.766 17.31 mo
(.)sh
236.039 17.31 mo
(/)sh
243.039 17.31 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
251.955 17.31 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
254.812 17.31 mo
(\))sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
261.187 17.31 mo
(&)sh
266.332 17.31 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
269.189 17.31 mo
(%)sh
274.491 17.31 mo
(,)sh
277.669 17.31 mo
(2)sh
282.753 17.31 mo
(#)sh
287.411 17.31 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
292.782 17.31 mo
( )sh
295.639 17.31 mo
(#)sh
301.365 17.31 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
45.7499 256.56 mo
(4)sh
49.5596 256.56 mo
(5)sh
55.2856 256.56 mo
(&)sh
59.7379 256.56 mo
(+)sh
64.1902 256.56 mo
(")sh
69.2736 256.56 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
74.9997 256.56 mo
( )sh
77.8569 256.56 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
150.75 256.56 mo
(4)sh
154.56 256.56 mo
(5)sh
160.286 256.56 mo
(&)sh
164.738 256.56 mo
(+)sh
169.19 256.56 mo
(")sh
174.274 256.56 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
180 256.56 mo
( )sh
182.857 256.56 mo
(#)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
255.996 45.81 mo
(4)sh
259.806 45.81 mo
(5)sh
265.532 45.81 mo
(&)sh
269.984 45.81 mo
(+)sh
274.436 45.81 mo
(")sh
279.52 45.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
285.246 45.81 mo
( )sh
288.103 45.81 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
360.996 46.56 mo
(4)sh
364.806 46.56 mo
(5)sh
370.532 46.56 mo
(&)sh
374.984 46.56 mo
(+)sh
379.436 46.56 mo
(")sh
384.52 46.56 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
390.246 46.56 mo
( )sh
393.103 46.56 mo
(#)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
321.668 219.81 mo
( )sh
325.131 219.81 mo
(!)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
465.621 45.81 mo
(4)sh
469.431 45.81 mo
(5)sh
475.157 45.81 mo
(&)sh
479.609 45.81 mo
(+)sh
484.061 45.81 mo
(")sh
489.145 45.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
494.871 45.81 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
497.728 45.81 mo
(4)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
501.879 48.06 mo
(')sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
469.441 60.81 mo
(4)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
478.301 60.81 mo
( )sh
UUNUIN+*1 [11.475 0 0 -11.475 0 0 ]msf
484.594 60.81 mo
(!)sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
495.715 60.81 mo
( )sh
503.541 60.81 mo
(!)sh
509.267 60.81 mo
(")sh
513.168 60.81 mo
(#)sh
515.888 60.81 mo
($)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
521.797 60.81 mo
(\()sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
527.523 60.81 mo
(%)sh
531.907 60.81 mo
(&)sh
534.626 60.81 mo
(')sh
539.595 60.81 mo
(\()sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
465.621 60.81 mo
($)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
473.601 63.06 mo
(')sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
544.687 60.81 mo
(%)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
465.398 225.06 mo
(%)sh
471.289 225.06 mo
(")sh
476.937 225.06 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
481.887 225.06 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
487.605 225.06 mo
(')sh
492.552 225.06 mo
(\()sh
498.915 225.06 mo
(\))sh
505.991 225.06 mo
(#)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
151.875 39.517 mo
(')sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
164.625 34.56 mo
(!)sh
171.06 34.56 mo
(")sh
174.523 34.56 mo
(#)sh
178.477 34.56 mo
($)sh
163.043 97.56 mo
(%)sh
167.496 97.56 mo
(&)sh
56.5429 97.56 mo
(%)sh
60.9965 97.56 mo
(&)sh
477.293 136.56 mo
(%)sh
481.746 136.56 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-163.5 -16.44 mo
(\(0,0,1\)<>\(1,1,0\))sh
-163.5 -.689976 mo
(\(0,0,1\)<>\(1,1,1\))sh
-163.5 15.06 mo
(\(0,0,1\)<>\(1,1,2\))sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
465.398 81.06 mo
(\()sh
471.289 81.06 mo
(#)sh
476.937 81.06 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
481.887 81.06 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
487.605 81.06 mo
(*)sh
492.552 81.06 mo
(+)sh
498.915 81.06 mo
(,)sh
505.991 81.06 mo
(-)sh
360.398 81.06 mo
(\()sh
366.289 81.06 mo
(#)sh
371.937 81.06 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
376.887 81.06 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
382.605 81.06 mo
(*)sh
387.552 81.06 mo
(+)sh
393.915 81.06 mo
(,)sh
400.991 81.06 mo
(-)sh
255.398 81.06 mo
(\()sh
261.289 81.06 mo
(#)sh
266.937 81.06 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
271.887 81.06 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
277.605 81.06 mo
(*)sh
282.552 81.06 mo
(+)sh
288.915 81.06 mo
(,)sh
295.991 81.06 mo
(-)sh
150.398 81.06 mo
(\()sh
156.289 81.06 mo
(#)sh
161.937 81.06 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
166.887 81.06 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
172.605 81.06 mo
(*)sh
177.552 81.06 mo
(+)sh
183.915 81.06 mo
(,)sh
190.991 81.06 mo
(-)sh
45.3984 81.06 mo
(\()sh
51.2889 81.06 mo
(#)sh
56.9371 81.06 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
61.8867 81.06 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
67.6054 81.06 mo
(*)sh
72.5524 81.06 mo
(+)sh
78.9146 81.06 mo
(,)sh
85.9909 81.06 mo
(-)sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
163.043 55.56 mo
(%)sh
167.496 55.56 mo
(&)sh
133.5 65.31 mo
(%)sh
137.954 65.31 mo
(&)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
380.918 238.56 mo
( )sh
384.381 238.56 mo
(!)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
467.449 264.517 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
476.672 259.56 mo
(!)sh
483.107 259.56 mo
(")sh
486.57 259.56 mo
(#)sh
490.523 259.56 mo
($)sh
267.141 240.06 mo
(%)sh
271.594 240.06 mo
(&)sh
477.141 240.06 mo
(%)sh
481.594 240.06 mo
(&)sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
361.699 264.517 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
370.922 259.56 mo
(!)sh
377.357 259.56 mo
(")sh
380.82 259.56 mo
(#)sh
384.773 259.56 mo
($)sh
371.391 240.06 mo
(%)sh
375.844 240.06 mo
(&)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
306.223 147.06 mo
( )sh
309.846 147.06 mo
(!)sh
313.8 147.06 mo
(")sh
318.753 147.06 mo
(#)sh
322.216 147.06 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
325.945 148.56 mo
(%)sh
328.832 148.56 mo
(!)sh
331.599 148.56 mo
(#)sh
334.023 148.56 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
425.473 135.81 mo
( )sh
429.096 135.81 mo
(!)sh
433.05 135.81 mo
(")sh
438.003 135.81 mo
(#)sh
441.466 135.81 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
445.195 137.31 mo
(%)sh
448.082 137.31 mo
(!)sh
450.849 137.31 mo
(#)sh
453.273 137.31 mo
($)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
361.769 182.017 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
383.461 182.017 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
386.636 182.017 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
370.992 177.06 mo
(")sh
374.946 177.06 mo
(#)sh
378.569 177.06 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
394.09 183.81 mo
(#)sh
398.543 183.81 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
360.023 225.06 mo
(%)sh
365.914 225.06 mo
(")sh
371.562 225.06 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
376.512 225.06 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
382.23 225.06 mo
(')sh
387.177 225.06 mo
(\()sh
393.54 225.06 mo
(\))sh
400.616 225.06 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
380.259 154.652 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
371.625 202.56 mo
(%)sh
376.078 202.56 mo
(&)sh
370.723 145.56 mo
(%)sh
375.176 145.56 mo
(&)sh
grestore
-180.75 326.31 mo
1475.25 326.31 li
1475.25 711.81 li
-180.75 711.81 li
cp
f
gsave
-180.75 326.31 mo
1475.25 326.31 li
1475.25 711.81 li
-180.75 711.81 li
cp
eclp
.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
273.525 383.31 mo
273.585 646.185 li
.428534 .348058 .352331 .0131533 cmyk
@
98.2792 525.945 mo
102.779 525.945 li
102.779 526.695 li
98.2792 526.695 li
98.2792 525.945 li
cp
107.279 525.945 mo
111.779 525.945 li
111.779 526.695 li
107.279 526.695 li
107.279 525.945 li
cp
116.279 525.945 mo
120.779 525.945 li
120.779 526.695 li
116.279 526.695 li
116.279 525.945 li
cp
125.279 525.945 mo
129.779 525.945 li
129.779 526.695 li
125.279 526.695 li
125.279 525.945 li
cp
134.279 525.945 mo
134.46 525.945 li
136.2 525.945 137.505 526.698 138.377 528.205 cv
137.728 528.581 li
137.001 527.324 135.911 526.695 134.46 526.695 cv
134.279 526.695 li
134.279 525.945 li
cp
138.982 532.813 mo
138.982 537.313 li
138.232 537.313 li
138.232 532.813 li
138.982 532.813 li
cp
138.982 541.813 mo
138.982 546.313 li
138.232 546.313 li
138.232 541.813 li
138.982 541.813 li
cp
138.982 550.813 mo
138.982 555.313 li
138.232 555.313 li
138.232 550.813 li
138.982 550.813 li
cp
138.982 559.813 mo
138.982 561.172 li
138.982 562.379 138.565 563.42 137.73 564.294 cv
137.188 563.776 li
137.884 563.047 138.232 562.179 138.232 561.172 cv
138.232 559.813 li
138.982 559.813 li
cp
133.292 565.695 mo
128.792 565.695 li
128.792 564.945 li
133.292 564.945 li
133.292 565.695 li
cp
124.292 565.695 mo
119.792 565.695 li
119.792 564.945 li
124.292 564.945 li
124.292 565.695 li
cp
115.292 565.695 mo
110.792 565.695 li
110.792 564.945 li
115.292 564.945 li
115.292 565.695 li
cp
106.292 565.695 mo
101.792 565.695 li
101.792 564.945 li
106.292 564.945 li
106.292 565.695 li
cp
97.2924 565.695 mo
95.7599 565.695 li
94.6242 565.695 93.6295 565.321 92.7758 564.574 cv
93.2698 564.01 li
93.9821 564.633 94.8122 564.945 95.7599 564.945 cv
97.2924 564.945 li
97.2924 565.695 li
cp
91.2299 560.184 mo
91.2299 555.684 li
91.9799 555.684 li
91.9799 560.184 li
91.2299 560.184 li
cp
91.2299 551.184 mo
91.2299 546.684 li
91.9799 546.684 li
91.9799 551.184 li
91.2299 551.184 li
cp
91.2299 542.184 mo
91.2299 537.684 li
91.9799 537.684 li
91.9799 542.184 li
91.2299 542.184 li
cp
91.2299 533.184 mo
91.2299 530.467 li
91.2299 528.638 92.0419 527.301 93.6658 526.455 cv
94.0121 527.12 li
92.6573 527.826 91.9799 528.941 91.9799 530.467 cv
91.9799 533.184 li
91.2299 533.184 li
cp
.749844 .679255 .654902 .901945 cmyk
f
101.175 504.982 mo
101.175 545.482 li
.428534 .348058 .352331 .0131533 cmyk
@
98.7075 538.787 mo
100.127 541.772 100.95 544.505 101.175 546.985 cv
101.4 544.505 102.222 541.772 103.642 538.787 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 101.175 546.985 ]ct
@
grestore newpath
.75 lw
101.152 562.732 mo
101.077 590.385 li
@
98.6289 583.681 mo
100.041 586.67 100.856 589.404 101.075 591.885 cv
101.306 589.406 102.136 586.675 103.564 583.694 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 101.075 591.885 ]ct
@
grestore newpath
204.179 525.87 mo
208.679 525.87 li
208.679 526.62 li
204.179 526.62 li
204.179 525.87 li
cp
213.179 525.87 mo
217.679 525.87 li
217.679 526.62 li
213.179 526.62 li
213.179 525.87 li
cp
222.179 525.87 mo
226.679 525.87 li
226.679 526.62 li
222.179 526.62 li
222.179 525.87 li
cp
231.179 525.87 mo
235.679 525.87 li
235.679 526.62 li
231.179 526.62 li
231.179 525.87 li
cp
240.179 525.87 mo
240.36 525.87 li
242.1 525.87 243.405 526.623 244.277 528.13 cv
243.628 528.506 li
242.901 527.249 241.811 526.62 240.36 526.62 cv
240.179 526.62 li
240.179 525.87 li
cp
244.882 532.738 mo
244.882 537.238 li
244.132 537.238 li
244.132 532.738 li
244.882 532.738 li
cp
244.882 541.738 mo
244.882 546.238 li
244.132 546.238 li
244.132 541.738 li
244.882 541.738 li
cp
244.882 550.738 mo
244.882 555.238 li
244.132 555.238 li
244.132 550.738 li
244.882 550.738 li
cp
244.882 559.738 mo
244.882 561.097 li
244.882 562.304 244.465 563.345 243.63 564.219 cv
243.088 563.701 li
243.784 562.972 244.132 562.104 244.132 561.097 cv
244.132 559.738 li
244.882 559.738 li
cp
239.192 565.62 mo
234.692 565.62 li
234.692 564.87 li
239.192 564.87 li
239.192 565.62 li
cp
230.192 565.62 mo
225.692 565.62 li
225.692 564.87 li
230.192 564.87 li
230.192 565.62 li
cp
221.192 565.62 mo
216.692 565.62 li
216.692 564.87 li
221.192 564.87 li
221.192 565.62 li
cp
212.192 565.62 mo
207.692 565.62 li
207.692 564.87 li
212.192 564.87 li
212.192 565.62 li
cp
203.192 565.62 mo
201.66 565.62 li
200.524 565.62 199.53 565.246 198.676 564.499 cv
199.17 563.935 li
199.882 564.558 200.712 564.87 201.66 564.87 cv
203.192 564.87 li
203.192 565.62 li
cp
197.13 560.109 mo
197.13 555.609 li
197.88 555.609 li
197.88 560.109 li
197.13 560.109 li
cp
197.13 551.109 mo
197.13 546.609 li
197.88 546.609 li
197.88 551.109 li
197.13 551.109 li
cp
197.13 542.109 mo
197.13 537.609 li
197.88 537.609 li
197.88 542.109 li
197.13 542.109 li
cp
197.13 533.109 mo
197.13 530.392 li
197.13 528.563 197.942 527.226 199.566 526.38 cv
199.912 527.046 li
198.557 527.751 197.88 528.866 197.88 530.392 cv
197.88 533.109 li
197.13 533.109 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
207.075 504.907 mo
207.075 545.407 li
.428534 .348058 .352331 .0131533 cmyk
@
204.607 538.713 mo
206.027 541.698 206.85 544.43 207.075 546.91 cv
207.3 544.43 208.122 541.698 209.542 538.713 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 207.075 546.91 ]ct
@
grestore newpath
.75 lw
207.052 562.657 mo
206.977 590.31 li
@
204.529 583.606 mo
205.941 586.595 206.756 589.329 206.975 591.81 cv
207.206 589.331 208.036 586.6 209.464 583.619 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 206.975 591.81 ]ct
@
grestore newpath
308.654 526.17 mo
313.154 526.17 li
313.154 526.92 li
308.654 526.92 li
308.654 526.17 li
cp
317.654 526.17 mo
322.154 526.17 li
322.154 526.92 li
317.654 526.92 li
317.654 526.17 li
cp
326.654 526.17 mo
331.154 526.17 li
331.154 526.92 li
326.654 526.92 li
326.654 526.17 li
cp
335.654 526.17 mo
340.154 526.17 li
340.154 526.92 li
335.654 526.92 li
335.654 526.17 li
cp
344.654 526.17 mo
344.835 526.17 li
346.575 526.17 347.88 526.923 348.752 528.43 cv
348.103 528.806 li
347.376 527.549 346.286 526.92 344.835 526.92 cv
344.654 526.92 li
344.654 526.17 li
cp
349.357 533.037 mo
349.357 537.537 li
348.607 537.537 li
348.607 533.037 li
349.357 533.037 li
cp
349.357 542.037 mo
349.357 546.537 li
348.607 546.537 li
348.607 542.037 li
349.357 542.037 li
cp
349.357 551.037 mo
349.357 555.537 li
348.607 555.537 li
348.607 551.037 li
349.357 551.037 li
cp
349.357 560.037 mo
349.357 561.397 li
349.357 562.604 348.94 563.645 348.105 564.519 cv
347.563 564.001 li
348.259 563.272 348.607 562.404 348.607 561.397 cv
348.607 560.037 li
349.357 560.037 li
cp
343.667 565.92 mo
339.167 565.92 li
339.167 565.17 li
343.667 565.17 li
343.667 565.92 li
cp
334.667 565.92 mo
330.167 565.92 li
330.167 565.17 li
334.667 565.17 li
334.667 565.92 li
cp
325.667 565.92 mo
321.167 565.92 li
321.167 565.17 li
325.667 565.17 li
325.667 565.92 li
cp
316.667 565.92 mo
312.167 565.92 li
312.167 565.17 li
316.667 565.17 li
316.667 565.92 li
cp
307.667 565.92 mo
306.135 565.92 li
304.999 565.92 304.004 565.546 303.151 564.799 cv
303.645 564.235 li
304.357 564.858 305.187 565.17 306.135 565.17 cv
307.667 565.17 li
307.667 565.92 li
cp
301.605 560.409 mo
301.605 555.909 li
302.355 555.909 li
302.355 560.409 li
301.605 560.409 li
cp
301.605 551.409 mo
301.605 546.909 li
302.355 546.909 li
302.355 551.409 li
301.605 551.409 li
cp
301.605 542.409 mo
301.605 537.909 li
302.355 537.909 li
302.355 542.409 li
301.605 542.409 li
cp
301.605 533.409 mo
301.605 530.693 li
301.605 528.863 302.417 527.526 304.041 526.68 cv
304.387 527.346 li
303.032 528.051 302.355 529.167 302.355 530.693 cv
302.355 533.409 li
301.605 533.409 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
311.55 505.207 mo
311.55 545.707 li
.428534 .348058 .352331 .0131533 cmyk
@
309.082 539.012 mo
310.502 541.997 311.325 544.73 311.55 547.21 cv
311.775 544.73 312.597 541.997 314.017 539.012 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 311.55 547.21 ]ct
@
grestore newpath
.75 lw
311.527 562.957 mo
311.452 590.61 li
@
309.004 583.906 mo
310.416 586.895 311.231 589.629 311.45 592.11 cv
311.681 589.631 312.511 586.9 313.939 583.919 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 311.45 592.11 ]ct
@
grestore newpath
413.279 526.17 mo
417.779 526.17 li
417.779 526.92 li
413.279 526.92 li
413.279 526.17 li
cp
422.279 526.17 mo
426.779 526.17 li
426.779 526.92 li
422.279 526.92 li
422.279 526.17 li
cp
431.279 526.17 mo
435.779 526.17 li
435.779 526.92 li
431.279 526.92 li
431.279 526.17 li
cp
440.279 526.17 mo
444.779 526.17 li
444.779 526.92 li
440.279 526.92 li
440.279 526.17 li
cp
449.279 526.17 mo
449.46 526.17 li
451.2 526.17 452.505 526.923 453.377 528.43 cv
452.728 528.806 li
452.001 527.549 450.911 526.92 449.46 526.92 cv
449.279 526.92 li
449.279 526.17 li
cp
453.982 533.037 mo
453.982 537.537 li
453.232 537.537 li
453.232 533.037 li
453.982 533.037 li
cp
453.982 542.037 mo
453.982 546.537 li
453.232 546.537 li
453.232 542.037 li
453.982 542.037 li
cp
453.982 551.037 mo
453.982 555.537 li
453.232 555.537 li
453.232 551.037 li
453.982 551.037 li
cp
453.982 560.037 mo
453.982 561.397 li
453.982 562.604 453.565 563.645 452.73 564.519 cv
452.188 564.001 li
452.884 563.272 453.232 562.404 453.232 561.397 cv
453.232 560.037 li
453.982 560.037 li
cp
448.292 565.92 mo
443.792 565.92 li
443.792 565.17 li
448.292 565.17 li
448.292 565.92 li
cp
439.292 565.92 mo
434.792 565.92 li
434.792 565.17 li
439.292 565.17 li
439.292 565.92 li
cp
430.292 565.92 mo
425.792 565.92 li
425.792 565.17 li
430.292 565.17 li
430.292 565.92 li
cp
421.292 565.92 mo
416.792 565.92 li
416.792 565.17 li
421.292 565.17 li
421.292 565.92 li
cp
412.292 565.92 mo
410.76 565.92 li
409.624 565.92 408.629 565.546 407.776 564.799 cv
408.27 564.235 li
408.982 564.858 409.812 565.17 410.76 565.17 cv
412.292 565.17 li
412.292 565.92 li
cp
406.23 560.409 mo
406.23 555.909 li
406.98 555.909 li
406.98 560.409 li
406.23 560.409 li
cp
406.23 551.409 mo
406.23 546.909 li
406.98 546.909 li
406.98 551.409 li
406.23 551.409 li
cp
406.23 542.409 mo
406.23 537.909 li
406.98 537.909 li
406.98 542.409 li
406.23 542.409 li
cp
406.23 533.409 mo
406.23 530.693 li
406.23 528.863 407.042 527.526 408.666 526.68 cv
409.012 527.346 li
407.657 528.051 406.98 529.167 406.98 530.693 cv
406.98 533.409 li
406.23 533.409 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
416.175 505.207 mo
416.175 545.707 li
.428534 .348058 .352331 .0131533 cmyk
@
413.707 539.012 mo
415.127 541.997 415.95 544.73 416.175 547.21 cv
416.4 544.73 417.222 541.997 418.642 539.012 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 416.175 547.21 ]ct
@
grestore newpath
.75 lw
416.152 562.957 mo
416.077 590.61 li
@
413.629 583.906 mo
415.041 586.895 415.856 589.629 416.075 592.11 cv
416.306 589.631 417.136 586.9 418.564 583.919 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 416.075 592.11 ]ct
@
grestore newpath
.75 lw
243.81 497.557 mo
303.105 554.52 li
.0299992 .399451 1 0 cmyk
@
296.566 551.66 mo
299.703 552.704 302.243 554.004 304.187 555.56 cv
302.555 553.68 301.154 551.194 299.985 548.102 cv
1 lw
gsave
[-.540867 -.51958 .51958 -.540867 304.187 555.56 ]ct
@
grestore newpath
.75 lw
311.55 606.112 mo
311.595 628.11 li
.428534 .348058 .352331 .0131533 cmyk
@
309.115 621.418 mo
310.542 624.4 311.37 627.13 311.6 629.61 cv
311.82 627.13 312.637 624.395 314.05 621.407 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 311.6 629.61 ]ct
@
grestore newpath
.75 lw
207.15 461.513 mo
207.067 488.182 li
@
204.621 481.48 mo
206.031 484.469 206.845 487.204 207.062 489.685 cv
207.295 487.206 208.126 484.476 209.556 481.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 207.062 489.685 ]ct
@
grestore newpath
93.2872 487.567 mo
93.5784 487.477 93.8777 487.432 94.1849 487.432 cv
94.2691 487.432 li
94.2691 488.182 li
94.1849 488.182 li
93.9527 488.182 93.7269 488.216 93.5074 488.284 cv
93.2872 487.567 li
cp
96.7816 487.432 mo
97.6254 487.432 li
97.6254 488.182 li
96.7816 488.182 li
96.7816 487.432 li
cp
100.138 487.432 mo
100.982 487.432 li
100.982 488.182 li
100.138 488.182 li
100.138 487.432 li
cp
103.494 487.432 mo
104.338 487.432 li
104.338 488.182 li
103.494 488.182 li
103.494 487.432 li
cp
106.85 487.432 mo
107.694 487.432 li
107.694 488.182 li
106.85 488.182 li
106.85 487.432 li
cp
110.207 487.432 mo
111.05 487.432 li
111.05 488.182 li
110.207 488.182 li
110.207 487.432 li
cp
113.563 487.432 mo
114.407 487.432 li
114.407 488.182 li
113.563 488.182 li
113.563 487.432 li
cp
116.919 487.432 mo
117.763 487.432 li
117.763 488.182 li
116.919 488.182 li
116.919 487.432 li
cp
120.275 487.432 mo
121.119 487.432 li
121.119 488.182 li
120.275 488.182 li
120.275 487.432 li
cp
123.632 487.432 mo
124.475 487.432 li
124.475 488.182 li
123.632 488.182 li
123.632 487.432 li
cp
126.988 487.432 mo
127.832 487.432 li
127.832 488.182 li
126.988 488.182 li
126.988 487.432 li
cp
130.344 487.432 mo
131.188 487.432 li
131.188 488.182 li
130.344 488.182 li
130.344 487.432 li
cp
133.7 487.432 mo
134.544 487.432 li
134.544 488.182 li
133.7 488.182 li
133.7 487.432 li
cp
137.057 487.432 mo
137.9 487.432 li
137.9 488.182 li
137.057 488.182 li
137.057 487.432 li
cp
140.413 487.432 mo
141.257 487.432 li
141.257 488.182 li
140.413 488.182 li
140.413 487.432 li
cp
143.769 487.432 mo
144.613 487.432 li
144.613 488.182 li
143.769 488.182 li
143.769 487.432 li
cp
147.125 487.432 mo
147.969 487.432 li
147.969 488.182 li
147.125 488.182 li
147.125 487.432 li
cp
150.482 487.432 mo
151.325 487.432 li
151.325 488.182 li
150.482 488.182 li
150.482 487.432 li
cp
153.838 487.432 mo
154.682 487.432 li
154.682 488.182 li
153.838 488.182 li
153.838 487.432 li
cp
157.194 487.432 mo
158.038 487.432 li
158.038 488.182 li
157.194 488.182 li
157.194 487.432 li
cp
160.55 487.432 mo
161.394 487.432 li
161.394 488.182 li
160.55 488.182 li
160.55 487.432 li
cp
163.907 487.432 mo
164.75 487.432 li
164.75 488.182 li
163.907 488.182 li
163.907 487.432 li
cp
167.263 487.432 mo
168.107 487.432 li
168.107 488.182 li
167.263 488.182 li
167.263 487.432 li
cp
170.619 487.432 mo
171.463 487.432 li
171.463 488.182 li
170.619 488.182 li
170.619 487.432 li
cp
173.975 487.432 mo
174.819 487.432 li
174.819 488.182 li
173.975 488.182 li
173.975 487.432 li
cp
177.332 487.432 mo
178.175 487.432 li
178.175 488.182 li
177.332 488.182 li
177.332 487.432 li
cp
180.688 487.432 mo
181.532 487.432 li
181.532 488.182 li
180.688 488.182 li
180.688 487.432 li
cp
184.044 487.432 mo
184.888 487.432 li
184.888 488.182 li
184.044 488.182 li
184.044 487.432 li
cp
187.4 487.432 mo
188.244 487.432 li
188.244 488.182 li
187.4 488.182 li
187.4 487.432 li
cp
190.757 487.432 mo
191.6 487.432 li
191.6 488.182 li
190.757 488.182 li
190.757 487.432 li
cp
194.113 487.432 mo
194.957 487.432 li
194.957 488.182 li
194.113 488.182 li
194.113 487.432 li
cp
197.469 487.432 mo
198.313 487.432 li
198.313 488.182 li
197.469 488.182 li
197.469 487.432 li
cp
200.825 487.432 mo
201.669 487.432 li
201.669 488.182 li
200.825 488.182 li
200.825 487.432 li
cp
204.182 487.432 mo
205.025 487.432 li
205.025 488.182 li
204.182 488.182 li
204.182 487.432 li
cp
207.538 487.432 mo
208.382 487.432 li
208.382 488.182 li
207.538 488.182 li
207.538 487.432 li
cp
210.894 487.432 mo
211.738 487.432 li
211.738 488.182 li
210.894 488.182 li
210.894 487.432 li
cp
214.25 487.432 mo
215.094 487.432 li
215.094 488.182 li
214.25 488.182 li
214.25 487.432 li
cp
217.607 487.432 mo
218.45 487.432 li
218.45 488.182 li
217.607 488.182 li
217.607 487.432 li
cp
220.963 487.432 mo
221.807 487.432 li
221.807 488.182 li
220.963 488.182 li
220.963 487.432 li
cp
224.319 487.432 mo
225.163 487.432 li
225.163 488.182 li
224.319 488.182 li
224.319 487.432 li
cp
227.675 487.432 mo
228.519 487.432 li
228.519 488.182 li
227.675 488.182 li
227.675 487.432 li
cp
231.032 487.432 mo
231.875 487.432 li
231.875 488.182 li
231.032 488.182 li
231.032 487.432 li
cp
234.388 487.432 mo
235.232 487.432 li
235.232 488.182 li
234.388 488.182 li
234.388 487.432 li
cp
237.744 487.432 mo
238.588 487.432 li
238.588 488.182 li
237.744 488.182 li
237.744 487.432 li
cp
241.1 487.432 mo
241.944 487.432 li
241.944 488.182 li
241.1 488.182 li
241.1 487.432 li
cp
244.457 487.432 mo
245.3 487.432 li
245.3 488.182 li
244.457 488.182 li
244.457 487.432 li
cp
247.813 487.432 mo
248.657 487.432 li
248.657 488.182 li
247.813 488.182 li
247.813 487.432 li
cp
251.169 487.432 mo
252.013 487.432 li
252.013 488.182 li
251.169 488.182 li
251.169 487.432 li
cp
254.525 487.432 mo
255.369 487.432 li
255.369 488.182 li
254.525 488.182 li
254.525 487.432 li
cp
257.882 487.432 mo
258.725 487.432 li
258.725 488.182 li
257.882 488.182 li
257.882 487.432 li
cp
261.238 487.432 mo
262.082 487.432 li
262.082 488.182 li
261.238 488.182 li
261.238 487.432 li
cp
264.594 487.432 mo
265.438 487.432 li
265.438 488.182 li
264.594 488.182 li
264.594 487.432 li
cp
267.95 487.432 mo
268.794 487.432 li
268.794 488.182 li
267.95 488.182 li
267.95 487.432 li
cp
271.307 487.432 mo
272.15 487.432 li
272.15 488.182 li
271.307 488.182 li
271.307 487.432 li
cp
274.663 487.432 mo
275.507 487.432 li
275.507 488.182 li
274.663 488.182 li
274.663 487.432 li
cp
278.019 487.432 mo
278.863 487.432 li
278.863 488.182 li
278.019 488.182 li
278.019 487.432 li
cp
281.375 487.432 mo
282.219 487.432 li
282.219 488.182 li
281.375 488.182 li
281.375 487.432 li
cp
284.732 487.432 mo
285.575 487.432 li
285.575 488.182 li
284.732 488.182 li
284.732 487.432 li
cp
288.088 487.432 mo
288.932 487.432 li
288.932 488.182 li
288.088 488.182 li
288.088 487.432 li
cp
291.444 487.432 mo
292.288 487.432 li
292.288 488.182 li
291.444 488.182 li
291.444 487.432 li
cp
294.8 487.432 mo
295.644 487.432 li
295.644 488.182 li
294.8 488.182 li
294.8 487.432 li
cp
298.157 487.432 mo
299 487.432 li
299 488.182 li
298.157 488.182 li
298.157 487.432 li
cp
301.513 487.432 mo
302.357 487.432 li
302.357 488.182 li
301.513 488.182 li
301.513 487.432 li
cp
304.869 487.432 mo
305.713 487.432 li
305.713 488.182 li
304.869 488.182 li
304.869 487.432 li
cp
308.225 487.432 mo
309.069 487.432 li
309.069 488.182 li
308.225 488.182 li
308.225 487.432 li
cp
311.582 487.432 mo
312.425 487.432 li
312.425 488.182 li
311.582 488.182 li
311.582 487.432 li
cp
314.938 487.432 mo
315.782 487.432 li
315.782 488.182 li
314.938 488.182 li
314.938 487.432 li
cp
318.294 487.432 mo
319.138 487.432 li
319.138 488.182 li
318.294 488.182 li
318.294 487.432 li
cp
321.65 487.432 mo
322.494 487.432 li
322.494 488.182 li
321.65 488.182 li
321.65 487.432 li
cp
325.007 487.432 mo
325.85 487.432 li
325.85 488.182 li
325.007 488.182 li
325.007 487.432 li
cp
328.363 487.432 mo
329.207 487.432 li
329.207 488.182 li
328.363 488.182 li
328.363 487.432 li
cp
331.719 487.432 mo
332.563 487.432 li
332.563 488.182 li
331.719 488.182 li
331.719 487.432 li
cp
335.075 487.432 mo
335.919 487.432 li
335.919 488.182 li
335.075 488.182 li
335.075 487.432 li
cp
338.432 487.432 mo
339.275 487.432 li
339.275 488.182 li
338.432 488.182 li
338.432 487.432 li
cp
341.788 487.432 mo
342.632 487.432 li
342.632 488.182 li
341.788 488.182 li
341.788 487.432 li
cp
345.144 487.432 mo
345.988 487.432 li
345.988 488.182 li
345.144 488.182 li
345.144 487.432 li
cp
348.5 487.432 mo
349.344 487.432 li
349.344 488.182 li
348.5 488.182 li
348.5 487.432 li
cp
351.857 487.432 mo
352.7 487.432 li
352.7 488.182 li
351.857 488.182 li
351.857 487.432 li
cp
355.213 487.432 mo
356.057 487.432 li
356.057 488.182 li
355.213 488.182 li
355.213 487.432 li
cp
358.569 487.432 mo
359.413 487.432 li
359.413 488.182 li
358.569 488.182 li
358.569 487.432 li
cp
361.925 487.432 mo
362.769 487.432 li
362.769 488.182 li
361.925 488.182 li
361.925 487.432 li
cp
365.282 487.432 mo
366.125 487.432 li
366.125 488.182 li
365.282 488.182 li
365.282 487.432 li
cp
368.638 487.432 mo
369.482 487.432 li
369.482 488.182 li
368.638 488.182 li
368.638 487.432 li
cp
371.994 487.432 mo
372.838 487.432 li
372.838 488.182 li
371.994 488.182 li
371.994 487.432 li
cp
375.35 487.432 mo
376.194 487.432 li
376.194 488.182 li
375.35 488.182 li
375.35 487.432 li
cp
378.707 487.432 mo
379.55 487.432 li
379.55 488.182 li
378.707 488.182 li
378.707 487.432 li
cp
382.063 487.432 mo
382.907 487.432 li
382.907 488.182 li
382.063 488.182 li
382.063 487.432 li
cp
385.419 487.432 mo
386.263 487.432 li
386.263 488.182 li
385.419 488.182 li
385.419 487.432 li
cp
388.775 487.432 mo
389.619 487.432 li
389.619 488.182 li
388.775 488.182 li
388.775 487.432 li
cp
392.132 487.432 mo
392.975 487.432 li
392.975 488.182 li
392.132 488.182 li
392.132 487.432 li
cp
395.488 487.432 mo
396.332 487.432 li
396.332 488.182 li
395.488 488.182 li
395.488 487.432 li
cp
398.844 487.432 mo
399.688 487.432 li
399.688 488.182 li
398.844 488.182 li
398.844 487.432 li
cp
402.2 487.432 mo
403.044 487.432 li
403.044 488.182 li
402.2 488.182 li
402.2 487.432 li
cp
405.557 487.432 mo
406.4 487.432 li
406.4 488.182 li
405.557 488.182 li
405.557 487.432 li
cp
408.913 487.432 mo
409.757 487.432 li
409.757 488.182 li
408.913 488.182 li
408.913 487.432 li
cp
412.269 487.432 mo
413.113 487.432 li
413.113 488.182 li
412.269 488.182 li
412.269 487.432 li
cp
415.625 487.432 mo
416.469 487.432 li
416.469 488.182 li
415.625 488.182 li
415.625 487.432 li
cp
418.982 487.432 mo
419.825 487.432 li
419.825 488.182 li
418.982 488.182 li
418.982 487.432 li
cp
422.338 487.432 mo
423.182 487.432 li
423.182 488.182 li
422.338 488.182 li
422.338 487.432 li
cp
425.694 487.432 mo
426.538 487.432 li
426.538 488.182 li
425.694 488.182 li
425.694 487.432 li
cp
429.05 487.432 mo
429.894 487.432 li
429.894 488.182 li
429.05 488.182 li
429.05 487.432 li
cp
432.407 487.432 mo
433.25 487.432 li
433.25 488.182 li
432.407 488.182 li
432.407 487.432 li
cp
435.763 487.432 mo
436.607 487.432 li
436.607 488.182 li
435.763 488.182 li
435.763 487.432 li
cp
439.119 487.432 mo
439.963 487.432 li
439.963 488.182 li
439.119 488.182 li
439.119 487.432 li
cp
442.475 487.432 mo
443.319 487.432 li
443.319 488.182 li
442.475 488.182 li
442.475 487.432 li
cp
445.832 487.432 mo
446.675 487.432 li
446.675 488.182 li
445.832 488.182 li
445.832 487.432 li
cp
449.188 487.432 mo
450.032 487.432 li
450.032 488.182 li
449.188 488.182 li
449.188 487.432 li
cp
452.706 488.04 mo
452.965 488.234 453.189 488.464 453.376 488.728 cv
452.763 489.161 li
452.622 488.961 452.453 488.787 452.257 488.641 cv
452.706 488.04 li
cp
453.937 491.407 mo
453.937 492.251 li
453.187 492.251 li
453.187 491.407 li
453.937 491.407 li
cp
453.937 494.763 mo
453.937 495.607 li
453.187 495.607 li
453.187 494.763 li
453.937 494.763 li
cp
453.937 498.12 mo
453.937 498.963 li
453.187 498.963 li
453.187 498.12 li
453.937 498.12 li
cp
453.937 501.476 mo
453.937 502.32 li
453.187 502.32 li
453.187 501.476 li
453.937 501.476 li
cp
453.671 504.999 mo
453.538 505.296 453.362 505.565 453.143 505.807 cv
452.587 505.303 li
452.753 505.12 452.886 504.917 452.986 504.693 cv
453.671 504.999 li
cp
450.55 506.812 mo
449.706 506.812 li
449.706 506.062 li
450.55 506.062 li
450.55 506.812 li
cp
447.193 506.812 mo
446.35 506.812 li
446.35 506.062 li
447.193 506.062 li
447.193 506.812 li
cp
443.837 506.812 mo
442.993 506.812 li
442.993 506.062 li
443.837 506.062 li
443.837 506.812 li
cp
440.481 506.812 mo
439.637 506.812 li
439.637 506.062 li
440.481 506.062 li
440.481 506.812 li
cp
437.125 506.812 mo
436.281 506.812 li
436.281 506.062 li
437.125 506.062 li
437.125 506.812 li
cp
433.769 506.812 mo
432.925 506.812 li
432.925 506.062 li
433.769 506.062 li
433.769 506.812 li
cp
430.412 506.812 mo
429.568 506.812 li
429.568 506.062 li
430.412 506.062 li
430.412 506.812 li
cp
427.056 506.812 mo
426.212 506.812 li
426.212 506.062 li
427.056 506.062 li
427.056 506.812 li
cp
423.7 506.812 mo
422.856 506.812 li
422.856 506.062 li
423.7 506.062 li
423.7 506.812 li
cp
420.344 506.812 mo
419.5 506.812 li
419.5 506.062 li
420.344 506.062 li
420.344 506.812 li
cp
416.987 506.812 mo
416.144 506.812 li
416.144 506.062 li
416.987 506.062 li
416.987 506.812 li
cp
413.631 506.812 mo
412.787 506.812 li
412.787 506.062 li
413.631 506.062 li
413.631 506.812 li
cp
410.275 506.812 mo
409.431 506.812 li
409.431 506.062 li
410.275 506.062 li
410.275 506.812 li
cp
406.918 506.812 mo
406.075 506.812 li
406.075 506.062 li
406.918 506.062 li
406.918 506.812 li
cp
403.562 506.812 mo
402.719 506.812 li
402.719 506.062 li
403.562 506.062 li
403.562 506.812 li
cp
400.206 506.812 mo
399.362 506.812 li
399.362 506.062 li
400.206 506.062 li
400.206 506.812 li
cp
396.85 506.812 mo
396.006 506.812 li
396.006 506.062 li
396.85 506.062 li
396.85 506.812 li
cp
393.493 506.812 mo
392.65 506.812 li
392.65 506.062 li
393.493 506.062 li
393.493 506.812 li
cp
390.137 506.812 mo
389.293 506.812 li
389.293 506.062 li
390.137 506.062 li
390.137 506.812 li
cp
386.781 506.812 mo
385.937 506.812 li
385.937 506.062 li
386.781 506.062 li
386.781 506.812 li
cp
383.425 506.812 mo
382.581 506.812 li
382.581 506.062 li
383.425 506.062 li
383.425 506.812 li
cp
380.068 506.812 mo
379.225 506.812 li
379.225 506.062 li
380.068 506.062 li
380.068 506.812 li
cp
376.712 506.812 mo
375.868 506.812 li
375.868 506.062 li
376.712 506.062 li
376.712 506.812 li
cp
373.356 506.812 mo
372.512 506.812 li
372.512 506.062 li
373.356 506.062 li
373.356 506.812 li
cp
370 506.812 mo
369.156 506.812 li
369.156 506.062 li
370 506.062 li
370 506.812 li
cp
366.644 506.812 mo
365.8 506.812 li
365.8 506.062 li
366.644 506.062 li
366.644 506.812 li
cp
363.287 506.812 mo
362.443 506.812 li
362.443 506.062 li
363.287 506.062 li
363.287 506.812 li
cp
359.931 506.812 mo
359.087 506.812 li
359.087 506.062 li
359.931 506.062 li
359.931 506.812 li
cp
356.575 506.812 mo
355.731 506.812 li
355.731 506.062 li
356.575 506.062 li
356.575 506.812 li
cp
353.219 506.812 mo
352.375 506.812 li
352.375 506.062 li
353.219 506.062 li
353.219 506.812 li
cp
349.862 506.812 mo
349.019 506.812 li
349.019 506.062 li
349.862 506.062 li
349.862 506.812 li
cp
346.506 506.812 mo
345.662 506.812 li
345.662 506.062 li
346.506 506.062 li
346.506 506.812 li
cp
343.15 506.812 mo
342.306 506.812 li
342.306 506.062 li
343.15 506.062 li
343.15 506.812 li
cp
339.793 506.812 mo
338.95 506.812 li
338.95 506.062 li
339.793 506.062 li
339.793 506.812 li
cp
336.437 506.812 mo
335.594 506.812 li
335.594 506.062 li
336.437 506.062 li
336.437 506.812 li
cp
333.081 506.812 mo
332.237 506.812 li
332.237 506.062 li
333.081 506.062 li
333.081 506.812 li
cp
329.725 506.812 mo
328.881 506.812 li
328.881 506.062 li
329.725 506.062 li
329.725 506.812 li
cp
326.368 506.812 mo
325.525 506.812 li
325.525 506.062 li
326.368 506.062 li
326.368 506.812 li
cp
323.012 506.812 mo
322.168 506.812 li
322.168 506.062 li
323.012 506.062 li
323.012 506.812 li
cp
319.656 506.812 mo
318.812 506.812 li
318.812 506.062 li
319.656 506.062 li
319.656 506.812 li
cp
316.3 506.812 mo
315.456 506.812 li
315.456 506.062 li
316.3 506.062 li
316.3 506.812 li
cp
312.943 506.812 mo
312.1 506.812 li
312.1 506.062 li
312.943 506.062 li
312.943 506.812 li
cp
309.587 506.812 mo
308.743 506.812 li
308.743 506.062 li
309.587 506.062 li
309.587 506.812 li
cp
306.231 506.812 mo
305.387 506.812 li
305.387 506.062 li
306.231 506.062 li
306.231 506.812 li
cp
302.875 506.812 mo
302.031 506.812 li
302.031 506.062 li
302.875 506.062 li
302.875 506.812 li
cp
299.519 506.812 mo
298.675 506.812 li
298.675 506.062 li
299.519 506.062 li
299.519 506.812 li
cp
296.162 506.812 mo
295.318 506.812 li
295.318 506.062 li
296.162 506.062 li
296.162 506.812 li
cp
292.806 506.812 mo
291.962 506.812 li
291.962 506.062 li
292.806 506.062 li
292.806 506.812 li
cp
289.45 506.812 mo
288.606 506.812 li
288.606 506.062 li
289.45 506.062 li
289.45 506.812 li
cp
286.094 506.812 mo
285.25 506.812 li
285.25 506.062 li
286.094 506.062 li
286.094 506.812 li
cp
282.737 506.812 mo
281.894 506.812 li
281.894 506.062 li
282.737 506.062 li
282.737 506.812 li
cp
279.381 506.812 mo
278.537 506.812 li
278.537 506.062 li
279.381 506.062 li
279.381 506.812 li
cp
276.025 506.812 mo
275.181 506.812 li
275.181 506.062 li
276.025 506.062 li
276.025 506.812 li
cp
272.668 506.812 mo
271.825 506.812 li
271.825 506.062 li
272.668 506.062 li
272.668 506.812 li
cp
269.312 506.812 mo
268.468 506.812 li
268.468 506.062 li
269.312 506.062 li
269.312 506.812 li
cp
265.956 506.812 mo
265.112 506.812 li
265.112 506.062 li
265.956 506.062 li
265.956 506.812 li
cp
262.6 506.812 mo
261.756 506.812 li
261.756 506.062 li
262.6 506.062 li
262.6 506.812 li
cp
259.243 506.812 mo
258.4 506.812 li
258.4 506.062 li
259.243 506.062 li
259.243 506.812 li
cp
255.887 506.812 mo
255.043 506.812 li
255.043 506.062 li
255.887 506.062 li
255.887 506.812 li
cp
252.531 506.812 mo
251.687 506.812 li
251.687 506.062 li
252.531 506.062 li
252.531 506.812 li
cp
249.175 506.812 mo
248.331 506.812 li
248.331 506.062 li
249.175 506.062 li
249.175 506.812 li
cp
245.818 506.812 mo
244.975 506.812 li
244.975 506.062 li
245.818 506.062 li
245.818 506.812 li
cp
242.462 506.812 mo
241.618 506.812 li
241.618 506.062 li
242.462 506.062 li
242.462 506.812 li
cp
239.106 506.812 mo
238.262 506.812 li
238.262 506.062 li
239.106 506.062 li
239.106 506.812 li
cp
235.75 506.812 mo
234.906 506.812 li
234.906 506.062 li
235.75 506.062 li
235.75 506.812 li
cp
232.394 506.812 mo
231.55 506.812 li
231.55 506.062 li
232.394 506.062 li
232.394 506.812 li
cp
229.037 506.812 mo
228.193 506.812 li
228.193 506.062 li
229.037 506.062 li
229.037 506.812 li
cp
225.681 506.812 mo
224.837 506.812 li
224.837 506.062 li
225.681 506.062 li
225.681 506.812 li
cp
222.325 506.812 mo
221.481 506.812 li
221.481 506.062 li
222.325 506.062 li
222.325 506.812 li
cp
218.969 506.812 mo
218.125 506.812 li
218.125 506.062 li
218.969 506.062 li
218.969 506.812 li
cp
215.612 506.812 mo
214.769 506.812 li
214.769 506.062 li
215.612 506.062 li
215.612 506.812 li
cp
212.256 506.812 mo
211.412 506.812 li
211.412 506.062 li
212.256 506.062 li
212.256 506.812 li
cp
208.9 506.812 mo
208.056 506.812 li
208.056 506.062 li
208.9 506.062 li
208.9 506.812 li
cp
205.544 506.812 mo
204.7 506.812 li
204.7 506.062 li
205.544 506.062 li
205.544 506.812 li
cp
202.187 506.812 mo
201.344 506.812 li
201.344 506.062 li
202.187 506.062 li
202.187 506.812 li
cp
198.831 506.812 mo
197.987 506.812 li
197.987 506.062 li
198.831 506.062 li
198.831 506.812 li
cp
195.475 506.812 mo
194.631 506.812 li
194.631 506.062 li
195.475 506.062 li
195.475 506.812 li
cp
192.118 506.812 mo
191.275 506.812 li
191.275 506.062 li
192.118 506.062 li
192.118 506.812 li
cp
188.762 506.812 mo
187.919 506.812 li
187.919 506.062 li
188.762 506.062 li
188.762 506.812 li
cp
185.406 506.812 mo
184.562 506.812 li
184.562 506.062 li
185.406 506.062 li
185.406 506.812 li
cp
182.05 506.812 mo
181.206 506.812 li
181.206 506.062 li
182.05 506.062 li
182.05 506.812 li
cp
178.694 506.812 mo
177.85 506.812 li
177.85 506.062 li
178.694 506.062 li
178.694 506.812 li
cp
175.337 506.812 mo
174.493 506.812 li
174.493 506.062 li
175.337 506.062 li
175.337 506.812 li
cp
171.981 506.812 mo
171.137 506.812 li
171.137 506.062 li
171.981 506.062 li
171.981 506.812 li
cp
168.625 506.812 mo
167.781 506.812 li
167.781 506.062 li
168.625 506.062 li
168.625 506.812 li
cp
165.269 506.812 mo
164.425 506.812 li
164.425 506.062 li
165.269 506.062 li
165.269 506.812 li
cp
161.912 506.812 mo
161.069 506.812 li
161.069 506.062 li
161.912 506.062 li
161.912 506.812 li
cp
158.556 506.812 mo
157.712 506.812 li
157.712 506.062 li
158.556 506.062 li
158.556 506.812 li
cp
155.2 506.812 mo
154.356 506.812 li
154.356 506.062 li
155.2 506.062 li
155.2 506.812 li
cp
151.844 506.812 mo
151 506.812 li
151 506.062 li
151.844 506.062 li
151.844 506.812 li
cp
148.487 506.812 mo
147.644 506.812 li
147.644 506.062 li
148.487 506.062 li
148.487 506.812 li
cp
145.131 506.812 mo
144.287 506.812 li
144.287 506.062 li
145.131 506.062 li
145.131 506.812 li
cp
141.775 506.812 mo
140.931 506.812 li
140.931 506.062 li
141.775 506.062 li
141.775 506.812 li
cp
138.419 506.812 mo
137.575 506.812 li
137.575 506.062 li
138.419 506.062 li
138.419 506.812 li
cp
135.062 506.812 mo
134.219 506.812 li
134.219 506.062 li
135.062 506.062 li
135.062 506.812 li
cp
131.706 506.812 mo
130.862 506.812 li
130.862 506.062 li
131.706 506.062 li
131.706 506.812 li
cp
128.35 506.812 mo
127.506 506.812 li
127.506 506.062 li
128.35 506.062 li
128.35 506.812 li
cp
124.993 506.812 mo
124.15 506.812 li
124.15 506.062 li
124.993 506.062 li
124.993 506.812 li
cp
121.637 506.812 mo
120.794 506.812 li
120.794 506.062 li
121.637 506.062 li
121.637 506.812 li
cp
118.281 506.812 mo
117.437 506.812 li
117.437 506.062 li
118.281 506.062 li
118.281 506.812 li
cp
114.925 506.812 mo
114.081 506.812 li
114.081 506.062 li
114.925 506.062 li
114.925 506.812 li
cp
111.569 506.812 mo
110.725 506.812 li
110.725 506.062 li
111.569 506.062 li
111.569 506.812 li
cp
108.212 506.812 mo
107.368 506.812 li
107.368 506.062 li
108.212 506.062 li
108.212 506.812 li
cp
104.856 506.812 mo
104.012 506.812 li
104.012 506.062 li
104.856 506.062 li
104.856 506.812 li
cp
101.5 506.812 mo
100.656 506.812 li
100.656 506.062 li
101.5 506.062 li
101.5 506.812 li
cp
98.1435 506.812 mo
97.2998 506.812 li
97.2998 506.062 li
98.1435 506.062 li
98.1435 506.812 li
cp
94.7873 506.812 mo
94.1849 506.812 li
94.0864 506.812 93.9884 506.808 93.8909 506.798 cv
93.9622 506.052 li
94.036 506.059 94.1102 506.062 94.1849 506.062 cv
94.7873 506.062 li
94.7873 506.812 li
cp
91.5359 505.281 mo
91.3703 504.995 91.2543 504.69 91.1877 504.366 cv
91.9224 504.215 li
91.9726 504.459 92.0602 504.69 92.1853 504.906 cv
91.5359 505.281 li
cp
91.1249 501.751 mo
91.1249 500.907 li
91.8749 500.907 li
91.8749 501.751 li
91.1249 501.751 li
cp
91.1249 498.394 mo
91.1249 497.551 li
91.8749 497.551 li
91.8749 498.394 li
91.1249 498.394 li
cp
91.1249 495.038 mo
91.1249 494.194 li
91.8749 494.194 li
91.8749 495.038 li
91.1249 495.038 li
cp
91.1249 491.682 mo
91.1249 490.838 li
91.8749 490.838 li
91.8749 491.682 li
91.1249 491.682 li
cp
91.1249 490.5 mo
91.1249 490.159 91.1794 489.829 91.2882 489.509 cv
91.9982 489.751 li
91.916 489.992 91.8749 490.242 91.8749 490.5 cv
91.1249 490.5 li
cp
.791409 .327764 1 .227756 cmyk
f
91.5222 547.432 mo
92.366 547.432 li
92.366 548.182 li
91.5222 548.182 li
91.5222 547.432 li
cp
94.8785 547.432 mo
95.7222 547.432 li
95.7222 548.182 li
94.8785 548.182 li
94.8785 547.432 li
cp
98.2347 547.432 mo
99.0785 547.432 li
99.0785 548.182 li
98.2347 548.182 li
98.2347 547.432 li
cp
101.591 547.432 mo
102.435 547.432 li
102.435 548.182 li
101.591 548.182 li
101.591 547.432 li
cp
104.947 547.432 mo
105.791 547.432 li
105.791 548.182 li
104.947 548.182 li
104.947 547.432 li
cp
108.303 547.432 mo
109.147 547.432 li
109.147 548.182 li
108.303 548.182 li
108.303 547.432 li
cp
111.66 547.432 mo
112.503 547.432 li
112.503 548.182 li
111.66 548.182 li
111.66 547.432 li
cp
115.016 547.432 mo
115.86 547.432 li
115.86 548.182 li
115.016 548.182 li
115.016 547.432 li
cp
118.372 547.432 mo
119.216 547.432 li
119.216 548.182 li
118.372 548.182 li
118.372 547.432 li
cp
121.728 547.432 mo
122.572 547.432 li
122.572 548.182 li
121.728 548.182 li
121.728 547.432 li
cp
125.085 547.432 mo
125.928 547.432 li
125.928 548.182 li
125.085 548.182 li
125.085 547.432 li
cp
128.441 547.432 mo
129.285 547.432 li
129.285 548.182 li
128.441 548.182 li
128.441 547.432 li
cp
131.797 547.432 mo
132.641 547.432 li
132.641 548.182 li
131.797 548.182 li
131.797 547.432 li
cp
135.154 547.432 mo
135.997 547.432 li
135.997 548.182 li
135.154 548.182 li
135.154 547.432 li
cp
138.51 547.432 mo
139.353 547.432 li
139.353 548.182 li
138.51 548.182 li
138.51 547.432 li
cp
141.866 547.432 mo
142.71 547.432 li
142.71 548.182 li
141.866 548.182 li
141.866 547.432 li
cp
145.222 547.432 mo
146.066 547.432 li
146.066 548.182 li
145.222 548.182 li
145.222 547.432 li
cp
148.578 547.432 mo
149.422 547.432 li
149.422 548.182 li
148.578 548.182 li
148.578 547.432 li
cp
151.935 547.432 mo
152.779 547.432 li
152.779 548.182 li
151.935 548.182 li
151.935 547.432 li
cp
155.291 547.432 mo
156.135 547.432 li
156.135 548.182 li
155.291 548.182 li
155.291 547.432 li
cp
158.647 547.432 mo
159.491 547.432 li
159.491 548.182 li
158.647 548.182 li
158.647 547.432 li
cp
162.003 547.432 mo
162.847 547.432 li
162.847 548.182 li
162.003 548.182 li
162.003 547.432 li
cp
165.36 547.432 mo
166.203 547.432 li
166.203 548.182 li
165.36 548.182 li
165.36 547.432 li
cp
168.716 547.432 mo
169.56 547.432 li
169.56 548.182 li
168.716 548.182 li
168.716 547.432 li
cp
172.072 547.432 mo
172.916 547.432 li
172.916 548.182 li
172.072 548.182 li
172.072 547.432 li
cp
175.428 547.432 mo
176.272 547.432 li
176.272 548.182 li
175.428 548.182 li
175.428 547.432 li
cp
178.785 547.432 mo
179.628 547.432 li
179.628 548.182 li
178.785 548.182 li
178.785 547.432 li
cp
182.141 547.432 mo
182.985 547.432 li
182.985 548.182 li
182.141 548.182 li
182.141 547.432 li
cp
185.497 547.432 mo
186.341 547.432 li
186.341 548.182 li
185.497 548.182 li
185.497 547.432 li
cp
188.853 547.432 mo
189.697 547.432 li
189.697 548.182 li
188.853 548.182 li
188.853 547.432 li
cp
192.21 547.432 mo
193.053 547.432 li
193.053 548.182 li
192.21 548.182 li
192.21 547.432 li
cp
195.566 547.432 mo
196.41 547.432 li
196.41 548.182 li
195.566 548.182 li
195.566 547.432 li
cp
198.922 547.432 mo
199.766 547.432 li
199.766 548.182 li
198.922 548.182 li
198.922 547.432 li
cp
202.279 547.432 mo
203.122 547.432 li
203.122 548.182 li
202.279 548.182 li
202.279 547.432 li
cp
205.635 547.432 mo
206.478 547.432 li
206.478 548.182 li
205.635 548.182 li
205.635 547.432 li
cp
208.991 547.432 mo
209.835 547.432 li
209.835 548.182 li
208.991 548.182 li
208.991 547.432 li
cp
212.347 547.432 mo
213.191 547.432 li
213.191 548.182 li
212.347 548.182 li
212.347 547.432 li
cp
215.703 547.432 mo
216.547 547.432 li
216.547 548.182 li
215.703 548.182 li
215.703 547.432 li
cp
219.06 547.432 mo
219.903 547.432 li
219.903 548.182 li
219.06 548.182 li
219.06 547.432 li
cp
222.416 547.432 mo
223.26 547.432 li
223.26 548.182 li
222.416 548.182 li
222.416 547.432 li
cp
225.772 547.432 mo
226.616 547.432 li
226.616 548.182 li
225.772 548.182 li
225.772 547.432 li
cp
229.128 547.432 mo
229.972 547.432 li
229.972 548.182 li
229.128 548.182 li
229.128 547.432 li
cp
232.485 547.432 mo
233.328 547.432 li
233.328 548.182 li
232.485 548.182 li
232.485 547.432 li
cp
235.841 547.432 mo
236.685 547.432 li
236.685 548.182 li
235.841 548.182 li
235.841 547.432 li
cp
239.197 547.432 mo
240.041 547.432 li
240.041 548.182 li
239.197 548.182 li
239.197 547.432 li
cp
242.553 547.432 mo
243.397 547.432 li
243.397 548.182 li
242.553 548.182 li
242.553 547.432 li
cp
245.91 547.432 mo
246.753 547.432 li
246.753 548.182 li
245.91 548.182 li
245.91 547.432 li
cp
249.266 547.432 mo
250.11 547.432 li
250.11 548.182 li
249.266 548.182 li
249.266 547.432 li
cp
252.622 547.432 mo
253.466 547.432 li
253.466 548.182 li
252.622 548.182 li
252.622 547.432 li
cp
255.978 547.432 mo
256.822 547.432 li
256.822 548.182 li
255.978 548.182 li
255.978 547.432 li
cp
259.335 547.432 mo
260.178 547.432 li
260.178 548.182 li
259.335 548.182 li
259.335 547.432 li
cp
262.691 547.432 mo
263.535 547.432 li
263.535 548.182 li
262.691 548.182 li
262.691 547.432 li
cp
266.047 547.432 mo
266.891 547.432 li
266.891 548.182 li
266.047 548.182 li
266.047 547.432 li
cp
269.403 547.432 mo
270.247 547.432 li
270.247 548.182 li
269.403 548.182 li
269.403 547.432 li
cp
272.76 547.432 mo
273.603 547.432 li
273.603 548.182 li
272.76 548.182 li
272.76 547.432 li
cp
276.116 547.432 mo
276.96 547.432 li
276.96 548.182 li
276.116 548.182 li
276.116 547.432 li
cp
279.472 547.432 mo
280.316 547.432 li
280.316 548.182 li
279.472 548.182 li
279.472 547.432 li
cp
282.828 547.432 mo
283.672 547.432 li
283.672 548.182 li
282.828 548.182 li
282.828 547.432 li
cp
286.185 547.432 mo
287.028 547.432 li
287.028 548.182 li
286.185 548.182 li
286.185 547.432 li
cp
289.541 547.432 mo
290.385 547.432 li
290.385 548.182 li
289.541 548.182 li
289.541 547.432 li
cp
292.897 547.432 mo
293.741 547.432 li
293.741 548.182 li
292.897 548.182 li
292.897 547.432 li
cp
296.253 547.432 mo
297.097 547.432 li
297.097 548.182 li
296.253 548.182 li
296.253 547.432 li
cp
299.61 547.432 mo
300.453 547.432 li
300.453 548.182 li
299.61 548.182 li
299.61 547.432 li
cp
302.966 547.432 mo
303.81 547.432 li
303.81 548.182 li
302.966 548.182 li
302.966 547.432 li
cp
306.322 547.432 mo
307.166 547.432 li
307.166 548.182 li
306.322 548.182 li
306.322 547.432 li
cp
309.678 547.432 mo
310.522 547.432 li
310.522 548.182 li
309.678 548.182 li
309.678 547.432 li
cp
313.035 547.432 mo
313.878 547.432 li
313.878 548.182 li
313.035 548.182 li
313.035 547.432 li
cp
316.391 547.432 mo
317.235 547.432 li
317.235 548.182 li
316.391 548.182 li
316.391 547.432 li
cp
319.747 547.432 mo
320.591 547.432 li
320.591 548.182 li
319.747 548.182 li
319.747 547.432 li
cp
323.103 547.432 mo
323.947 547.432 li
323.947 548.182 li
323.103 548.182 li
323.103 547.432 li
cp
326.46 547.432 mo
327.303 547.432 li
327.303 548.182 li
326.46 548.182 li
326.46 547.432 li
cp
329.816 547.432 mo
330.66 547.432 li
330.66 548.182 li
329.816 548.182 li
329.816 547.432 li
cp
333.172 547.432 mo
334.016 547.432 li
334.016 548.182 li
333.172 548.182 li
333.172 547.432 li
cp
336.528 547.432 mo
337.372 547.432 li
337.372 548.182 li
336.528 548.182 li
336.528 547.432 li
cp
339.885 547.432 mo
340.728 547.432 li
340.728 548.182 li
339.885 548.182 li
339.885 547.432 li
cp
343.241 547.432 mo
344.085 547.432 li
344.085 548.182 li
343.241 548.182 li
343.241 547.432 li
cp
346.597 547.432 mo
347.441 547.432 li
347.441 548.182 li
346.597 548.182 li
346.597 547.432 li
cp
349.953 547.432 mo
350.797 547.432 li
350.797 548.182 li
349.953 548.182 li
349.953 547.432 li
cp
353.31 547.432 mo
354.153 547.432 li
354.153 548.182 li
353.31 548.182 li
353.31 547.432 li
cp
356.666 547.432 mo
357.51 547.432 li
357.51 548.182 li
356.666 548.182 li
356.666 547.432 li
cp
360.022 547.432 mo
360.866 547.432 li
360.866 548.182 li
360.022 548.182 li
360.022 547.432 li
cp
363.378 547.432 mo
364.222 547.432 li
364.222 548.182 li
363.378 548.182 li
363.378 547.432 li
cp
366.735 547.432 mo
367.578 547.432 li
367.578 548.182 li
366.735 548.182 li
366.735 547.432 li
cp
370.091 547.432 mo
370.935 547.432 li
370.935 548.182 li
370.091 548.182 li
370.091 547.432 li
cp
373.447 547.432 mo
374.291 547.432 li
374.291 548.182 li
373.447 548.182 li
373.447 547.432 li
cp
376.803 547.432 mo
377.647 547.432 li
377.647 548.182 li
376.803 548.182 li
376.803 547.432 li
cp
380.16 547.432 mo
381.003 547.432 li
381.003 548.182 li
380.16 548.182 li
380.16 547.432 li
cp
383.516 547.432 mo
384.36 547.432 li
384.36 548.182 li
383.516 548.182 li
383.516 547.432 li
cp
386.872 547.432 mo
387.716 547.432 li
387.716 548.182 li
386.872 548.182 li
386.872 547.432 li
cp
390.228 547.432 mo
391.072 547.432 li
391.072 548.182 li
390.228 548.182 li
390.228 547.432 li
cp
393.585 547.432 mo
394.428 547.432 li
394.428 548.182 li
393.585 548.182 li
393.585 547.432 li
cp
396.941 547.432 mo
397.785 547.432 li
397.785 548.182 li
396.941 548.182 li
396.941 547.432 li
cp
400.297 547.432 mo
401.141 547.432 li
401.141 548.182 li
400.297 548.182 li
400.297 547.432 li
cp
403.653 547.432 mo
404.497 547.432 li
404.497 548.182 li
403.653 548.182 li
403.653 547.432 li
cp
407.01 547.432 mo
407.853 547.432 li
407.853 548.182 li
407.01 548.182 li
407.01 547.432 li
cp
410.366 547.432 mo
411.21 547.432 li
411.21 548.182 li
410.366 548.182 li
410.366 547.432 li
cp
413.722 547.432 mo
414.566 547.432 li
414.566 548.182 li
413.722 548.182 li
413.722 547.432 li
cp
417.078 547.432 mo
417.922 547.432 li
417.922 548.182 li
417.078 548.182 li
417.078 547.432 li
cp
420.435 547.432 mo
421.278 547.432 li
421.278 548.182 li
420.435 548.182 li
420.435 547.432 li
cp
423.791 547.432 mo
424.635 547.432 li
424.635 548.182 li
423.791 548.182 li
423.791 547.432 li
cp
427.147 547.432 mo
427.991 547.432 li
427.991 548.182 li
427.147 548.182 li
427.147 547.432 li
cp
430.503 547.432 mo
431.347 547.432 li
431.347 548.182 li
430.503 548.182 li
430.503 547.432 li
cp
433.86 547.432 mo
434.703 547.432 li
434.703 548.182 li
433.86 548.182 li
433.86 547.432 li
cp
437.216 547.432 mo
438.06 547.432 li
438.06 548.182 li
437.216 548.182 li
437.216 547.432 li
cp
440.572 547.432 mo
441.416 547.432 li
441.416 548.182 li
440.572 548.182 li
440.572 547.432 li
cp
443.928 547.432 mo
444.772 547.432 li
444.772 548.182 li
443.928 548.182 li
443.928 547.432 li
cp
447.285 547.432 mo
448.128 547.432 li
448.128 548.182 li
447.285 548.182 li
447.285 547.432 li
cp
450.641 547.432 mo
451.485 547.432 li
451.485 548.182 li
450.641 548.182 li
450.641 547.432 li
cp
454.05 547.446 mo
454.394 547.481 454.717 547.583 455.018 547.75 cv
454.653 548.406 li
454.442 548.288 454.216 548.217 453.974 548.192 cv
454.05 547.446 li
cp
456.315 550.23 mo
456.315 551.073 li
455.565 551.073 li
455.565 550.23 li
456.315 550.23 li
cp
456.315 553.586 mo
456.315 554.43 li
455.565 554.43 li
455.565 553.586 li
456.315 553.586 li
cp
456.315 556.942 mo
456.315 557.786 li
455.565 557.786 li
455.565 556.942 li
456.315 556.942 li
cp
456.315 560.298 mo
456.315 560.535 li
456.315 560.788 456.278 561.035 456.205 561.275 cv
455.488 561.056 li
455.539 560.888 455.565 560.714 455.565 560.535 cv
455.565 560.298 li
456.315 560.298 li
cp
454.009 563.053 mo
453.936 563.059 453.862 563.063 453.787 563.063 cv
453.12 563.063 li
453.12 562.313 li
453.787 562.313 li
453.84 562.313 453.893 562.31 453.945 562.306 cv
454.009 563.053 li
cp
450.608 563.063 mo
449.764 563.063 li
449.764 562.313 li
450.608 562.313 li
450.608 563.063 li
cp
447.252 563.063 mo
446.408 563.063 li
446.408 562.313 li
447.252 562.313 li
447.252 563.063 li
cp
443.895 563.063 mo
443.052 563.063 li
443.052 562.313 li
443.895 562.313 li
443.895 563.063 li
cp
440.539 563.063 mo
439.695 563.063 li
439.695 562.313 li
440.539 562.313 li
440.539 563.063 li
cp
437.183 563.063 mo
436.339 563.063 li
436.339 562.313 li
437.183 562.313 li
437.183 563.063 li
cp
433.827 563.063 mo
432.983 563.063 li
432.983 562.313 li
433.827 562.313 li
433.827 563.063 li
cp
430.47 563.063 mo
429.627 563.063 li
429.627 562.313 li
430.47 562.313 li
430.47 563.063 li
cp
427.114 563.063 mo
426.27 563.063 li
426.27 562.313 li
427.114 562.313 li
427.114 563.063 li
cp
423.758 563.063 mo
422.914 563.063 li
422.914 562.313 li
423.758 562.313 li
423.758 563.063 li
cp
420.402 563.063 mo
419.558 563.063 li
419.558 562.313 li
420.402 562.313 li
420.402 563.063 li
cp
417.045 563.063 mo
416.202 563.063 li
416.202 562.313 li
417.045 562.313 li
417.045 563.063 li
cp
413.689 563.063 mo
412.845 563.063 li
412.845 562.313 li
413.689 562.313 li
413.689 563.063 li
cp
410.333 563.063 mo
409.489 563.063 li
409.489 562.313 li
410.333 562.313 li
410.333 563.063 li
cp
406.977 563.063 mo
406.133 563.063 li
406.133 562.313 li
406.977 562.313 li
406.977 563.063 li
cp
403.62 563.063 mo
402.777 563.063 li
402.777 562.313 li
403.62 562.313 li
403.62 563.063 li
cp
400.264 563.063 mo
399.42 563.063 li
399.42 562.313 li
400.264 562.313 li
400.264 563.063 li
cp
396.908 563.063 mo
396.064 563.063 li
396.064 562.313 li
396.908 562.313 li
396.908 563.063 li
cp
393.552 563.063 mo
392.708 563.063 li
392.708 562.313 li
393.552 562.313 li
393.552 563.063 li
cp
390.195 563.063 mo
389.352 563.063 li
389.352 562.313 li
390.195 562.313 li
390.195 563.063 li
cp
386.839 563.063 mo
385.995 563.063 li
385.995 562.313 li
386.839 562.313 li
386.839 563.063 li
cp
383.483 563.063 mo
382.639 563.063 li
382.639 562.313 li
383.483 562.313 li
383.483 563.063 li
cp
380.127 563.063 mo
379.283 563.063 li
379.283 562.313 li
380.127 562.313 li
380.127 563.063 li
cp
376.77 563.063 mo
375.927 563.063 li
375.927 562.313 li
376.77 562.313 li
376.77 563.063 li
cp
373.414 563.063 mo
372.57 563.063 li
372.57 562.313 li
373.414 562.313 li
373.414 563.063 li
cp
370.058 563.063 mo
369.214 563.063 li
369.214 562.313 li
370.058 562.313 li
370.058 563.063 li
cp
366.702 563.063 mo
365.858 563.063 li
365.858 562.313 li
366.702 562.313 li
366.702 563.063 li
cp
363.345 563.063 mo
362.502 563.063 li
362.502 562.313 li
363.345 562.313 li
363.345 563.063 li
cp
359.989 563.063 mo
359.145 563.063 li
359.145 562.313 li
359.989 562.313 li
359.989 563.063 li
cp
356.633 563.063 mo
355.789 563.063 li
355.789 562.313 li
356.633 562.313 li
356.633 563.063 li
cp
353.277 563.063 mo
352.433 563.063 li
352.433 562.313 li
353.277 562.313 li
353.277 563.063 li
cp
349.92 563.063 mo
349.077 563.063 li
349.077 562.313 li
349.92 562.313 li
349.92 563.063 li
cp
346.564 563.063 mo
345.72 563.063 li
345.72 562.313 li
346.564 562.313 li
346.564 563.063 li
cp
343.208 563.063 mo
342.364 563.063 li
342.364 562.313 li
343.208 562.313 li
343.208 563.063 li
cp
339.852 563.063 mo
339.008 563.063 li
339.008 562.313 li
339.852 562.313 li
339.852 563.063 li
cp
336.495 563.063 mo
335.652 563.063 li
335.652 562.313 li
336.495 562.313 li
336.495 563.063 li
cp
333.139 563.063 mo
332.295 563.063 li
332.295 562.313 li
333.139 562.313 li
333.139 563.063 li
cp
329.783 563.063 mo
328.939 563.063 li
328.939 562.313 li
329.783 562.313 li
329.783 563.063 li
cp
326.427 563.063 mo
325.583 563.063 li
325.583 562.313 li
326.427 562.313 li
326.427 563.063 li
cp
323.07 563.063 mo
322.227 563.063 li
322.227 562.313 li
323.07 562.313 li
323.07 563.063 li
cp
319.714 563.063 mo
318.87 563.063 li
318.87 562.313 li
319.714 562.313 li
319.714 563.063 li
cp
316.358 563.063 mo
315.514 563.063 li
315.514 562.313 li
316.358 562.313 li
316.358 563.063 li
cp
313.002 563.063 mo
312.158 563.063 li
312.158 562.313 li
313.002 562.313 li
313.002 563.063 li
cp
309.645 563.063 mo
308.802 563.063 li
308.802 562.313 li
309.645 562.313 li
309.645 563.063 li
cp
306.289 563.063 mo
305.445 563.063 li
305.445 562.313 li
306.289 562.313 li
306.289 563.063 li
cp
302.933 563.063 mo
302.089 563.063 li
302.089 562.313 li
302.933 562.313 li
302.933 563.063 li
cp
299.577 563.063 mo
298.733 563.063 li
298.733 562.313 li
299.577 562.313 li
299.577 563.063 li
cp
296.22 563.063 mo
295.377 563.063 li
295.377 562.313 li
296.22 562.313 li
296.22 563.063 li
cp
292.864 563.063 mo
292.02 563.063 li
292.02 562.313 li
292.864 562.313 li
292.864 563.063 li
cp
289.508 563.063 mo
288.664 563.063 li
288.664 562.313 li
289.508 562.313 li
289.508 563.063 li
cp
286.152 563.063 mo
285.308 563.063 li
285.308 562.313 li
286.152 562.313 li
286.152 563.063 li
cp
282.795 563.063 mo
281.952 563.063 li
281.952 562.313 li
282.795 562.313 li
282.795 563.063 li
cp
279.439 563.063 mo
278.595 563.063 li
278.595 562.313 li
279.439 562.313 li
279.439 563.063 li
cp
276.083 563.063 mo
275.239 563.063 li
275.239 562.313 li
276.083 562.313 li
276.083 563.063 li
cp
272.727 563.063 mo
271.883 563.063 li
271.883 562.313 li
272.727 562.313 li
272.727 563.063 li
cp
269.37 563.063 mo
268.527 563.063 li
268.527 562.313 li
269.37 562.313 li
269.37 563.063 li
cp
266.014 563.063 mo
265.17 563.063 li
265.17 562.313 li
266.014 562.313 li
266.014 563.063 li
cp
262.658 563.063 mo
261.814 563.063 li
261.814 562.313 li
262.658 562.313 li
262.658 563.063 li
cp
259.302 563.063 mo
258.458 563.063 li
258.458 562.313 li
259.302 562.313 li
259.302 563.063 li
cp
255.945 563.063 mo
255.102 563.063 li
255.102 562.313 li
255.945 562.313 li
255.945 563.063 li
cp
252.589 563.063 mo
251.745 563.063 li
251.745 562.313 li
252.589 562.313 li
252.589 563.063 li
cp
249.233 563.063 mo
248.389 563.063 li
248.389 562.313 li
249.233 562.313 li
249.233 563.063 li
cp
245.877 563.063 mo
245.033 563.063 li
245.033 562.313 li
245.877 562.313 li
245.877 563.063 li
cp
242.52 563.063 mo
241.677 563.063 li
241.677 562.313 li
242.52 562.313 li
242.52 563.063 li
cp
239.164 563.063 mo
238.32 563.063 li
238.32 562.313 li
239.164 562.313 li
239.164 563.063 li
cp
235.808 563.063 mo
234.964 563.063 li
234.964 562.313 li
235.808 562.313 li
235.808 563.063 li
cp
232.452 563.063 mo
231.608 563.063 li
231.608 562.313 li
232.452 562.313 li
232.452 563.063 li
cp
229.095 563.063 mo
228.252 563.063 li
228.252 562.313 li
229.095 562.313 li
229.095 563.063 li
cp
225.739 563.063 mo
224.895 563.063 li
224.895 562.313 li
225.739 562.313 li
225.739 563.063 li
cp
222.383 563.063 mo
221.539 563.063 li
221.539 562.313 li
222.383 562.313 li
222.383 563.063 li
cp
219.027 563.063 mo
218.183 563.063 li
218.183 562.313 li
219.027 562.313 li
219.027 563.063 li
cp
215.67 563.063 mo
214.827 563.063 li
214.827 562.313 li
215.67 562.313 li
215.67 563.063 li
cp
212.314 563.063 mo
211.47 563.063 li
211.47 562.313 li
212.314 562.313 li
212.314 563.063 li
cp
208.958 563.063 mo
208.114 563.063 li
208.114 562.313 li
208.958 562.313 li
208.958 563.063 li
cp
205.602 563.063 mo
204.758 563.063 li
204.758 562.313 li
205.602 562.313 li
205.602 563.063 li
cp
202.245 563.063 mo
201.402 563.063 li
201.402 562.313 li
202.245 562.313 li
202.245 563.063 li
cp
198.889 563.063 mo
198.045 563.063 li
198.045 562.313 li
198.889 562.313 li
198.889 563.063 li
cp
195.533 563.063 mo
194.689 563.063 li
194.689 562.313 li
195.533 562.313 li
195.533 563.063 li
cp
192.177 563.063 mo
191.333 563.063 li
191.333 562.313 li
192.177 562.313 li
192.177 563.063 li
cp
188.82 563.063 mo
187.977 563.063 li
187.977 562.313 li
188.82 562.313 li
188.82 563.063 li
cp
185.464 563.063 mo
184.62 563.063 li
184.62 562.313 li
185.464 562.313 li
185.464 563.063 li
cp
182.108 563.063 mo
181.264 563.063 li
181.264 562.313 li
182.108 562.313 li
182.108 563.063 li
cp
178.752 563.063 mo
177.908 563.063 li
177.908 562.313 li
178.752 562.313 li
178.752 563.063 li
cp
175.395 563.063 mo
174.552 563.063 li
174.552 562.313 li
175.395 562.313 li
175.395 563.063 li
cp
172.039 563.063 mo
171.195 563.063 li
171.195 562.313 li
172.039 562.313 li
172.039 563.063 li
cp
168.683 563.063 mo
167.839 563.063 li
167.839 562.313 li
168.683 562.313 li
168.683 563.063 li
cp
165.327 563.063 mo
164.483 563.063 li
164.483 562.313 li
165.327 562.313 li
165.327 563.063 li
cp
161.97 563.063 mo
161.127 563.063 li
161.127 562.313 li
161.97 562.313 li
161.97 563.063 li
cp
158.614 563.063 mo
157.77 563.063 li
157.77 562.313 li
158.614 562.313 li
158.614 563.063 li
cp
155.258 563.063 mo
154.414 563.063 li
154.414 562.313 li
155.258 562.313 li
155.258 563.063 li
cp
151.902 563.063 mo
151.058 563.063 li
151.058 562.313 li
151.902 562.313 li
151.902 563.063 li
cp
148.545 563.063 mo
147.702 563.063 li
147.702 562.313 li
148.545 562.313 li
148.545 563.063 li
cp
145.189 563.063 mo
144.345 563.063 li
144.345 562.313 li
145.189 562.313 li
145.189 563.063 li
cp
141.833 563.063 mo
140.989 563.063 li
140.989 562.313 li
141.833 562.313 li
141.833 563.063 li
cp
138.477 563.063 mo
137.633 563.063 li
137.633 562.313 li
138.477 562.313 li
138.477 563.063 li
cp
135.12 563.063 mo
134.277 563.063 li
134.277 562.313 li
135.12 562.313 li
135.12 563.063 li
cp
131.764 563.063 mo
130.92 563.063 li
130.92 562.313 li
131.764 562.313 li
131.764 563.063 li
cp
128.408 563.063 mo
127.564 563.063 li
127.564 562.313 li
128.408 562.313 li
128.408 563.063 li
cp
125.052 563.063 mo
124.208 563.063 li
124.208 562.313 li
125.052 562.313 li
125.052 563.063 li
cp
121.695 563.063 mo
120.852 563.063 li
120.852 562.313 li
121.695 562.313 li
121.695 563.063 li
cp
118.339 563.063 mo
117.495 563.063 li
117.495 562.313 li
118.339 562.313 li
118.339 563.063 li
cp
114.983 563.063 mo
114.139 563.063 li
114.139 562.313 li
114.983 562.313 li
114.983 563.063 li
cp
111.627 563.063 mo
110.783 563.063 li
110.783 562.313 li
111.627 562.313 li
111.627 563.063 li
cp
108.27 563.063 mo
107.427 563.063 li
107.427 562.313 li
108.27 562.313 li
108.27 563.063 li
cp
104.914 563.063 mo
104.07 563.063 li
104.07 562.313 li
104.914 562.313 li
104.914 563.063 li
cp
101.558 563.063 mo
100.714 563.063 li
100.714 562.313 li
101.558 562.313 li
101.558 563.063 li
cp
98.2017 563.063 mo
97.3579 563.063 li
97.3579 562.313 li
98.2017 562.313 li
98.2017 563.063 li
cp
94.8455 563.063 mo
94.0017 563.063 li
94.0017 562.313 li
94.8455 562.313 li
94.8455 563.063 li
cp
91.4892 563.063 mo
91.4624 563.063 li
91.1219 563.063 90.7962 562.997 90.4852 562.868 cv
90.7742 562.176 li
90.9927 562.267 91.2221 562.313 91.4624 562.313 cv
91.4892 562.313 li
91.4892 563.063 li
cp
88.9349 560.502 mo
88.9349 559.658 li
89.6849 559.658 li
89.6849 560.502 li
88.9349 560.502 li
cp
88.9349 557.146 mo
88.9349 556.302 li
89.6849 556.302 li
89.6849 557.146 li
88.9349 557.146 li
cp
88.9349 553.789 mo
88.9349 552.946 li
89.6849 552.946 li
89.6849 553.789 li
88.9349 553.789 li
cp
88.9349 550.433 mo
88.9349 549.96 li
88.9349 549.608 89.004 549.273 89.1422 548.953 cv
89.8306 549.251 li
89.7335 549.475 89.6849 549.712 89.6849 549.96 cv
89.6849 550.433 li
88.9349 550.433 li
cp
.33872 .685634 1 .2963 cmyk
f
.75 lw
311.527 562.957 mo
294.982 581.002 285.622 602.13 310.822 628.8 cv
.428534 .348058 .352331 .0131533 cmyk
@
304.128 625.432 mo
307.223 626.591 309.714 627.984 311.6 629.61 cv
310.038 627.671 308.729 625.135 307.675 622.002 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 311.6 629.61 ]ct
@
grestore newpath
.75 lw
126.082 411.203 mo
227.625 459.81 273.375 534.81 304.312 637.185 cv
.107546 1 1 .0573129 cmyk
@
299.58 630.051 mo
301.802 632.498 303.38 634.876 304.312 637.185 cv
303.811 634.746 303.808 631.892 304.304 628.624 cv
1 lw
gsave
[-.216899 -.717952 .717952 -.216899 304.312 637.185 ]ct
@
grestore newpath
.75 lw
351.06 599.557 mo
404.31 599.557 li
.0299992 .399451 1 0 cmyk
@
397.615 602.028 mo
400.6 600.608 403.332 599.785 405.812 599.56 cv
403.332 599.335 400.6 598.513 397.615 597.093 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 405.812 599.56 ]ct
@
grestore newpath
.75 lw
101.4 461.513 mo
101.317 488.182 li
.428534 .348058 .352331 .0131533 cmyk
@
98.8707 481.48 mo
100.281 484.469 101.095 487.204 101.312 489.685 cv
101.545 487.206 102.376 484.476 103.806 481.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 101.312 489.685 ]ct
@
grestore newpath
.75 lw
311.4 461.513 mo
311.317 488.182 li
@
308.871 481.48 mo
310.281 484.469 311.095 487.204 311.312 489.685 cv
311.545 487.206 312.376 484.476 313.806 481.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 311.312 489.685 ]ct
@
grestore newpath
.75 lw
416.4 461.513 mo
416.317 488.182 li
@
413.871 481.48 mo
415.281 484.469 416.095 487.204 416.312 489.685 cv
416.545 487.206 417.376 484.476 418.806 481.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 416.312 489.685 ]ct
@
grestore newpath
.75 lw
521.4 461.513 mo
521.31 591.307 li
@
518.851 584.611 mo
520.268 587.597 521.089 590.33 521.312 592.81 cv
521.539 590.33 522.363 587.598 523.786 584.614 cv
1 lw
gsave
[.000523599 -.75 .75 .000523599 521.312 592.81 ]ct
@
grestore newpath
.75 lw
101.4 420.262 mo
101.317 446.932 li
@
98.8707 440.23 mo
100.281 443.219 101.095 445.954 101.312 448.435 cv
101.545 445.956 102.376 443.226 103.806 440.245 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 101.312 448.435 ]ct
@
grestore newpath
.75 lw
521.55 606.112 mo
521.595 628.11 li
@
519.115 621.418 mo
520.542 624.4 521.37 627.13 521.6 629.61 cv
521.82 627.13 522.637 624.395 524.05 621.407 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 521.6 629.61 ]ct
@
grestore newpath
.75 lw
415.8 606.112 mo
415.845 628.11 li
@
413.365 621.418 mo
414.792 624.4 415.62 627.13 415.85 629.61 cv
416.07 627.13 416.887 624.395 418.3 621.407 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 415.85 629.61 ]ct
@
grestore newpath
.75 lw
351.06 599.557 mo
407.842 624.682 465.3 625.552 510.202 599.453 cv
.0299992 .399451 1 0 cmyk
@
505.063 605.346 mo
506.915 602.607 508.852 600.512 510.875 599.06 cv
508.624 600.124 505.852 600.802 502.559 601.093 cv
1 lw
gsave
[-.646288 .380541 -.380541 -.646288 510.875 599.06 ]ct
@
grestore newpath
.75 lw
126.082 411.203 mo
252.082 450.705 404.377 526.56 411.877 630.06 cv
.107546 1 1 .0573129 cmyk
@
408.822 622.062 mo
410.454 624.937 411.471 627.603 411.875 630.06 cv
411.92 627.57 412.543 624.786 413.744 621.706 cv
1 lw
gsave
[-.0541453 -.748043 .748043 -.0541453 411.875 630.06 ]ct
@
grestore newpath
.75 lw
126.082 411.203 mo
262.582 439.455 519.652 498.757 517.627 629.557 cv
@
515.285 621.325 mo
516.658 624.332 517.438 627.077 517.625 629.56 cv
517.888 627.084 518.753 624.364 520.219 621.402 cv
1 lw
gsave
[.0116496 -.74991 .74991 .0116496 517.625 629.56 ]ct
@
grestore newpath
.75 lw
141.81 455.557 mo
195.06 455.557 li
.0299992 .399451 1 0 cmyk
@
188.365 458.027 mo
191.35 456.607 194.082 455.785 196.562 455.56 cv
194.082 455.335 191.35 454.512 188.365 453.092 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 196.562 455.56 ]ct
@
grestore newpath
grestore
gsave
-180.75 326.31 mo
1475.25 326.31 li
1475.25 711.81 li
-180.75 711.81 li
cp
eclp
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
304.699 641.767 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
313.922 636.81 mo
(!)sh
320.357 636.81 mo
(")sh
323.82 636.81 mo
(#)sh
327.773 636.81 mo
($)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
94.0195 558.517 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
115.711 558.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
118.886 558.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
103.242 553.56 mo
(")sh
107.196 553.56 mo
(#)sh
110.819 553.56 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
126.34 561.06 mo
(!)sh
130.793 561.06 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
92.2734 602.31 mo
(%)sh
98.1639 602.31 mo
(")sh
103.812 602.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
108.762 602.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
114.48 602.31 mo
(')sh
119.427 602.31 mo
(\()sh
125.79 602.31 mo
(\))sh
132.866 602.31 mo
(#)sh
93.7734 501.517 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
116.684 501.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
119.858 501.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
106.523 496.56 mo
(&)sh
109.986 496.56 mo
(+)sh
113.449 496.56 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
127.312 504.06 mo
(!)sh
131.766 504.06 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
112.509 531.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
103.875 579.81 mo
(%)sh
108.329 579.81 mo
(&)sh
102.973 522.81 mo
(%)sh
107.426 522.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
199.019 558.517 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
220.711 558.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
223.886 558.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
208.242 553.56 mo
(")sh
212.196 553.56 mo
(#)sh
215.819 553.56 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
231.34 560.31 mo
(!)sh
235.793 560.31 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
197.273 601.56 mo
(%)sh
203.164 601.56 mo
(")sh
208.812 601.56 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
213.762 601.56 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
219.48 601.56 mo
(')sh
224.427 601.56 mo
(\()sh
230.79 601.56 mo
(\))sh
237.866 601.56 mo
(#)sh
198.773 500.767 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
221.684 500.767 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
224.858 500.767 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
211.523 495.81 mo
(&)sh
214.986 495.81 mo
(+)sh
218.449 495.81 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
232.312 503.31 mo
(#)sh
236.766 503.31 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
217.509 531.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
208.875 579.06 mo
(%)sh
213.329 579.06 mo
(&)sh
207.973 522.81 mo
(%)sh
212.426 522.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
409.019 559.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
430.711 559.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
433.886 559.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
418.242 554.31 mo
(")sh
422.196 554.31 mo
(#)sh
425.819 554.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
441.34 561.06 mo
(#)sh
445.793 561.06 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
407.273 602.31 mo
(%)sh
413.164 602.31 mo
(")sh
418.812 602.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
423.762 602.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
429.48 602.31 mo
(')sh
434.427 602.31 mo
(\()sh
440.79 602.31 mo
(\))sh
447.866 602.31 mo
(#)sh
408.773 501.517 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
431.683 501.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
434.858 501.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
421.523 496.56 mo
(&)sh
424.986 496.56 mo
(+)sh
428.449 496.56 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
442.312 504.06 mo
(#)sh
446.766 504.06 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
427.509 531.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
418.875 579.81 mo
(%)sh
423.328 579.81 mo
(&)sh
417.973 522.81 mo
(%)sh
422.426 522.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
304.394 559.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
326.086 559.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
329.261 559.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
313.617 554.31 mo
(")sh
317.571 554.31 mo
(#)sh
321.194 554.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
336.715 561.06 mo
(#)sh
341.168 561.06 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
302.648 602.31 mo
(%)sh
308.539 602.31 mo
(")sh
314.187 602.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
319.137 602.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
324.855 602.31 mo
(')sh
329.802 602.31 mo
(\()sh
336.165 602.31 mo
(\))sh
343.241 602.31 mo
(#)sh
304.148 501.517 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
327.058 501.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
330.233 501.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
316.898 496.56 mo
(&)sh
320.361 496.56 mo
(+)sh
323.824 496.56 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
337.687 504.06 mo
(!)sh
342.141 504.06 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
323.259 531.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
314.25 579.81 mo
(%)sh
318.703 579.81 mo
(&)sh
313.348 522.81 mo
(%)sh
317.801 522.81 mo
(&)sh
.982818 .740505 .203769 .0532235 cmyk
UUNUIP+*1 [8.925 0 0 -8.925 0 0 ]msf
294.07 332.31 mo
( )sh
298.024 332.31 mo
(!)sh
302.147 332.31 mo
(")sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
317.918 333.06 mo
( )sh
321.381 333.06 mo
(!)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
372.516 332.31 mo
( )sh
376.139 332.31 mo
(!)sh
380.093 332.31 mo
(")sh
385.046 332.31 mo
(#)sh
388.509 332.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
392.238 333.81 mo
(%)sh
395.125 333.81 mo
(!)sh
397.892 333.81 mo
(#)sh
400.316 333.81 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
341.695 335.31 mo
( )sh
345.319 335.31 mo
(!)sh
349.273 335.31 mo
(")sh
354.226 335.31 mo
(#)sh
357.689 335.31 mo
($)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
272.695 522.06 mo
( )sh
276.158 522.06 mo
(!)sh
UUNUIV+*1 [8.925 0 0 -8.925 0 0 ]msf
282.593 522.06 mo
( )sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
287.789 522.06 mo
(&)sh
291.252 522.06 mo
(-)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
284.824 522.06 mo
($)sh
296.168 522.06 mo
(%)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
250.723 580.56 mo
( )sh
254.346 580.56 mo
(!)sh
258.3 580.56 mo
(")sh
263.253 580.56 mo
(#)sh
266.716 580.56 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
270.445 582.06 mo
(%)sh
273.332 582.06 mo
(!)sh
276.099 582.06 mo
(#)sh
278.523 582.06 mo
($)sh
.791409 .327764 1 .227756 cmyk
UUNUIX+*1 [8.925 0 0 -8.925 0 0 ]msf
54.6796 499.56 mo
( )sh
59.1332 499.56 mo
(!)sh
63.087 499.56 mo
(")sh
66.0501 499.56 mo
(")sh
69.0132 499.56 mo
(#)sh
72.476 499.56 mo
($)sh
75.9389 499.56 mo
(%)sh
UUNUIX+*1 [6.2475 0 0 -6.2475 0 0 ]msf
81.1523 500.31 mo
($)sh
83.5763 500.31 mo
(#)sh
86.0003 500.31 mo
(&)sh
.33872 .685634 1 .2963 cmyk
UUNUIZ+*1 [8.925 0 0 -8.925 0 0 ]msf
51.6796 558.06 mo
( )sh
56.1332 558.06 mo
(!)sh
60.087 558.06 mo
(")sh
63.0501 558.06 mo
(")sh
66.0132 558.06 mo
(#)sh
69.476 558.06 mo
($)sh
72.9389 558.06 mo
(%)sh
UUNUIZ+*1 [6.2475 0 0 -6.2475 0 0 ]msf
78.1523 558.81 mo
(!)sh
80.9199 558.81 mo
(&)sh
83.4564 558.81 mo
(')sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
286.5 583.56 mo
(%)sh
290.953 583.56 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
194.824 393.81 mo
(.)sh
203.098 393.81 mo
(/)sh
210.097 393.81 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
219.013 393.81 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
221.871 393.81 mo
(1)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
230.789 393.81 mo
(&)sh
235.934 393.81 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
238.791 393.81 mo
(%)sh
244.092 393.81 mo
(,)sh
247.271 393.81 mo
(2)sh
252.354 393.81 mo
(#)sh
257.013 393.81 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
262.383 393.81 mo
( )sh
265.241 393.81 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
275.016 394.56 mo
(.)sh
283.289 394.56 mo
(/)sh
290.289 394.56 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
299.205 394.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
302.062 394.56 mo
(\))sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
308.437 394.56 mo
(&)sh
313.582 394.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
316.439 394.56 mo
(%)sh
321.741 394.56 mo
(,)sh
324.919 394.56 mo
(2)sh
330.003 394.56 mo
(#)sh
334.661 394.56 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
340.032 394.56 mo
( )sh
342.889 394.56 mo
(!)sh
348.615 394.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
92.9999 633.81 mo
(4)sh
96.8096 633.81 mo
(5)sh
102.536 633.81 mo
(&)sh
106.988 633.81 mo
(+)sh
111.44 633.81 mo
(")sh
116.524 633.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
122.25 633.81 mo
( )sh
125.107 633.81 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
198 633.81 mo
(4)sh
201.81 633.81 mo
(5)sh
207.536 633.81 mo
(&)sh
211.988 633.81 mo
(+)sh
216.44 633.81 mo
(")sh
221.524 633.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
227.25 633.81 mo
( )sh
230.107 633.81 mo
(#)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
303.246 423.06 mo
(4)sh
307.056 423.06 mo
(5)sh
312.782 423.06 mo
(&)sh
317.234 423.06 mo
(+)sh
321.686 423.06 mo
(")sh
326.77 423.06 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
332.496 423.06 mo
( )sh
335.353 423.06 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
408.246 423.81 mo
(4)sh
412.056 423.81 mo
(5)sh
417.782 423.81 mo
(&)sh
422.234 423.81 mo
(+)sh
426.686 423.81 mo
(")sh
431.77 423.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
437.496 423.81 mo
( )sh
440.353 423.81 mo
(#)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
368.918 597.06 mo
( )sh
372.381 597.06 mo
(!)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
512.871 423.06 mo
(4)sh
516.681 423.06 mo
(5)sh
522.407 423.06 mo
(&)sh
526.859 423.06 mo
(+)sh
531.311 423.06 mo
(")sh
536.395 423.06 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
542.121 423.06 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
544.978 423.06 mo
(4)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
549.129 425.31 mo
(')sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
516.691 438.06 mo
(4)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
525.551 438.06 mo
( )sh
UUNUIN+*1 [11.475 0 0 -11.475 0 0 ]msf
531.844 438.06 mo
(!)sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
542.965 438.06 mo
( )sh
550.791 438.06 mo
(!)sh
556.517 438.06 mo
(")sh
560.418 438.06 mo
(#)sh
563.138 438.06 mo
($)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
569.047 438.06 mo
(\()sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
574.773 438.06 mo
(%)sh
579.157 438.06 mo
(&)sh
581.876 438.06 mo
(')sh
586.845 438.06 mo
(\()sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
512.871 438.06 mo
($)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
520.851 440.31 mo
(')sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
591.937 438.06 mo
(%)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
512.648 602.31 mo
(%)sh
518.539 602.31 mo
(")sh
524.187 602.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
529.137 602.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
534.855 602.31 mo
(')sh
539.802 602.31 mo
(\()sh
546.165 602.31 mo
(\))sh
553.241 602.31 mo
(#)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
92.6249 417.517 mo
(')sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
105.375 412.56 mo
(!)sh
111.81 412.56 mo
(")sh
115.273 412.56 mo
(#)sh
119.227 412.56 mo
($)sh
210.293 474.81 mo
(%)sh
214.746 474.81 mo
(&)sh
104.543 474.81 mo
(%)sh
108.996 474.81 mo
(&)sh
314.543 474.81 mo
(%)sh
318.996 474.81 mo
(&)sh
419.543 474.81 mo
(%)sh
423.996 474.81 mo
(&)sh
524.543 513.81 mo
(%)sh
528.996 513.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-171.75 346.56 mo
(\(0,0,0\)<>\(1,0,0\))sh
-171.75 362.31 mo
(\(0,0,0\)<>\(1,0,1\))sh
-171.75 378.06 mo
(\(0,0,0\)<>\(1,0,2\))sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
512.648 458.31 mo
(\()sh
518.539 458.31 mo
(#)sh
524.187 458.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
529.137 458.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
534.855 458.31 mo
(*)sh
539.802 458.31 mo
(+)sh
546.165 458.31 mo
(,)sh
553.241 458.31 mo
(-)sh
407.648 458.31 mo
(\()sh
413.539 458.31 mo
(#)sh
419.187 458.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
424.137 458.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
429.855 458.31 mo
(*)sh
434.802 458.31 mo
(+)sh
441.165 458.31 mo
(,)sh
448.241 458.31 mo
(-)sh
302.648 458.31 mo
(\()sh
308.539 458.31 mo
(#)sh
314.187 458.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
319.137 458.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
324.855 458.31 mo
(*)sh
329.802 458.31 mo
(+)sh
336.165 458.31 mo
(,)sh
343.241 458.31 mo
(-)sh
197.648 458.31 mo
(\()sh
203.539 458.31 mo
(#)sh
209.187 458.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
214.137 458.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
219.855 458.31 mo
(*)sh
224.802 458.31 mo
(+)sh
231.165 458.31 mo
(,)sh
238.241 458.31 mo
(-)sh
92.6484 458.31 mo
(\()sh
98.5389 458.31 mo
(#)sh
104.187 458.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
109.137 458.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
114.855 458.31 mo
(*)sh
119.802 458.31 mo
(+)sh
126.165 458.31 mo
(,)sh
133.241 458.31 mo
(-)sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
104.543 433.56 mo
(%)sh
108.996 433.56 mo
(&)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
428.168 615.81 mo
( )sh
431.631 615.81 mo
(!)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
514.699 641.767 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
523.922 636.81 mo
(!)sh
530.357 636.81 mo
(")sh
533.82 636.81 mo
(#)sh
537.773 636.81 mo
($)sh
314.391 617.31 mo
(%)sh
318.844 617.31 mo
(&)sh
524.39 617.31 mo
(%)sh
528.844 617.31 mo
(&)sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
408.949 641.767 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
418.172 636.81 mo
(!)sh
424.607 636.81 mo
(")sh
428.07 636.81 mo
(#)sh
432.023 636.81 mo
($)sh
418.641 617.31 mo
(%)sh
423.094 617.31 mo
(&)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
353.473 524.31 mo
( )sh
357.096 524.31 mo
(!)sh
361.05 524.31 mo
(")sh
366.003 524.31 mo
(#)sh
369.466 524.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
373.195 525.81 mo
(%)sh
376.082 525.81 mo
(!)sh
378.849 525.81 mo
(#)sh
381.273 525.81 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
444.973 518.31 mo
( )sh
448.596 518.31 mo
(!)sh
452.55 518.31 mo
(")sh
457.503 518.31 mo
(#)sh
460.966 518.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
464.695 519.81 mo
(%)sh
467.582 519.81 mo
(!)sh
470.349 519.81 mo
(#)sh
472.773 519.81 mo
($)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
159.668 453.06 mo
( )sh
163.131 453.06 mo
(!)sh
grestore
-180.75 711.81 mo
1475.25 711.81 li
1475.25 1097.31 li
-180.75 1097.31 li
cp
f
gsave
-180.75 711.81 mo
1475.25 711.81 li
1475.25 1097.31 li
-180.75 1097.31 li
cp
eclp
.75 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
269.025 788.31 mo
269.085 1051.18 li
.428534 .348058 .352331 .0131533 cmyk
@
93.7792 930.945 mo
98.2792 930.945 li
98.2792 931.695 li
93.7792 931.695 li
93.7792 930.945 li
cp
102.779 930.945 mo
107.279 930.945 li
107.279 931.695 li
102.779 931.695 li
102.779 930.945 li
cp
111.779 930.945 mo
116.279 930.945 li
116.279 931.695 li
111.779 931.695 li
111.779 930.945 li
cp
120.779 930.945 mo
125.279 930.945 li
125.279 931.695 li
120.779 931.695 li
120.779 930.945 li
cp
129.779 930.945 mo
129.96 930.945 li
131.7 930.945 133.005 931.698 133.877 933.205 cv
133.228 933.581 li
132.501 932.324 131.411 931.695 129.96 931.695 cv
129.779 931.695 li
129.779 930.945 li
cp
134.482 937.813 mo
134.482 942.313 li
133.732 942.313 li
133.732 937.813 li
134.482 937.813 li
cp
134.482 946.813 mo
134.482 951.313 li
133.732 951.313 li
133.732 946.813 li
134.482 946.813 li
cp
134.482 955.813 mo
134.482 960.313 li
133.732 960.313 li
133.732 955.813 li
134.482 955.813 li
cp
134.482 964.813 mo
134.482 966.172 li
134.482 967.379 134.065 968.42 133.23 969.294 cv
132.688 968.776 li
133.384 968.047 133.732 967.179 133.732 966.172 cv
133.732 964.813 li
134.482 964.813 li
cp
128.792 970.695 mo
124.292 970.695 li
124.292 969.945 li
128.792 969.945 li
128.792 970.695 li
cp
119.792 970.695 mo
115.292 970.695 li
115.292 969.945 li
119.792 969.945 li
119.792 970.695 li
cp
110.792 970.695 mo
106.292 970.695 li
106.292 969.945 li
110.792 969.945 li
110.792 970.695 li
cp
101.792 970.695 mo
97.2924 970.695 li
97.2924 969.945 li
101.792 969.945 li
101.792 970.695 li
cp
92.7924 970.695 mo
91.2599 970.695 li
90.1242 970.695 89.1295 970.321 88.2758 969.574 cv
88.7698 969.01 li
89.4821 969.633 90.3122 969.945 91.2599 969.945 cv
92.7924 969.945 li
92.7924 970.695 li
cp
86.7299 965.184 mo
86.7299 960.684 li
87.4799 960.684 li
87.4799 965.184 li
86.7299 965.184 li
cp
86.7299 956.184 mo
86.7299 951.684 li
87.4799 951.684 li
87.4799 956.184 li
86.7299 956.184 li
cp
86.7299 947.184 mo
86.7299 942.684 li
87.4799 942.684 li
87.4799 947.184 li
86.7299 947.184 li
cp
86.7299 938.184 mo
86.7299 935.467 li
86.7299 933.638 87.5419 932.301 89.1658 931.455 cv
89.5121 932.12 li
88.1573 932.826 87.4799 933.941 87.4799 935.467 cv
87.4799 938.184 li
86.7299 938.184 li
cp
.749844 .679255 .654902 .901945 cmyk
f
96.6749 909.982 mo
96.6749 950.482 li
.428534 .348058 .352331 .0131533 cmyk
@
94.2075 943.787 mo
95.6275 946.772 96.45 949.505 96.675 951.985 cv
96.9 949.505 97.7225 946.772 99.1425 943.787 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 96.675 951.985 ]ct
@
grestore newpath
.75 lw
96.6524 967.732 mo
96.5774 995.385 li
@
94.1289 988.681 mo
95.5411 991.67 96.3565 994.404 96.575 996.885 cv
96.8065 994.406 97.6361 991.675 99.0639 988.694 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 96.575 996.885 ]ct
@
grestore newpath
199.679 930.87 mo
204.179 930.87 li
204.179 931.62 li
199.679 931.62 li
199.679 930.87 li
cp
208.679 930.87 mo
213.179 930.87 li
213.179 931.62 li
208.679 931.62 li
208.679 930.87 li
cp
217.679 930.87 mo
222.179 930.87 li
222.179 931.62 li
217.679 931.62 li
217.679 930.87 li
cp
226.679 930.87 mo
231.179 930.87 li
231.179 931.62 li
226.679 931.62 li
226.679 930.87 li
cp
235.679 930.87 mo
235.86 930.87 li
237.6 930.87 238.905 931.623 239.777 933.13 cv
239.128 933.506 li
238.401 932.249 237.311 931.62 235.86 931.62 cv
235.679 931.62 li
235.679 930.87 li
cp
240.382 937.738 mo
240.382 942.238 li
239.632 942.238 li
239.632 937.738 li
240.382 937.738 li
cp
240.382 946.738 mo
240.382 951.238 li
239.632 951.238 li
239.632 946.738 li
240.382 946.738 li
cp
240.382 955.738 mo
240.382 960.238 li
239.632 960.238 li
239.632 955.738 li
240.382 955.738 li
cp
240.382 964.738 mo
240.382 966.097 li
240.382 967.304 239.965 968.345 239.13 969.219 cv
238.588 968.701 li
239.284 967.972 239.632 967.104 239.632 966.097 cv
239.632 964.738 li
240.382 964.738 li
cp
234.692 970.62 mo
230.192 970.62 li
230.192 969.87 li
234.692 969.87 li
234.692 970.62 li
cp
225.692 970.62 mo
221.192 970.62 li
221.192 969.87 li
225.692 969.87 li
225.692 970.62 li
cp
216.692 970.62 mo
212.192 970.62 li
212.192 969.87 li
216.692 969.87 li
216.692 970.62 li
cp
207.692 970.62 mo
203.192 970.62 li
203.192 969.87 li
207.692 969.87 li
207.692 970.62 li
cp
198.692 970.62 mo
197.16 970.62 li
196.024 970.62 195.03 970.246 194.176 969.499 cv
194.67 968.935 li
195.382 969.558 196.212 969.87 197.16 969.87 cv
198.692 969.87 li
198.692 970.62 li
cp
192.63 965.109 mo
192.63 960.609 li
193.38 960.609 li
193.38 965.109 li
192.63 965.109 li
cp
192.63 956.109 mo
192.63 951.609 li
193.38 951.609 li
193.38 956.109 li
192.63 956.109 li
cp
192.63 947.109 mo
192.63 942.609 li
193.38 942.609 li
193.38 947.109 li
192.63 947.109 li
cp
192.63 938.109 mo
192.63 935.392 li
192.63 933.563 193.442 932.226 195.066 931.38 cv
195.412 932.046 li
194.057 932.751 193.38 933.866 193.38 935.392 cv
193.38 938.109 li
192.63 938.109 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
202.575 909.907 mo
202.575 950.407 li
.428534 .348058 .352331 .0131533 cmyk
@
200.107 943.713 mo
201.527 946.698 202.35 949.43 202.575 951.91 cv
202.8 949.43 203.622 946.698 205.042 943.713 cv
1 lw
gsave
[-1.37773e-16 -.75 .75 -1.37773e-16 202.575 951.91 ]ct
@
grestore newpath
.75 lw
202.552 967.657 mo
202.477 995.31 li
@
200.029 988.606 mo
201.441 991.595 202.256 994.329 202.475 996.81 cv
202.706 994.331 203.536 991.6 204.964 988.619 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 202.475 996.81 ]ct
@
grestore newpath
304.154 931.17 mo
308.654 931.17 li
308.654 931.92 li
304.154 931.92 li
304.154 931.17 li
cp
313.154 931.17 mo
317.654 931.17 li
317.654 931.92 li
313.154 931.92 li
313.154 931.17 li
cp
322.154 931.17 mo
326.654 931.17 li
326.654 931.92 li
322.154 931.92 li
322.154 931.17 li
cp
331.154 931.17 mo
335.654 931.17 li
335.654 931.92 li
331.154 931.92 li
331.154 931.17 li
cp
340.154 931.17 mo
340.335 931.17 li
342.075 931.17 343.38 931.923 344.252 933.43 cv
343.603 933.806 li
342.876 932.549 341.786 931.92 340.335 931.92 cv
340.154 931.92 li
340.154 931.17 li
cp
344.857 938.037 mo
344.857 942.537 li
344.107 942.537 li
344.107 938.037 li
344.857 938.037 li
cp
344.857 947.037 mo
344.857 951.537 li
344.107 951.537 li
344.107 947.037 li
344.857 947.037 li
cp
344.857 956.037 mo
344.857 960.537 li
344.107 960.537 li
344.107 956.037 li
344.857 956.037 li
cp
344.857 965.037 mo
344.857 966.397 li
344.857 967.604 344.44 968.645 343.605 969.519 cv
343.063 969.001 li
343.759 968.272 344.107 967.404 344.107 966.397 cv
344.107 965.037 li
344.857 965.037 li
cp
339.167 970.92 mo
334.667 970.92 li
334.667 970.17 li
339.167 970.17 li
339.167 970.92 li
cp
330.167 970.92 mo
325.667 970.92 li
325.667 970.17 li
330.167 970.17 li
330.167 970.92 li
cp
321.167 970.92 mo
316.667 970.92 li
316.667 970.17 li
321.167 970.17 li
321.167 970.92 li
cp
312.167 970.92 mo
307.667 970.92 li
307.667 970.17 li
312.167 970.17 li
312.167 970.92 li
cp
303.167 970.92 mo
301.635 970.92 li
300.499 970.92 299.504 970.546 298.651 969.799 cv
299.145 969.235 li
299.857 969.858 300.687 970.17 301.635 970.17 cv
303.167 970.17 li
303.167 970.92 li
cp
297.105 965.409 mo
297.105 960.909 li
297.855 960.909 li
297.855 965.409 li
297.105 965.409 li
cp
297.105 956.409 mo
297.105 951.909 li
297.855 951.909 li
297.855 956.409 li
297.105 956.409 li
cp
297.105 947.409 mo
297.105 942.909 li
297.855 942.909 li
297.855 947.409 li
297.105 947.409 li
cp
297.105 938.409 mo
297.105 935.693 li
297.105 933.863 297.917 932.526 299.541 931.68 cv
299.887 932.346 li
298.532 933.051 297.855 934.167 297.855 935.693 cv
297.855 938.409 li
297.105 938.409 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
306.75 867.435 mo
307.042 950.707 li
.428534 .348058 .352331 .0131533 cmyk
@
304.554 944.021 mo
305.984 947.001 306.816 949.731 307.05 952.21 cv
307.266 949.729 308.079 946.994 309.489 944.004 cv
1 lw
gsave
[-.00261799 -.749995 .749995 -.00261799 307.05 952.21 ]ct
@
grestore newpath
.75 lw
307.027 967.957 mo
306.952 995.61 li
@
304.504 988.906 mo
305.916 991.895 306.731 994.629 306.95 997.11 cv
307.181 994.631 308.011 991.9 309.439 988.919 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 306.95 997.11 ]ct
@
grestore newpath
408.779 931.17 mo
413.279 931.17 li
413.279 931.92 li
408.779 931.92 li
408.779 931.17 li
cp
417.779 931.17 mo
422.279 931.17 li
422.279 931.92 li
417.779 931.92 li
417.779 931.17 li
cp
426.779 931.17 mo
431.279 931.17 li
431.279 931.92 li
426.779 931.92 li
426.779 931.17 li
cp
435.779 931.17 mo
440.279 931.17 li
440.279 931.92 li
435.779 931.92 li
435.779 931.17 li
cp
444.779 931.17 mo
444.96 931.17 li
446.7 931.17 448.005 931.923 448.877 933.43 cv
448.228 933.806 li
447.501 932.549 446.411 931.92 444.96 931.92 cv
444.779 931.92 li
444.779 931.17 li
cp
449.482 938.037 mo
449.482 942.537 li
448.732 942.537 li
448.732 938.037 li
449.482 938.037 li
cp
449.482 947.037 mo
449.482 951.537 li
448.732 951.537 li
448.732 947.037 li
449.482 947.037 li
cp
449.482 956.037 mo
449.482 960.537 li
448.732 960.537 li
448.732 956.037 li
449.482 956.037 li
cp
449.482 965.037 mo
449.482 966.397 li
449.482 967.604 449.065 968.645 448.23 969.519 cv
447.688 969.001 li
448.384 968.272 448.732 967.404 448.732 966.397 cv
448.732 965.037 li
449.482 965.037 li
cp
443.792 970.92 mo
439.292 970.92 li
439.292 970.17 li
443.792 970.17 li
443.792 970.92 li
cp
434.792 970.92 mo
430.292 970.92 li
430.292 970.17 li
434.792 970.17 li
434.792 970.92 li
cp
425.792 970.92 mo
421.292 970.92 li
421.292 970.17 li
425.792 970.17 li
425.792 970.92 li
cp
416.792 970.92 mo
412.292 970.92 li
412.292 970.17 li
416.792 970.17 li
416.792 970.92 li
cp
407.792 970.92 mo
406.26 970.92 li
405.124 970.92 404.129 970.546 403.276 969.799 cv
403.77 969.235 li
404.482 969.858 405.312 970.17 406.26 970.17 cv
407.792 970.17 li
407.792 970.92 li
cp
401.73 965.409 mo
401.73 960.909 li
402.48 960.909 li
402.48 965.409 li
401.73 965.409 li
cp
401.73 956.409 mo
401.73 951.909 li
402.48 951.909 li
402.48 956.409 li
401.73 956.409 li
cp
401.73 947.409 mo
401.73 942.909 li
402.48 942.909 li
402.48 947.409 li
401.73 947.409 li
cp
401.73 938.409 mo
401.73 935.693 li
401.73 933.863 402.542 932.526 404.166 931.68 cv
404.512 932.346 li
403.157 933.051 402.48 934.167 402.48 935.693 cv
402.48 938.409 li
401.73 938.409 li
cp
.749844 .679255 .654902 .901945 cmyk
f
.75 lw
411.75 868.185 mo
411.675 950.707 li
.428534 .348058 .352331 .0131533 cmyk
@
409.215 944.01 mo
410.632 946.997 411.452 949.73 411.675 952.21 cv
411.902 949.73 412.727 946.998 414.15 944.015 cv
1 lw
gsave
[.000654498 -.75 .75 .000654498 411.675 952.21 ]ct
@
grestore newpath
.75 lw
411.652 967.957 mo
411.577 995.61 li
@
409.129 988.906 mo
410.541 991.895 411.356 994.629 411.575 997.11 cv
411.806 994.631 412.636 991.9 414.064 988.919 cv
1 lw
gsave
[.00196349 -.749997 .749997 .00196349 411.575 997.11 ]ct
@
grestore newpath
.75 lw
239.31 902.557 mo
298.605 959.52 li
.0299992 .399451 1 0 cmyk
@
292.066 956.66 mo
295.203 957.704 297.743 959.004 299.687 960.56 cv
298.055 958.68 296.654 956.193 295.485 953.101 cv
1 lw
gsave
[-.540867 -.51958 .51958 -.540867 299.687 960.56 ]ct
@
grestore newpath
.75 lw
307.05 1011.11 mo
307.095 1033.11 li
.428534 .348058 .352331 .0131533 cmyk
@
304.615 1026.42 mo
306.042 1029.4 306.87 1032.13 307.1 1034.61 cv
307.32 1032.13 308.137 1029.4 309.55 1026.41 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 307.1 1034.61 ]ct
@
grestore newpath
.75 lw
202.65 866.512 mo
202.567 893.182 li
@
200.121 886.48 mo
201.531 889.469 202.345 892.204 202.562 894.685 cv
202.795 892.206 203.626 889.476 205.056 886.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 202.562 894.685 ]ct
@
grestore newpath
88.7872 892.567 mo
89.0784 892.477 89.3777 892.432 89.6849 892.432 cv
89.7691 892.432 li
89.7691 893.182 li
89.6849 893.182 li
89.4527 893.182 89.2269 893.216 89.0074 893.283 cv
88.7872 892.567 li
cp
92.2816 892.432 mo
93.1254 892.432 li
93.1254 893.182 li
92.2816 893.182 li
92.2816 892.432 li
cp
95.6379 892.432 mo
96.4817 892.432 li
96.4817 893.182 li
95.6379 893.182 li
95.6379 892.432 li
cp
98.9941 892.432 mo
99.8379 892.432 li
99.8379 893.182 li
98.9941 893.182 li
98.9941 892.432 li
cp
102.35 892.432 mo
103.194 892.432 li
103.194 893.182 li
102.35 893.182 li
102.35 892.432 li
cp
105.707 892.432 mo
106.55 892.432 li
106.55 893.182 li
105.707 893.182 li
105.707 892.432 li
cp
109.063 892.432 mo
109.907 892.432 li
109.907 893.182 li
109.063 893.182 li
109.063 892.432 li
cp
112.419 892.432 mo
113.263 892.432 li
113.263 893.182 li
112.419 893.182 li
112.419 892.432 li
cp
115.775 892.432 mo
116.619 892.432 li
116.619 893.182 li
115.775 893.182 li
115.775 892.432 li
cp
119.132 892.432 mo
119.975 892.432 li
119.975 893.182 li
119.132 893.182 li
119.132 892.432 li
cp
122.488 892.432 mo
123.332 892.432 li
123.332 893.182 li
122.488 893.182 li
122.488 892.432 li
cp
125.844 892.432 mo
126.688 892.432 li
126.688 893.182 li
125.844 893.182 li
125.844 892.432 li
cp
129.2 892.432 mo
130.044 892.432 li
130.044 893.182 li
129.2 893.182 li
129.2 892.432 li
cp
132.557 892.432 mo
133.4 892.432 li
133.4 893.182 li
132.557 893.182 li
132.557 892.432 li
cp
135.913 892.432 mo
136.757 892.432 li
136.757 893.182 li
135.913 893.182 li
135.913 892.432 li
cp
139.269 892.432 mo
140.113 892.432 li
140.113 893.182 li
139.269 893.182 li
139.269 892.432 li
cp
142.625 892.432 mo
143.469 892.432 li
143.469 893.182 li
142.625 893.182 li
142.625 892.432 li
cp
145.982 892.432 mo
146.825 892.432 li
146.825 893.182 li
145.982 893.182 li
145.982 892.432 li
cp
149.338 892.432 mo
150.182 892.432 li
150.182 893.182 li
149.338 893.182 li
149.338 892.432 li
cp
152.694 892.432 mo
153.538 892.432 li
153.538 893.182 li
152.694 893.182 li
152.694 892.432 li
cp
156.05 892.432 mo
156.894 892.432 li
156.894 893.182 li
156.05 893.182 li
156.05 892.432 li
cp
159.407 892.432 mo
160.25 892.432 li
160.25 893.182 li
159.407 893.182 li
159.407 892.432 li
cp
162.763 892.432 mo
163.607 892.432 li
163.607 893.182 li
162.763 893.182 li
162.763 892.432 li
cp
166.119 892.432 mo
166.963 892.432 li
166.963 893.182 li
166.119 893.182 li
166.119 892.432 li
cp
169.475 892.432 mo
170.319 892.432 li
170.319 893.182 li
169.475 893.182 li
169.475 892.432 li
cp
172.832 892.432 mo
173.675 892.432 li
173.675 893.182 li
172.832 893.182 li
172.832 892.432 li
cp
176.188 892.432 mo
177.032 892.432 li
177.032 893.182 li
176.188 893.182 li
176.188 892.432 li
cp
179.544 892.432 mo
180.388 892.432 li
180.388 893.182 li
179.544 893.182 li
179.544 892.432 li
cp
182.9 892.432 mo
183.744 892.432 li
183.744 893.182 li
182.9 893.182 li
182.9 892.432 li
cp
186.257 892.432 mo
187.1 892.432 li
187.1 893.182 li
186.257 893.182 li
186.257 892.432 li
cp
189.613 892.432 mo
190.457 892.432 li
190.457 893.182 li
189.613 893.182 li
189.613 892.432 li
cp
192.969 892.432 mo
193.813 892.432 li
193.813 893.182 li
192.969 893.182 li
192.969 892.432 li
cp
196.325 892.432 mo
197.169 892.432 li
197.169 893.182 li
196.325 893.182 li
196.325 892.432 li
cp
199.682 892.432 mo
200.525 892.432 li
200.525 893.182 li
199.682 893.182 li
199.682 892.432 li
cp
203.038 892.432 mo
203.882 892.432 li
203.882 893.182 li
203.038 893.182 li
203.038 892.432 li
cp
206.394 892.432 mo
207.238 892.432 li
207.238 893.182 li
206.394 893.182 li
206.394 892.432 li
cp
209.75 892.432 mo
210.594 892.432 li
210.594 893.182 li
209.75 893.182 li
209.75 892.432 li
cp
213.107 892.432 mo
213.95 892.432 li
213.95 893.182 li
213.107 893.182 li
213.107 892.432 li
cp
216.463 892.432 mo
217.307 892.432 li
217.307 893.182 li
216.463 893.182 li
216.463 892.432 li
cp
219.819 892.432 mo
220.663 892.432 li
220.663 893.182 li
219.819 893.182 li
219.819 892.432 li
cp
223.175 892.432 mo
224.019 892.432 li
224.019 893.182 li
223.175 893.182 li
223.175 892.432 li
cp
226.532 892.432 mo
227.375 892.432 li
227.375 893.182 li
226.532 893.182 li
226.532 892.432 li
cp
229.888 892.432 mo
230.732 892.432 li
230.732 893.182 li
229.888 893.182 li
229.888 892.432 li
cp
233.244 892.432 mo
234.088 892.432 li
234.088 893.182 li
233.244 893.182 li
233.244 892.432 li
cp
236.6 892.432 mo
237.315 892.432 li
237.368 892.432 237.421 892.434 237.473 892.436 cv
237.435 893.186 li
237.395 893.183 237.355 893.182 237.315 893.182 cv
236.6 893.182 li
236.6 892.432 li
cp
239.897 893.853 mo
240.074 894.132 240.203 894.431 240.283 894.75 cv
239.555 894.932 li
239.495 894.691 239.398 894.466 239.264 894.256 cv
239.897 893.853 li
cp
240.375 897.382 mo
240.375 898.226 li
239.625 898.226 li
239.625 897.382 li
240.375 897.382 li
cp
240.375 900.738 mo
240.375 901.582 li
239.625 901.582 li
239.625 900.738 li
240.375 900.738 li
cp
240.375 904.095 mo
240.375 904.938 li
239.625 904.938 li
239.625 904.095 li
240.375 904.095 li
cp
240.375 907.451 mo
240.375 908.295 li
239.625 908.295 li
239.625 907.451 li
240.375 907.451 li
cp
239.477 910.915 mo
239.247 911.146 238.987 911.335 238.698 911.482 cv
238.358 910.814 li
238.576 910.702 238.773 910.56 238.947 910.385 cv
239.477 910.915 li
cp
236.012 911.813 mo
235.169 911.813 li
235.169 911.063 li
236.012 911.063 li
236.012 911.813 li
cp
232.656 911.813 mo
231.812 911.813 li
231.812 911.063 li
232.656 911.063 li
232.656 911.813 li
cp
229.3 911.813 mo
228.456 911.813 li
228.456 911.063 li
229.3 911.063 li
229.3 911.813 li
cp
225.944 911.813 mo
225.1 911.813 li
225.1 911.063 li
225.944 911.063 li
225.944 911.813 li
cp
222.587 911.813 mo
221.744 911.813 li
221.744 911.063 li
222.587 911.063 li
222.587 911.813 li
cp
219.231 911.813 mo
218.387 911.813 li
218.387 911.063 li
219.231 911.063 li
219.231 911.813 li
cp
215.875 911.813 mo
215.031 911.813 li
215.031 911.063 li
215.875 911.063 li
215.875 911.813 li
cp
212.519 911.813 mo
211.675 911.813 li
211.675 911.063 li
212.519 911.063 li
212.519 911.813 li
cp
209.162 911.813 mo
208.319 911.813 li
208.319 911.063 li
209.162 911.063 li
209.162 911.813 li
cp
205.806 911.813 mo
204.962 911.813 li
204.962 911.063 li
205.806 911.063 li
205.806 911.813 li
cp
202.45 911.813 mo
201.606 911.813 li
201.606 911.063 li
202.45 911.063 li
202.45 911.813 li
cp
199.094 911.813 mo
198.25 911.813 li
198.25 911.063 li
199.094 911.063 li
199.094 911.813 li
cp
195.737 911.813 mo
194.894 911.813 li
194.894 911.063 li
195.737 911.063 li
195.737 911.813 li
cp
192.381 911.813 mo
191.537 911.813 li
191.537 911.063 li
192.381 911.063 li
192.381 911.813 li
cp
189.025 911.813 mo
188.181 911.813 li
188.181 911.063 li
189.025 911.063 li
189.025 911.813 li
cp
185.669 911.813 mo
184.825 911.813 li
184.825 911.063 li
185.669 911.063 li
185.669 911.813 li
cp
182.312 911.813 mo
181.469 911.813 li
181.469 911.063 li
182.312 911.063 li
182.312 911.813 li
cp
178.956 911.813 mo
178.112 911.813 li
178.112 911.063 li
178.956 911.063 li
178.956 911.813 li
cp
175.6 911.813 mo
174.756 911.813 li
174.756 911.063 li
175.6 911.063 li
175.6 911.813 li
cp
172.244 911.813 mo
171.4 911.813 li
171.4 911.063 li
172.244 911.063 li
172.244 911.813 li
cp
168.887 911.813 mo
168.044 911.813 li
168.044 911.063 li
168.887 911.063 li
168.887 911.813 li
cp
165.531 911.813 mo
164.687 911.813 li
164.687 911.063 li
165.531 911.063 li
165.531 911.813 li
cp
162.175 911.813 mo
161.331 911.813 li
161.331 911.063 li
162.175 911.063 li
162.175 911.813 li
cp
158.819 911.813 mo
157.975 911.813 li
157.975 911.063 li
158.819 911.063 li
158.819 911.813 li
cp
155.462 911.813 mo
154.619 911.813 li
154.619 911.063 li
155.462 911.063 li
155.462 911.813 li
cp
152.106 911.813 mo
151.262 911.813 li
151.262 911.063 li
152.106 911.063 li
152.106 911.813 li
cp
148.75 911.813 mo
147.906 911.813 li
147.906 911.063 li
148.75 911.063 li
148.75 911.813 li
cp
145.394 911.813 mo
144.55 911.813 li
144.55 911.063 li
145.394 911.063 li
145.394 911.813 li
cp
142.037 911.813 mo
141.194 911.813 li
141.194 911.063 li
142.037 911.063 li
142.037 911.813 li
cp
138.681 911.813 mo
137.837 911.813 li
137.837 911.063 li
138.681 911.063 li
138.681 911.813 li
cp
135.325 911.813 mo
134.481 911.813 li
134.481 911.063 li
135.325 911.063 li
135.325 911.813 li
cp
131.969 911.813 mo
131.125 911.813 li
131.125 911.063 li
131.969 911.063 li
131.969 911.813 li
cp
128.612 911.813 mo
127.769 911.813 li
127.769 911.063 li
128.612 911.063 li
128.612 911.813 li
cp
125.256 911.813 mo
124.412 911.813 li
124.412 911.063 li
125.256 911.063 li
125.256 911.813 li
cp
121.9 911.813 mo
121.056 911.813 li
121.056 911.063 li
121.9 911.063 li
121.9 911.813 li
cp
118.544 911.813 mo
117.7 911.813 li
117.7 911.063 li
118.544 911.063 li
118.544 911.813 li
cp
115.187 911.813 mo
114.344 911.813 li
114.344 911.063 li
115.187 911.063 li
115.187 911.813 li
cp
111.831 911.813 mo
110.987 911.813 li
110.987 911.063 li
111.831 911.063 li
111.831 911.813 li
cp
108.475 911.813 mo
107.631 911.813 li
107.631 911.063 li
108.475 911.063 li
108.475 911.813 li
cp
105.119 911.813 mo
104.275 911.813 li
104.275 911.063 li
105.119 911.063 li
105.119 911.813 li
cp
101.762 911.813 mo
100.919 911.813 li
100.919 911.063 li
101.762 911.063 li
101.762 911.813 li
cp
98.406 911.813 mo
97.5623 911.813 li
97.5623 911.063 li
98.406 911.063 li
98.406 911.813 li
cp
95.0498 911.813 mo
94.2061 911.813 li
94.2061 911.063 li
95.0498 911.063 li
95.0498 911.813 li
cp
91.6935 911.813 mo
90.8498 911.813 li
90.8498 911.063 li
91.6935 911.063 li
91.6935 911.813 li
cp
88.1623 911.406 mo
87.8814 911.245 87.632 911.043 87.4143 910.801 cv
87.9713 910.299 li
88.136 910.482 88.3245 910.634 88.5367 910.756 cv
88.1623 911.406 li
cp
86.6249 908.157 mo
86.6249 907.313 li
87.3749 907.313 li
87.3749 908.157 li
86.6249 908.157 li
cp
86.6249 904.801 mo
86.6249 903.957 li
87.3749 903.957 li
87.3749 904.801 li
86.6249 904.801 li
cp
86.6249 901.444 mo
86.6249 900.601 li
87.3749 900.601 li
87.3749 901.444 li
86.6249 901.444 li
cp
86.6249 898.088 mo
86.6249 897.244 li
87.3749 897.244 li
87.3749 898.088 li
86.6249 898.088 li
cp
86.6249 895.5 mo
86.6249 895.159 86.6794 894.829 86.7882 894.509 cv
87.4982 894.751 li
87.416 894.992 87.3749 895.242 87.3749 895.5 cv
86.6249 895.5 li
cp
.791409 .327764 1 .227756 cmyk
f
87.0222 952.432 mo
87.866 952.432 li
87.866 953.182 li
87.0222 953.182 li
87.0222 952.432 li
cp
90.3785 952.432 mo
91.2222 952.432 li
91.2222 953.182 li
90.3785 953.182 li
90.3785 952.432 li
cp
93.7347 952.432 mo
94.5785 952.432 li
94.5785 953.182 li
93.7347 953.182 li
93.7347 952.432 li
cp
97.091 952.432 mo
97.9348 952.432 li
97.9348 953.182 li
97.091 953.182 li
97.091 952.432 li
cp
100.447 952.432 mo
101.291 952.432 li
101.291 953.182 li
100.447 953.182 li
100.447 952.432 li
cp
103.803 952.432 mo
104.647 952.432 li
104.647 953.182 li
103.803 953.182 li
103.803 952.432 li
cp
107.16 952.432 mo
108.003 952.432 li
108.003 953.182 li
107.16 953.182 li
107.16 952.432 li
cp
110.516 952.432 mo
111.36 952.432 li
111.36 953.182 li
110.516 953.182 li
110.516 952.432 li
cp
113.872 952.432 mo
114.716 952.432 li
114.716 953.182 li
113.872 953.182 li
113.872 952.432 li
cp
117.228 952.432 mo
118.072 952.432 li
118.072 953.182 li
117.228 953.182 li
117.228 952.432 li
cp
120.585 952.432 mo
121.428 952.432 li
121.428 953.182 li
120.585 953.182 li
120.585 952.432 li
cp
123.941 952.432 mo
124.785 952.432 li
124.785 953.182 li
123.941 953.182 li
123.941 952.432 li
cp
127.297 952.432 mo
128.141 952.432 li
128.141 953.182 li
127.297 953.182 li
127.297 952.432 li
cp
130.654 952.432 mo
131.497 952.432 li
131.497 953.182 li
130.654 953.182 li
130.654 952.432 li
cp
134.01 952.432 mo
134.853 952.432 li
134.853 953.182 li
134.01 953.182 li
134.01 952.432 li
cp
137.366 952.432 mo
138.21 952.432 li
138.21 953.182 li
137.366 953.182 li
137.366 952.432 li
cp
140.722 952.432 mo
141.566 952.432 li
141.566 953.182 li
140.722 953.182 li
140.722 952.432 li
cp
144.078 952.432 mo
144.922 952.432 li
144.922 953.182 li
144.078 953.182 li
144.078 952.432 li
cp
147.435 952.432 mo
148.279 952.432 li
148.279 953.182 li
147.435 953.182 li
147.435 952.432 li
cp
150.791 952.432 mo
151.635 952.432 li
151.635 953.182 li
150.791 953.182 li
150.791 952.432 li
cp
154.147 952.432 mo
154.991 952.432 li
154.991 953.182 li
154.147 953.182 li
154.147 952.432 li
cp
157.503 952.432 mo
158.347 952.432 li
158.347 953.182 li
157.503 953.182 li
157.503 952.432 li
cp
160.86 952.432 mo
161.703 952.432 li
161.703 953.182 li
160.86 953.182 li
160.86 952.432 li
cp
164.216 952.432 mo
165.06 952.432 li
165.06 953.182 li
164.216 953.182 li
164.216 952.432 li
cp
167.572 952.432 mo
168.416 952.432 li
168.416 953.182 li
167.572 953.182 li
167.572 952.432 li
cp
170.928 952.432 mo
171.772 952.432 li
171.772 953.182 li
170.928 953.182 li
170.928 952.432 li
cp
174.285 952.432 mo
175.128 952.432 li
175.128 953.182 li
174.285 953.182 li
174.285 952.432 li
cp
177.641 952.432 mo
178.485 952.432 li
178.485 953.182 li
177.641 953.182 li
177.641 952.432 li
cp
180.997 952.432 mo
181.841 952.432 li
181.841 953.182 li
180.997 953.182 li
180.997 952.432 li
cp
184.353 952.432 mo
185.197 952.432 li
185.197 953.182 li
184.353 953.182 li
184.353 952.432 li
cp
187.71 952.432 mo
188.553 952.432 li
188.553 953.182 li
187.71 953.182 li
187.71 952.432 li
cp
191.066 952.432 mo
191.91 952.432 li
191.91 953.182 li
191.066 953.182 li
191.066 952.432 li
cp
194.422 952.432 mo
195.266 952.432 li
195.266 953.182 li
194.422 953.182 li
194.422 952.432 li
cp
197.779 952.432 mo
198.622 952.432 li
198.622 953.182 li
197.779 953.182 li
197.779 952.432 li
cp
201.135 952.432 mo
201.978 952.432 li
201.978 953.182 li
201.135 953.182 li
201.135 952.432 li
cp
204.491 952.432 mo
205.335 952.432 li
205.335 953.182 li
204.491 953.182 li
204.491 952.432 li
cp
207.847 952.432 mo
208.691 952.432 li
208.691 953.182 li
207.847 953.182 li
207.847 952.432 li
cp
211.203 952.432 mo
212.047 952.432 li
212.047 953.182 li
211.203 953.182 li
211.203 952.432 li
cp
214.56 952.432 mo
215.403 952.432 li
215.403 953.182 li
214.56 953.182 li
214.56 952.432 li
cp
217.916 952.432 mo
218.76 952.432 li
218.76 953.182 li
217.916 953.182 li
217.916 952.432 li
cp
221.272 952.432 mo
222.116 952.432 li
222.116 953.182 li
221.272 953.182 li
221.272 952.432 li
cp
224.628 952.432 mo
225.472 952.432 li
225.472 953.182 li
224.628 953.182 li
224.628 952.432 li
cp
227.985 952.432 mo
228.828 952.432 li
228.828 953.182 li
227.985 953.182 li
227.985 952.432 li
cp
231.341 952.432 mo
232.185 952.432 li
232.185 953.182 li
231.341 953.182 li
231.341 952.432 li
cp
234.697 952.432 mo
235.541 952.432 li
235.541 953.182 li
234.697 953.182 li
234.697 952.432 li
cp
238.053 952.432 mo
238.897 952.432 li
238.897 953.182 li
238.053 953.182 li
238.053 952.432 li
cp
241.41 952.432 mo
242.253 952.432 li
242.253 953.182 li
241.41 953.182 li
241.41 952.432 li
cp
244.766 952.432 mo
245.61 952.432 li
245.61 953.182 li
244.766 953.182 li
244.766 952.432 li
cp
248.122 952.432 mo
248.966 952.432 li
248.966 953.182 li
248.122 953.182 li
248.122 952.432 li
cp
251.478 952.432 mo
252.322 952.432 li
252.322 953.182 li
251.478 953.182 li
251.478 952.432 li
cp
254.835 952.432 mo
255.678 952.432 li
255.678 953.182 li
254.835 953.182 li
254.835 952.432 li
cp
258.191 952.432 mo
259.035 952.432 li
259.035 953.182 li
258.191 953.182 li
258.191 952.432 li
cp
261.547 952.432 mo
262.391 952.432 li
262.391 953.182 li
261.547 953.182 li
261.547 952.432 li
cp
264.903 952.432 mo
265.747 952.432 li
265.747 953.182 li
264.903 953.182 li
264.903 952.432 li
cp
268.26 952.432 mo
269.103 952.432 li
269.103 953.182 li
268.26 953.182 li
268.26 952.432 li
cp
271.616 952.432 mo
272.46 952.432 li
272.46 953.182 li
271.616 953.182 li
271.616 952.432 li
cp
274.972 952.432 mo
275.816 952.432 li
275.816 953.182 li
274.972 953.182 li
274.972 952.432 li
cp
278.328 952.432 mo
279.172 952.432 li
279.172 953.182 li
278.328 953.182 li
278.328 952.432 li
cp
281.685 952.432 mo
282.528 952.432 li
282.528 953.182 li
281.685 953.182 li
281.685 952.432 li
cp
285.041 952.432 mo
285.885 952.432 li
285.885 953.182 li
285.041 953.182 li
285.041 952.432 li
cp
288.397 952.432 mo
289.241 952.432 li
289.241 953.182 li
288.397 953.182 li
288.397 952.432 li
cp
291.753 952.432 mo
292.597 952.432 li
292.597 953.182 li
291.753 953.182 li
291.753 952.432 li
cp
295.11 952.432 mo
295.953 952.432 li
295.953 953.182 li
295.11 953.182 li
295.11 952.432 li
cp
298.466 952.432 mo
299.31 952.432 li
299.31 953.182 li
298.466 953.182 li
298.466 952.432 li
cp
301.822 952.432 mo
302.666 952.432 li
302.666 953.182 li
301.822 953.182 li
301.822 952.432 li
cp
305.178 952.432 mo
306.022 952.432 li
306.022 953.182 li
305.178 953.182 li
305.178 952.432 li
cp
308.535 952.432 mo
309.378 952.432 li
309.378 953.182 li
308.535 953.182 li
308.535 952.432 li
cp
311.891 952.432 mo
312.735 952.432 li
312.735 953.182 li
311.891 953.182 li
311.891 952.432 li
cp
315.247 952.432 mo
316.091 952.432 li
316.091 953.182 li
315.247 953.182 li
315.247 952.432 li
cp
318.603 952.432 mo
319.447 952.432 li
319.447 953.182 li
318.603 953.182 li
318.603 952.432 li
cp
321.96 952.432 mo
322.803 952.432 li
322.803 953.182 li
321.96 953.182 li
321.96 952.432 li
cp
325.316 952.432 mo
326.16 952.432 li
326.16 953.182 li
325.316 953.182 li
325.316 952.432 li
cp
328.672 952.432 mo
329.516 952.432 li
329.516 953.182 li
328.672 953.182 li
328.672 952.432 li
cp
332.028 952.432 mo
332.872 952.432 li
332.872 953.182 li
332.028 953.182 li
332.028 952.432 li
cp
335.385 952.432 mo
336.228 952.432 li
336.228 953.182 li
335.385 953.182 li
335.385 952.432 li
cp
338.741 952.432 mo
339.585 952.432 li
339.585 953.182 li
338.741 953.182 li
338.741 952.432 li
cp
342.097 952.432 mo
342.941 952.432 li
342.941 953.182 li
342.097 953.182 li
342.097 952.432 li
cp
345.453 952.432 mo
346.297 952.432 li
346.297 953.182 li
345.453 953.182 li
345.453 952.432 li
cp
348.81 952.432 mo
349.653 952.432 li
349.653 953.182 li
348.81 953.182 li
348.81 952.432 li
cp
352.166 952.432 mo
353.01 952.432 li
353.01 953.182 li
352.166 953.182 li
352.166 952.432 li
cp
355.522 952.432 mo
356.366 952.432 li
356.366 953.182 li
355.522 953.182 li
355.522 952.432 li
cp
358.878 952.432 mo
359.722 952.432 li
359.722 953.182 li
358.878 953.182 li
358.878 952.432 li
cp
362.235 952.432 mo
363.078 952.432 li
363.078 953.182 li
362.235 953.182 li
362.235 952.432 li
cp
365.591 952.432 mo
366.435 952.432 li
366.435 953.182 li
365.591 953.182 li
365.591 952.432 li
cp
368.947 952.432 mo
369.791 952.432 li
369.791 953.182 li
368.947 953.182 li
368.947 952.432 li
cp
372.303 952.432 mo
373.147 952.432 li
373.147 953.182 li
372.303 953.182 li
372.303 952.432 li
cp
375.66 952.432 mo
376.503 952.432 li
376.503 953.182 li
375.66 953.182 li
375.66 952.432 li
cp
379.016 952.432 mo
379.86 952.432 li
379.86 953.182 li
379.016 953.182 li
379.016 952.432 li
cp
382.372 952.432 mo
383.216 952.432 li
383.216 953.182 li
382.372 953.182 li
382.372 952.432 li
cp
385.728 952.432 mo
386.572 952.432 li
386.572 953.182 li
385.728 953.182 li
385.728 952.432 li
cp
389.085 952.432 mo
389.928 952.432 li
389.928 953.182 li
389.085 953.182 li
389.085 952.432 li
cp
392.441 952.432 mo
393.285 952.432 li
393.285 953.182 li
392.441 953.182 li
392.441 952.432 li
cp
395.797 952.432 mo
396.641 952.432 li
396.641 953.182 li
395.797 953.182 li
395.797 952.432 li
cp
399.153 952.432 mo
399.997 952.432 li
399.997 953.182 li
399.153 953.182 li
399.153 952.432 li
cp
402.51 952.432 mo
403.353 952.432 li
403.353 953.182 li
402.51 953.182 li
402.51 952.432 li
cp
405.866 952.432 mo
406.71 952.432 li
406.71 953.182 li
405.866 953.182 li
405.866 952.432 li
cp
409.222 952.432 mo
410.066 952.432 li
410.066 953.182 li
409.222 953.182 li
409.222 952.432 li
cp
412.578 952.432 mo
413.422 952.432 li
413.422 953.182 li
412.578 953.182 li
412.578 952.432 li
cp
415.935 952.432 mo
416.778 952.432 li
416.778 953.182 li
415.935 953.182 li
415.935 952.432 li
cp
419.291 952.432 mo
420.135 952.432 li
420.135 953.182 li
419.291 953.182 li
419.291 952.432 li
cp
422.647 952.432 mo
423.491 952.432 li
423.491 953.182 li
422.647 953.182 li
422.647 952.432 li
cp
426.003 952.432 mo
426.847 952.432 li
426.847 953.182 li
426.003 953.182 li
426.003 952.432 li
cp
429.36 952.432 mo
430.203 952.432 li
430.203 953.182 li
429.36 953.182 li
429.36 952.432 li
cp
432.716 952.432 mo
433.56 952.432 li
433.56 953.182 li
432.716 953.182 li
432.716 952.432 li
cp
436.072 952.432 mo
436.916 952.432 li
436.916 953.182 li
436.072 953.182 li
436.072 952.432 li
cp
439.428 952.432 mo
440.272 952.432 li
440.272 953.182 li
439.428 953.182 li
439.428 952.432 li
cp
442.785 952.432 mo
443.628 952.432 li
443.628 953.182 li
442.785 953.182 li
442.785 952.432 li
cp
446.141 952.432 mo
446.985 952.432 li
446.985 953.182 li
446.141 953.182 li
446.141 952.432 li
cp
449.55 952.446 mo
449.894 952.481 450.217 952.583 450.518 952.75 cv
450.153 953.406 li
449.942 953.288 449.716 953.217 449.474 953.192 cv
449.55 952.446 li
cp
451.815 955.23 mo
451.815 956.073 li
451.065 956.073 li
451.065 955.23 li
451.815 955.23 li
cp
451.815 958.586 mo
451.815 959.429 li
451.065 959.429 li
451.065 958.586 li
451.815 958.586 li
cp
451.815 961.942 mo
451.815 962.786 li
451.065 962.786 li
451.065 961.942 li
451.815 961.942 li
cp
451.815 965.298 mo
451.815 965.535 li
451.815 965.788 451.778 966.035 451.705 966.275 cv
450.988 966.056 li
451.039 965.888 451.065 965.714 451.065 965.535 cv
451.065 965.298 li
451.815 965.298 li
cp
449.509 968.053 mo
449.436 968.059 449.362 968.063 449.287 968.063 cv
448.62 968.063 li
448.62 967.313 li
449.287 967.313 li
449.34 967.313 449.393 967.31 449.445 967.306 cv
449.509 968.053 li
cp
446.108 968.063 mo
445.264 968.063 li
445.264 967.313 li
446.108 967.313 li
446.108 968.063 li
cp
442.752 968.063 mo
441.908 968.063 li
441.908 967.313 li
442.752 967.313 li
442.752 968.063 li
cp
439.395 968.063 mo
438.552 968.063 li
438.552 967.313 li
439.395 967.313 li
439.395 968.063 li
cp
436.039 968.063 mo
435.195 968.063 li
435.195 967.313 li
436.039 967.313 li
436.039 968.063 li
cp
432.683 968.063 mo
431.839 968.063 li
431.839 967.313 li
432.683 967.313 li
432.683 968.063 li
cp
429.327 968.063 mo
428.483 968.063 li
428.483 967.313 li
429.327 967.313 li
429.327 968.063 li
cp
425.97 968.063 mo
425.127 968.063 li
425.127 967.313 li
425.97 967.313 li
425.97 968.063 li
cp
422.614 968.063 mo
421.77 968.063 li
421.77 967.313 li
422.614 967.313 li
422.614 968.063 li
cp
419.258 968.063 mo
418.414 968.063 li
418.414 967.313 li
419.258 967.313 li
419.258 968.063 li
cp
415.902 968.063 mo
415.058 968.063 li
415.058 967.313 li
415.902 967.313 li
415.902 968.063 li
cp
412.545 968.063 mo
411.702 968.063 li
411.702 967.313 li
412.545 967.313 li
412.545 968.063 li
cp
409.189 968.063 mo
408.345 968.063 li
408.345 967.313 li
409.189 967.313 li
409.189 968.063 li
cp
405.833 968.063 mo
404.989 968.063 li
404.989 967.313 li
405.833 967.313 li
405.833 968.063 li
cp
402.477 968.063 mo
401.633 968.063 li
401.633 967.313 li
402.477 967.313 li
402.477 968.063 li
cp
399.12 968.063 mo
398.277 968.063 li
398.277 967.313 li
399.12 967.313 li
399.12 968.063 li
cp
395.764 968.063 mo
394.92 968.063 li
394.92 967.313 li
395.764 967.313 li
395.764 968.063 li
cp
392.408 968.063 mo
391.564 968.063 li
391.564 967.313 li
392.408 967.313 li
392.408 968.063 li
cp
389.052 968.063 mo
388.208 968.063 li
388.208 967.313 li
389.052 967.313 li
389.052 968.063 li
cp
385.695 968.063 mo
384.852 968.063 li
384.852 967.313 li
385.695 967.313 li
385.695 968.063 li
cp
382.339 968.063 mo
381.495 968.063 li
381.495 967.313 li
382.339 967.313 li
382.339 968.063 li
cp
378.983 968.063 mo
378.139 968.063 li
378.139 967.313 li
378.983 967.313 li
378.983 968.063 li
cp
375.627 968.063 mo
374.783 968.063 li
374.783 967.313 li
375.627 967.313 li
375.627 968.063 li
cp
372.27 968.063 mo
371.427 968.063 li
371.427 967.313 li
372.27 967.313 li
372.27 968.063 li
cp
368.914 968.063 mo
368.07 968.063 li
368.07 967.313 li
368.914 967.313 li
368.914 968.063 li
cp
365.558 968.063 mo
364.714 968.063 li
364.714 967.313 li
365.558 967.313 li
365.558 968.063 li
cp
362.202 968.063 mo
361.358 968.063 li
361.358 967.313 li
362.202 967.313 li
362.202 968.063 li
cp
358.845 968.063 mo
358.002 968.063 li
358.002 967.313 li
358.845 967.313 li
358.845 968.063 li
cp
355.489 968.063 mo
354.645 968.063 li
354.645 967.313 li
355.489 967.313 li
355.489 968.063 li
cp
352.133 968.063 mo
351.289 968.063 li
351.289 967.313 li
352.133 967.313 li
352.133 968.063 li
cp
348.777 968.063 mo
347.933 968.063 li
347.933 967.313 li
348.777 967.313 li
348.777 968.063 li
cp
345.42 968.063 mo
344.577 968.063 li
344.577 967.313 li
345.42 967.313 li
345.42 968.063 li
cp
342.064 968.063 mo
341.22 968.063 li
341.22 967.313 li
342.064 967.313 li
342.064 968.063 li
cp
338.708 968.063 mo
337.864 968.063 li
337.864 967.313 li
338.708 967.313 li
338.708 968.063 li
cp
335.352 968.063 mo
334.508 968.063 li
334.508 967.313 li
335.352 967.313 li
335.352 968.063 li
cp
331.995 968.063 mo
331.152 968.063 li
331.152 967.313 li
331.995 967.313 li
331.995 968.063 li
cp
328.639 968.063 mo
327.795 968.063 li
327.795 967.313 li
328.639 967.313 li
328.639 968.063 li
cp
325.283 968.063 mo
324.439 968.063 li
324.439 967.313 li
325.283 967.313 li
325.283 968.063 li
cp
321.927 968.063 mo
321.083 968.063 li
321.083 967.313 li
321.927 967.313 li
321.927 968.063 li
cp
318.57 968.063 mo
317.727 968.063 li
317.727 967.313 li
318.57 967.313 li
318.57 968.063 li
cp
315.214 968.063 mo
314.37 968.063 li
314.37 967.313 li
315.214 967.313 li
315.214 968.063 li
cp
311.858 968.063 mo
311.014 968.063 li
311.014 967.313 li
311.858 967.313 li
311.858 968.063 li
cp
308.502 968.063 mo
307.658 968.063 li
307.658 967.313 li
308.502 967.313 li
308.502 968.063 li
cp
305.145 968.063 mo
304.302 968.063 li
304.302 967.313 li
305.145 967.313 li
305.145 968.063 li
cp
301.789 968.063 mo
300.945 968.063 li
300.945 967.313 li
301.789 967.313 li
301.789 968.063 li
cp
298.433 968.063 mo
297.589 968.063 li
297.589 967.313 li
298.433 967.313 li
298.433 968.063 li
cp
295.077 968.063 mo
294.233 968.063 li
294.233 967.313 li
295.077 967.313 li
295.077 968.063 li
cp
291.72 968.063 mo
290.877 968.063 li
290.877 967.313 li
291.72 967.313 li
291.72 968.063 li
cp
288.364 968.063 mo
287.52 968.063 li
287.52 967.313 li
288.364 967.313 li
288.364 968.063 li
cp
285.008 968.063 mo
284.164 968.063 li
284.164 967.313 li
285.008 967.313 li
285.008 968.063 li
cp
281.652 968.063 mo
280.808 968.063 li
280.808 967.313 li
281.652 967.313 li
281.652 968.063 li
cp
278.295 968.063 mo
277.452 968.063 li
277.452 967.313 li
278.295 967.313 li
278.295 968.063 li
cp
274.939 968.063 mo
274.095 968.063 li
274.095 967.313 li
274.939 967.313 li
274.939 968.063 li
cp
271.583 968.063 mo
270.739 968.063 li
270.739 967.313 li
271.583 967.313 li
271.583 968.063 li
cp
268.227 968.063 mo
267.383 968.063 li
267.383 967.313 li
268.227 967.313 li
268.227 968.063 li
cp
264.87 968.063 mo
264.027 968.063 li
264.027 967.313 li
264.87 967.313 li
264.87 968.063 li
cp
261.514 968.063 mo
260.67 968.063 li
260.67 967.313 li
261.514 967.313 li
261.514 968.063 li
cp
258.158 968.063 mo
257.314 968.063 li
257.314 967.313 li
258.158 967.313 li
258.158 968.063 li
cp
254.802 968.063 mo
253.958 968.063 li
253.958 967.313 li
254.802 967.313 li
254.802 968.063 li
cp
251.445 968.063 mo
250.602 968.063 li
250.602 967.313 li
251.445 967.313 li
251.445 968.063 li
cp
248.089 968.063 mo
247.245 968.063 li
247.245 967.313 li
248.089 967.313 li
248.089 968.063 li
cp
244.733 968.063 mo
243.889 968.063 li
243.889 967.313 li
244.733 967.313 li
244.733 968.063 li
cp
241.377 968.063 mo
240.533 968.063 li
240.533 967.313 li
241.377 967.313 li
241.377 968.063 li
cp
238.02 968.063 mo
237.177 968.063 li
237.177 967.313 li
238.02 967.313 li
238.02 968.063 li
cp
234.664 968.063 mo
233.82 968.063 li
233.82 967.313 li
234.664 967.313 li
234.664 968.063 li
cp
231.308 968.063 mo
230.464 968.063 li
230.464 967.313 li
231.308 967.313 li
231.308 968.063 li
cp
227.952 968.063 mo
227.108 968.063 li
227.108 967.313 li
227.952 967.313 li
227.952 968.063 li
cp
224.595 968.063 mo
223.752 968.063 li
223.752 967.313 li
224.595 967.313 li
224.595 968.063 li
cp
221.239 968.063 mo
220.395 968.063 li
220.395 967.313 li
221.239 967.313 li
221.239 968.063 li
cp
217.883 968.063 mo
217.039 968.063 li
217.039 967.313 li
217.883 967.313 li
217.883 968.063 li
cp
214.527 968.063 mo
213.683 968.063 li
213.683 967.313 li
214.527 967.313 li
214.527 968.063 li
cp
211.17 968.063 mo
210.327 968.063 li
210.327 967.313 li
211.17 967.313 li
211.17 968.063 li
cp
207.814 968.063 mo
206.97 968.063 li
206.97 967.313 li
207.814 967.313 li
207.814 968.063 li
cp
204.458 968.063 mo
203.614 968.063 li
203.614 967.313 li
204.458 967.313 li
204.458 968.063 li
cp
201.102 968.063 mo
200.258 968.063 li
200.258 967.313 li
201.102 967.313 li
201.102 968.063 li
cp
197.745 968.063 mo
196.902 968.063 li
196.902 967.313 li
197.745 967.313 li
197.745 968.063 li
cp
194.389 968.063 mo
193.545 968.063 li
193.545 967.313 li
194.389 967.313 li
194.389 968.063 li
cp
191.033 968.063 mo
190.189 968.063 li
190.189 967.313 li
191.033 967.313 li
191.033 968.063 li
cp
187.677 968.063 mo
186.833 968.063 li
186.833 967.313 li
187.677 967.313 li
187.677 968.063 li
cp
184.32 968.063 mo
183.477 968.063 li
183.477 967.313 li
184.32 967.313 li
184.32 968.063 li
cp
180.964 968.063 mo
180.12 968.063 li
180.12 967.313 li
180.964 967.313 li
180.964 968.063 li
cp
177.608 968.063 mo
176.764 968.063 li
176.764 967.313 li
177.608 967.313 li
177.608 968.063 li
cp
174.252 968.063 mo
173.408 968.063 li
173.408 967.313 li
174.252 967.313 li
174.252 968.063 li
cp
170.895 968.063 mo
170.052 968.063 li
170.052 967.313 li
170.895 967.313 li
170.895 968.063 li
cp
167.539 968.063 mo
166.695 968.063 li
166.695 967.313 li
167.539 967.313 li
167.539 968.063 li
cp
164.183 968.063 mo
163.339 968.063 li
163.339 967.313 li
164.183 967.313 li
164.183 968.063 li
cp
160.827 968.063 mo
159.983 968.063 li
159.983 967.313 li
160.827 967.313 li
160.827 968.063 li
cp
157.47 968.063 mo
156.627 968.063 li
156.627 967.313 li
157.47 967.313 li
157.47 968.063 li
cp
154.114 968.063 mo
153.27 968.063 li
153.27 967.313 li
154.114 967.313 li
154.114 968.063 li
cp
150.758 968.063 mo
149.914 968.063 li
149.914 967.313 li
150.758 967.313 li
150.758 968.063 li
cp
147.402 968.063 mo
146.558 968.063 li
146.558 967.313 li
147.402 967.313 li
147.402 968.063 li
cp
144.045 968.063 mo
143.202 968.063 li
143.202 967.313 li
144.045 967.313 li
144.045 968.063 li
cp
140.689 968.063 mo
139.845 968.063 li
139.845 967.313 li
140.689 967.313 li
140.689 968.063 li
cp
137.333 968.063 mo
136.489 968.063 li
136.489 967.313 li
137.333 967.313 li
137.333 968.063 li
cp
133.977 968.063 mo
133.133 968.063 li
133.133 967.313 li
133.977 967.313 li
133.977 968.063 li
cp
130.62 968.063 mo
129.777 968.063 li
129.777 967.313 li
130.62 967.313 li
130.62 968.063 li
cp
127.264 968.063 mo
126.42 968.063 li
126.42 967.313 li
127.264 967.313 li
127.264 968.063 li
cp
123.908 968.063 mo
123.064 968.063 li
123.064 967.313 li
123.908 967.313 li
123.908 968.063 li
cp
120.552 968.063 mo
119.708 968.063 li
119.708 967.313 li
120.552 967.313 li
120.552 968.063 li
cp
117.195 968.063 mo
116.352 968.063 li
116.352 967.313 li
117.195 967.313 li
117.195 968.063 li
cp
113.839 968.063 mo
112.995 968.063 li
112.995 967.313 li
113.839 967.313 li
113.839 968.063 li
cp
110.483 968.063 mo
109.639 968.063 li
109.639 967.313 li
110.483 967.313 li
110.483 968.063 li
cp
107.127 968.063 mo
106.283 968.063 li
106.283 967.313 li
107.127 967.313 li
107.127 968.063 li
cp
103.77 968.063 mo
102.927 968.063 li
102.927 967.313 li
103.77 967.313 li
103.77 968.063 li
cp
100.414 968.063 mo
99.5704 968.063 li
99.5704 967.313 li
100.414 967.313 li
100.414 968.063 li
cp
97.058 968.063 mo
96.2142 968.063 li
96.2142 967.313 li
97.058 967.313 li
97.058 968.063 li
cp
93.7017 968.063 mo
92.8579 968.063 li
92.8579 967.313 li
93.7017 967.313 li
93.7017 968.063 li
cp
90.3455 968.063 mo
89.5017 968.063 li
89.5017 967.313 li
90.3455 967.313 li
90.3455 968.063 li
cp
86.9892 968.063 mo
86.9624 968.063 li
86.6219 968.063 86.2962 967.997 85.9852 967.868 cv
86.2742 967.176 li
86.4927 967.267 86.7221 967.313 86.9624 967.313 cv
86.9892 967.313 li
86.9892 968.063 li
cp
84.4349 965.502 mo
84.4349 964.658 li
85.1849 964.658 li
85.1849 965.502 li
84.4349 965.502 li
cp
84.4349 962.146 mo
84.4349 961.302 li
85.1849 961.302 li
85.1849 962.146 li
84.4349 962.146 li
cp
84.4349 958.789 mo
84.4349 957.946 li
85.1849 957.946 li
85.1849 958.789 li
84.4349 958.789 li
cp
84.4349 955.433 mo
84.4349 954.96 li
84.4349 954.608 84.504 954.273 84.6422 953.953 cv
85.3306 954.251 li
85.2335 954.475 85.1849 954.712 85.1849 954.96 cv
85.1849 955.433 li
84.4349 955.433 li
cp
.33872 .685634 1 .2963 cmyk
f
.75 lw
307.027 967.957 mo
290.482 986.002 281.122 1007.13 306.322 1033.8 cv
.428534 .348058 .352331 .0131533 cmyk
@
299.628 1030.43 mo
302.723 1031.59 305.214 1032.98 307.1 1034.61 cv
305.538 1032.67 304.229 1030.13 303.175 1027 cv
1 lw
gsave
[-.52137 -.539141 .539141 -.52137 307.1 1034.61 ]ct
@
grestore newpath
.75 lw
122.122 814.312 mo
203.22 864.555 286.785 950.198 299.625 1040.82 cv
.107546 1 1 .0573129 cmyk
@
296.28 1034.39 mo
298.083 1037.16 299.261 1039.76 299.812 1042.19 cv
299.707 1039.7 300.16 1036.88 301.171 1033.73 cv
1 lw
gsave
[-.0994518 -.743377 .743377 -.0994518 299.812 1042.19 ]ct
@
grestore newpath
.75 lw
346.56 1004.56 mo
399.81 1004.56 li
.0299992 .399451 1 0 cmyk
@
393.115 1007.03 mo
396.1 1005.61 398.832 1004.79 401.312 1004.56 cv
398.832 1004.34 396.1 1003.51 393.115 1002.09 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 401.312 1004.56 ]ct
@
grestore newpath
.75 lw
96.1499 866.512 mo
96.0674 893.182 li
.428534 .348058 .352331 .0131533 cmyk
@
93.6207 886.48 mo
95.0313 889.469 95.8452 892.204 96.0624 894.685 cv
96.2952 892.206 97.1263 889.476 98.5557 886.495 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 96.0624 894.685 ]ct
@
grestore newpath
.75 lw
516.9 866.512 mo
516.81 996.307 li
@
514.351 989.611 mo
515.768 992.597 516.589 995.33 516.812 997.81 cv
517.039 995.33 517.863 992.598 519.286 989.614 cv
1 lw
gsave
[.000523599 -.75 .75 .000523599 516.812 997.81 ]ct
@
grestore newpath
.75 lw
95.3999 823.762 mo
95.3174 850.432 li
@
92.8707 843.73 mo
94.2813 846.719 95.0952 849.454 95.3124 851.935 cv
95.5452 849.456 96.3763 846.726 97.8057 843.745 cv
1 lw
gsave
[.00235619 -.749996 .749996 .00235619 95.3124 851.935 ]ct
@
grestore newpath
.75 lw
517.05 1011.11 mo
517.095 1033.11 li
@
514.615 1026.42 mo
516.042 1029.4 516.87 1032.13 517.1 1034.61 cv
517.32 1032.13 518.137 1029.4 519.55 1026.41 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 517.1 1034.61 ]ct
@
grestore newpath
.75 lw
411.3 1011.11 mo
411.345 1033.11 li
@
408.865 1026.42 mo
410.292 1029.4 411.12 1032.13 411.35 1034.61 cv
411.57 1032.13 412.387 1029.4 413.8 1026.41 cv
1 lw
gsave
[-.0015708 -.749998 .749998 -.0015708 411.35 1034.61 ]ct
@
grestore newpath
.75 lw
346.56 1004.56 mo
403.342 1029.68 460.8 1030.55 505.702 1004.45 cv
.0299992 .399451 1 0 cmyk
@
500.563 1010.35 mo
502.415 1007.61 504.352 1005.51 506.375 1004.06 cv
504.124 1005.12 501.352 1005.8 498.059 1006.09 cv
1 lw
gsave
[-.646288 .380541 -.380541 -.646288 506.375 1004.06 ]ct
@
grestore newpath
.75 lw
122.122 814.312 mo
248.122 853.807 399.877 931.56 407.377 1035.06 cv
.107546 1 1 .0573129 cmyk
@
404.322 1027.06 mo
405.954 1029.94 406.971 1032.6 407.375 1035.06 cv
407.42 1032.57 408.043 1029.79 409.244 1026.71 cv
1 lw
gsave
[-.0541453 -.748043 .748043 -.0541453 407.375 1035.06 ]ct
@
grestore newpath
.75 lw
122.122 814.312 mo
258.622 842.557 515.152 903.757 513.127 1034.56 cv
@
510.785 1026.33 mo
512.158 1029.33 512.938 1032.08 513.125 1034.56 cv
513.388 1032.08 514.253 1029.36 515.719 1026.4 cv
1 lw
gsave
[.0116496 -.74991 .74991 .0116496 513.125 1034.56 ]ct
@
grestore newpath
.75 lw
136.56 860.557 mo
189.81 860.557 li
.0299992 .399451 1 0 cmyk
@
183.115 863.027 mo
186.1 861.607 188.832 860.785 191.312 860.56 cv
188.832 860.335 186.1 859.512 183.115 858.092 cv
1 lw
gsave
[-.75 9.18485e-17 -9.18486e-17 -.75 191.312 860.56 ]ct
@
grestore newpath
grestore
gsave
-180.75 711.81 mo
1475.25 711.81 li
1475.25 1097.31 li
-180.75 1097.31 li
cp
eclp
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
300.199 1046.77 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
309.422 1041.81 mo
(!)sh
315.857 1041.81 mo
(")sh
319.32 1041.81 mo
(#)sh
323.273 1041.81 mo
($)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
89.5195 963.517 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
111.211 963.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
114.386 963.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
98.7421 958.56 mo
(")sh
102.696 958.56 mo
(#)sh
106.319 958.56 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
121.84 966.06 mo
(!)sh
126.293 966.06 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
87.7734 1007.31 mo
(%)sh
93.6639 1007.31 mo
(")sh
99.3121 1007.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
104.262 1007.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
109.98 1007.31 mo
(')sh
114.927 1007.31 mo
(\()sh
121.29 1007.31 mo
(\))sh
128.366 1007.31 mo
(#)sh
89.2734 906.517 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
112.184 906.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
115.358 906.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
102.023 901.56 mo
(&)sh
105.486 901.56 mo
(+)sh
108.949 901.56 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
122.812 909.06 mo
(!)sh
127.266 909.06 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
108.009 936.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
99.3749 984.81 mo
(%)sh
103.829 984.81 mo
(&)sh
98.4726 927.81 mo
(%)sh
102.926 927.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
194.519 963.517 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
216.211 963.517 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
219.386 963.517 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
203.742 958.56 mo
(")sh
207.696 958.56 mo
(#)sh
211.319 958.56 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
226.84 965.31 mo
(!)sh
231.293 965.31 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
192.773 1006.56 mo
(%)sh
198.664 1006.56 mo
(")sh
204.312 1006.56 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
209.262 1006.56 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
214.98 1006.56 mo
(')sh
219.927 1006.56 mo
(\()sh
226.29 1006.56 mo
(\))sh
233.366 1006.56 mo
(#)sh
194.273 905.767 mo
(*)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
217.184 905.767 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
220.358 905.767 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
207.023 900.81 mo
(&)sh
210.486 900.81 mo
(+)sh
213.949 900.81 mo
(,)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
227.812 908.31 mo
(#)sh
232.266 908.31 mo
(!)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
213.009 936.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
204.375 984.06 mo
(%)sh
208.829 984.06 mo
(&)sh
203.473 927.81 mo
(%)sh
207.926 927.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
299.894 964.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
321.586 964.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
324.761 964.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
309.117 959.31 mo
(")sh
313.071 959.31 mo
(#)sh
316.694 959.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
332.215 966.06 mo
(#)sh
336.668 966.06 mo
(!)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
298.148 1007.31 mo
(%)sh
304.039 1007.31 mo
(")sh
309.687 1007.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
314.637 1007.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
320.355 1007.31 mo
(')sh
325.302 1007.31 mo
(\()sh
331.665 1007.31 mo
(\))sh
338.741 1007.31 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
318.759 936.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
309.75 984.81 mo
(%)sh
314.203 984.81 mo
(&)sh
308.848 927.81 mo
(%)sh
313.301 927.81 mo
(&)sh
.982818 .740505 .203769 .0532235 cmyk
UUNUIP+*1 [8.925 0 0 -8.925 0 0 ]msf
294.07 717.81 mo
( )sh
298.024 717.81 mo
(!)sh
302.147 717.81 mo
(")sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
317.918 718.56 mo
( )sh
321.381 718.56 mo
(!)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
372.516 717.81 mo
( )sh
376.139 717.81 mo
(!)sh
380.093 717.81 mo
(")sh
385.046 717.81 mo
(#)sh
388.509 717.81 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
392.238 719.31 mo
(%)sh
395.125 719.31 mo
(!)sh
397.892 719.31 mo
(#)sh
400.316 719.31 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
341.695 720.81 mo
( )sh
345.319 720.81 mo
(!)sh
349.273 720.81 mo
(")sh
354.226 720.81 mo
(#)sh
357.689 720.81 mo
($)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
268.195 927.06 mo
( )sh
271.658 927.06 mo
(!)sh
UUNUIV+*1 [8.925 0 0 -8.925 0 0 ]msf
278.093 927.06 mo
( )sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
283.289 927.06 mo
(&)sh
286.752 927.06 mo
(-)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
280.324 927.06 mo
($)sh
291.668 927.06 mo
(%)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
247.723 978.81 mo
( )sh
251.346 978.81 mo
(!)sh
255.3 978.81 mo
(")sh
260.253 978.81 mo
(#)sh
263.716 978.81 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
267.445 980.31 mo
(%)sh
270.332 980.31 mo
(!)sh
273.099 980.31 mo
(#)sh
275.523 980.31 mo
($)sh
.791409 .327764 1 .227756 cmyk
UUNUIX+*1 [8.925 0 0 -8.925 0 0 ]msf
50.1796 904.56 mo
( )sh
54.6332 904.56 mo
(!)sh
58.587 904.56 mo
(")sh
61.5501 904.56 mo
(")sh
64.5132 904.56 mo
(#)sh
67.976 904.56 mo
($)sh
71.4389 904.56 mo
(%)sh
UUNUIX+*1 [6.2475 0 0 -6.2475 0 0 ]msf
76.6523 905.31 mo
($)sh
79.0763 905.31 mo
(#)sh
81.5003 905.31 mo
(&)sh
.33872 .685634 1 .2963 cmyk
UUNUIZ+*1 [8.925 0 0 -8.925 0 0 ]msf
47.1796 963.06 mo
( )sh
51.6332 963.06 mo
(!)sh
55.587 963.06 mo
(")sh
58.5501 963.06 mo
(")sh
61.5132 963.06 mo
(#)sh
64.976 963.06 mo
($)sh
68.4389 963.06 mo
(%)sh
UUNUIZ+*1 [6.2475 0 0 -6.2475 0 0 ]msf
73.6523 963.81 mo
(!)sh
76.4199 963.81 mo
(&)sh
78.9564 963.81 mo
(')sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
282 988.56 mo
(%)sh
286.453 988.56 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
190.324 798.81 mo
(.)sh
198.598 798.81 mo
(/)sh
205.597 798.81 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
214.513 798.81 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
217.371 798.81 mo
(1)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
226.289 798.81 mo
(&)sh
231.434 798.81 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
234.291 798.81 mo
(%)sh
239.592 798.81 mo
(,)sh
242.771 798.81 mo
(2)sh
247.854 798.81 mo
(#)sh
252.513 798.81 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
257.883 798.81 mo
( )sh
260.741 798.81 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
270.516 799.56 mo
(.)sh
278.789 799.56 mo
(/)sh
285.789 799.56 mo
(0)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
294.705 799.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
297.562 799.56 mo
(\))sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
303.937 799.56 mo
(&)sh
309.082 799.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
311.939 799.56 mo
(%)sh
317.241 799.56 mo
(,)sh
320.419 799.56 mo
(2)sh
325.503 799.56 mo
(#)sh
330.161 799.56 mo
(3)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
335.532 799.56 mo
( )sh
338.389 799.56 mo
(#)sh
344.115 799.56 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
88.4999 1038.81 mo
(4)sh
92.3096 1038.81 mo
(5)sh
98.0356 1038.81 mo
(&)sh
102.488 1038.81 mo
(+)sh
106.94 1038.81 mo
(")sh
112.024 1038.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
117.75 1038.81 mo
( )sh
120.607 1038.81 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
193.5 1038.81 mo
(4)sh
197.31 1038.81 mo
(5)sh
203.036 1038.81 mo
(&)sh
207.488 1038.81 mo
(+)sh
211.94 1038.81 mo
(")sh
217.024 1038.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
222.75 1038.81 mo
( )sh
225.607 1038.81 mo
(#)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
298.746 828.06 mo
(4)sh
302.556 828.06 mo
(5)sh
308.282 828.06 mo
(&)sh
312.734 828.06 mo
(+)sh
317.186 828.06 mo
(")sh
322.27 828.06 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
327.996 828.06 mo
( )sh
330.853 828.06 mo
(!)sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
403.746 828.81 mo
(4)sh
407.556 828.81 mo
(5)sh
413.282 828.81 mo
(&)sh
417.734 828.81 mo
(+)sh
422.186 828.81 mo
(")sh
427.27 828.81 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
432.996 828.81 mo
( )sh
435.853 828.81 mo
(#)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
364.418 1002.06 mo
( )sh
367.881 1002.06 mo
(!)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
508.371 828.06 mo
(4)sh
512.181 828.06 mo
(5)sh
517.907 828.06 mo
(&)sh
522.359 828.06 mo
(+)sh
526.811 828.06 mo
(")sh
531.895 828.06 mo
(6)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
537.621 828.06 mo
( )sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
540.478 828.06 mo
(4)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
544.629 830.31 mo
(')sh
UUNUIJ+*1 [11.475 0 0 -11.475 0 0 ]msf
512.191 843.06 mo
(4)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
521.051 843.06 mo
( )sh
UUNUIN+*1 [11.475 0 0 -11.475 0 0 ]msf
527.344 843.06 mo
(!)sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
538.465 843.06 mo
( )sh
546.291 843.06 mo
(!)sh
552.017 843.06 mo
(")sh
555.918 843.06 mo
(#)sh
558.638 843.06 mo
($)sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
564.547 843.06 mo
(\()sh
UUNUJB+*1 [11.475 0 0 -11.475 0 0 ]msf
570.273 843.06 mo
(%)sh
574.657 843.06 mo
(&)sh
577.376 843.06 mo
(')sh
582.345 843.06 mo
(\()sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
508.371 843.06 mo
($)sh
UUNUIL+*1 [8.0325 0 0 -8.0325 0 0 ]msf
516.351 845.31 mo
(')sh
UUNUIL+*1 [11.475 0 0 -11.475 0 0 ]msf
587.437 843.06 mo
(%)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
508.148 1007.31 mo
(%)sh
514.039 1007.31 mo
(")sh
519.687 1007.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
524.637 1007.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
530.355 1007.31 mo
(')sh
535.302 1007.31 mo
(\()sh
541.665 1007.31 mo
(\))sh
548.741 1007.31 mo
(#)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
87.3749 821.017 mo
(')sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
100.125 816.06 mo
(!)sh
106.56 816.06 mo
(")sh
110.023 816.06 mo
(#)sh
113.977 816.06 mo
($)sh
205.793 879.81 mo
(%)sh
210.246 879.81 mo
(&)sh
99.2929 879.81 mo
(%)sh
103.746 879.81 mo
(&)sh
520.043 918.81 mo
(%)sh
524.496 918.81 mo
(&)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIF+ArialMT*1 [11.25 0 0 -11.25 0 0 ]msf
-163.5 754.56 mo
(\(0,0,0\)<>\(1,1,0\))sh
-163.5 770.31 mo
(\(0,0,0\)<>\(1,1,1\))sh
-163.5 786.06 mo
(\(0,0,0\)<>\(1,1,2\))sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
508.148 863.31 mo
(\()sh
514.039 863.31 mo
(#)sh
519.687 863.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
524.637 863.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
530.355 863.31 mo
(*)sh
535.302 863.31 mo
(+)sh
541.665 863.31 mo
(,)sh
548.741 863.31 mo
(-)sh
403.148 863.31 mo
(\()sh
409.039 863.31 mo
(#)sh
414.687 863.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
419.637 863.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
425.355 863.31 mo
(*)sh
430.302 863.31 mo
(+)sh
436.665 863.31 mo
(,)sh
443.741 863.31 mo
(-)sh
298.148 863.31 mo
(\()sh
304.039 863.31 mo
(#)sh
309.687 863.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
314.637 863.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
320.355 863.31 mo
(*)sh
325.302 863.31 mo
(+)sh
331.665 863.31 mo
(,)sh
338.741 863.31 mo
(-)sh
193.148 863.31 mo
(\()sh
199.039 863.31 mo
(#)sh
204.687 863.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
209.637 863.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
215.355 863.31 mo
(*)sh
220.302 863.31 mo
(+)sh
226.665 863.31 mo
(,)sh
233.741 863.31 mo
(-)sh
88.1484 863.31 mo
(\()sh
94.0389 863.31 mo
(#)sh
99.6871 863.31 mo
(\))sh
UUNUJD+*1 [12.75 0 0 -12.75 0 0 ]msf
104.637 863.31 mo
( )sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
110.355 863.31 mo
(*)sh
115.302 863.31 mo
(+)sh
121.665 863.31 mo
(,)sh
128.741 863.31 mo
(-)sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
98.5429 837.06 mo
(%)sh
102.996 837.06 mo
(&)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
423.668 1020.81 mo
( )sh
427.131 1020.81 mo
(!)sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
510.199 1046.77 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
519.422 1041.81 mo
(!)sh
525.857 1041.81 mo
(")sh
529.32 1041.81 mo
(#)sh
533.273 1041.81 mo
($)sh
309.891 1022.31 mo
(%)sh
314.344 1022.31 mo
(&)sh
519.89 1022.31 mo
(%)sh
524.344 1022.31 mo
(&)sh
UUNUIH+*1 [12.75 0 0 -12.75 0 0 ]msf
404.449 1046.77 mo
( )sh
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
413.672 1041.81 mo
(!)sh
420.107 1041.81 mo
(")sh
423.57 1041.81 mo
(#)sh
427.523 1041.81 mo
($)sh
414.141 1022.31 mo
(%)sh
418.594 1022.31 mo
(&)sh
.107546 1 1 .0573129 cmyk
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
348.973 929.31 mo
( )sh
352.596 929.31 mo
(!)sh
356.55 929.31 mo
(")sh
361.503 929.31 mo
(#)sh
364.966 929.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
368.695 930.81 mo
(%)sh
371.582 930.81 mo
(!)sh
374.349 930.81 mo
(#)sh
376.773 930.81 mo
($)sh
UUNUIT+*1 [8.925 0 0 -8.925 0 0 ]msf
444.223 923.31 mo
( )sh
447.846 923.31 mo
(!)sh
451.8 923.31 mo
(")sh
456.753 923.31 mo
(#)sh
460.216 923.31 mo
($)sh
UUNUIT+*1 [6.2475 0 0 -6.2475 0 0 ]msf
463.945 924.81 mo
(%)sh
466.832 924.81 mo
(!)sh
469.599 924.81 mo
(#)sh
472.023 924.81 mo
($)sh
.749844 .679255 .654902 .901945 cmyk
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
404.519 964.267 mo
( )sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
426.211 964.267 mo
( )sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
429.386 964.267 mo
(!)sh
UUNUIJ+*1 [8.925 0 0 -8.925 0 0 ]msf
413.742 959.31 mo
(")sh
417.696 959.31 mo
(#)sh
421.319 959.31 mo
($)sh
UUNUIL+*1 [8.925 0 0 -8.925 0 0 ]msf
436.84 966.06 mo
(#)sh
441.293 966.06 mo
(#)sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
402.773 1007.31 mo
(%)sh
408.664 1007.31 mo
(")sh
414.312 1007.31 mo
(&)sh
UUNUIL+*1 [12.75 0 0 -12.75 0 0 ]msf
419.262 1007.31 mo
(")sh
UUNUIJ+*1 [12.75 0 0 -12.75 0 0 ]msf
424.98 1007.31 mo
(')sh
429.927 1007.31 mo
(\()sh
436.29 1007.31 mo
(\))sh
443.366 1007.31 mo
(#)sh
UUNUIN+*1 [.0222529 12.75 12.75 -.0222529 0 0 ]msf
423.009 936.902 mo
( )sh
.685756 .61828 .606409 .522393 cmyk
UUNUIH+*1 [8.925 0 0 -8.925 0 0 ]msf
414.375 984.81 mo
(%)sh
418.828 984.81 mo
(&)sh
413.473 927.81 mo
(%)sh
417.926 927.81 mo
(&)sh
.318059 .580713 1 .170962 cmyk
UUNUIR+*1 [8.925 0 0 -8.925 0 0 ]msf
154.418 858.06 mo
( )sh
157.881 858.06 mo
(!)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/UUNUJD+*1 uf
/UUNUJD+ uf
/ uf
/UUNUIX+*1 uf
/UUNUIX+ uf
/ uf
/UUNUIV+*1 uf
/UUNUIV+ uf
/ uf
/UUNUIN+*1 uf
/UUNUIN+ uf
/ uf
/UUNUIZ+*1 uf
/UUNUIZ+ uf
/ uf
/UUNUIR+*1 uf
/UUNUIR+ uf
/ uf
/UUNUIT+*1 uf
/UUNUIT+ uf
/ uf
/UUNUIP+*1 uf
/UUNUIP+ uf
/ uf
/UUNUJB+*1 uf
/UUNUJB+ uf
/ uf
/UUNUIJ+*1 uf
/UUNUIJ+ uf
/ uf
/UUNUIF+ArialMT*1 uf
/UUNUIF+ArialMT uf
/JHAAAA+ArialMT uf
/UUNUIL+*1 uf
/UUNUIL+ uf
/ uf
/UUNUIH+*1 uf
/UUNUIH+ uf
/ uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
